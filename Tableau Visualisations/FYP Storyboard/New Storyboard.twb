<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0615.1128                               -->
<workbook original-version='18.1' source-build='2018.1.2 (20181.18.0615.1128)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Data ((TP) Resturants with the Food (Top 10))' inline='true' name='federated.1i9dtkq12hler81dnwt3v1exon9t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(TP) Resturants with the Food (Top 10) Filter3 (donovan)' name='excel-direct.1bxg43b0u81f5l0ztbgah1nwxrts'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Tableau Visualisations/Overall trending gradient with filters.twb Files/Data/Desktop/(TP) Resturants with the Food (Top 10) Filter3 (donovan).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='(TP) Resturants with the Food (Top 10)' name='excel-direct.1ix4ofr0mfys5i15zp6s61hmzejx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Tableau Visualisations/Overall trending gradient with filters.twb Files/Data/Desktop/(TP) Resturants with the Food (Top 10) Filter3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='(TP) From2016 Insights (RAWFreq)' name='excel-direct.00anbvf15ynd3x11ukzp91rursgx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Tableau Visualisations/Overall trending gradient with filters.twb Files/Data/Downloads 1/(TP) From2016 Insights (RAWFreq).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Data].[Food]' />
              <expression op='[Data2].[Food_Items]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[Data].[Cafe_Name]' />
                  <expression op='[Data1].[Cafe_Name]' />
                </expression>
                <expression op='='>
                  <expression op='[Data].[Food]' />
                  <expression op='[Data1].[Food]' />
                </expression>
              </expression>
            </clause>
            <relation connection='excel-direct.1ix4ofr0mfys5i15zp6s61hmzejx' name='Data' table='[Data$]' type='table'>
              <columns gridOrigin='A1:E49:no:A1:E49:0' header='yes' outcome='2'>
                <column datatype='string' name='Food' ordinal='0' />
                <column datatype='string' name='Cafe_Name' ordinal='1' />
                <column datatype='integer' name='Count' ordinal='2' />
                <column datatype='real' name='Average_Sentimentality' ordinal='3' />
                <column datatype='string' name='Average Price' ordinal='4' />
              </columns>
            </relation>
            <relation connection='excel-direct.1bxg43b0u81f5l0ztbgah1nwxrts' name='Data1' table='[Data$]' type='table'>
              <columns gridOrigin='A1:F49:no:A1:F49:0' header='yes' outcome='2'>
                <column datatype='string' name='Food' ordinal='0' />
                <column datatype='string' name='Cafe_Name' ordinal='1' />
                <column datatype='integer' name='Count' ordinal='2' />
                <column datatype='real' name='Average_Sentimentality' ordinal='3' />
                <column datatype='integer' name='Average Price' ordinal='4' />
                <column datatype='string' name='F6' ordinal='5' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.00anbvf15ynd3x11ukzp91rursgx' name='Data2' table='[Data$]' type='table'>
            <columns gridOrigin='A1:J11:no:A1:J11:0' header='yes' outcome='6'>
              <column datatype='string' name='Food_Items' ordinal='0' />
              <column datatype='integer' name='Count' ordinal='1' />
              <column datatype='string' name='Negative Reviews' ordinal='2' />
              <column datatype='string' name='Neutal Reviews' ordinal='3' />
              <column datatype='string' name='Positive Reviews' ordinal='4' />
              <column datatype='real' name='Polarity of Negative Reviews' ordinal='5' />
              <column datatype='real' name='Polarity of Neutral' ordinal='6' />
              <column datatype='real' name='Polarity off Positive Reviews' ordinal='7' />
              <column datatype='string' name='Positive Insights' ordinal='8' />
              <column datatype='string' name='Negative Insights' ordinal='9' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Average Price (Data1)]' value='[Data1].[Average Price]' />
          <map key='[Average Price]' value='[Data].[Average Price]' />
          <map key='[Average_Sentimentality (Data1)]' value='[Data1].[Average_Sentimentality]' />
          <map key='[Average_Sentimentality]' value='[Data].[Average_Sentimentality]' />
          <map key='[Cafe_Name (Data1)]' value='[Data1].[Cafe_Name]' />
          <map key='[Cafe_Name]' value='[Data].[Cafe_Name]' />
          <map key='[Count (Data1)]' value='[Data1].[Count]' />
          <map key='[Count (Data2)]' value='[Data2].[Count]' />
          <map key='[Count]' value='[Data].[Count]' />
          <map key='[F6]' value='[Data1].[F6]' />
          <map key='[Food (Data1)]' value='[Data1].[Food]' />
          <map key='[Food]' value='[Data].[Food]' />
          <map key='[Food_Items]' value='[Data2].[Food_Items]' />
          <map key='[Negative Insights]' value='[Data2].[Negative Insights]' />
          <map key='[Negative Reviews]' value='[Data2].[Negative Reviews]' />
          <map key='[Neutal Reviews]' value='[Data2].[Neutal Reviews]' />
          <map key='[Polarity of Negative Reviews]' value='[Data2].[Polarity of Negative Reviews]' />
          <map key='[Polarity of Neutral]' value='[Data2].[Polarity of Neutral]' />
          <map key='[Polarity off Positive Reviews]' value='[Data2].[Polarity off Positive Reviews]' />
          <map key='[Positive Insights]' value='[Data2].[Positive Insights]' />
          <map key='[Positive Reviews]' value='[Data2].[Positive Reviews]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Food</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Food]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Food</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cafe_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cafe_Name]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Cafe_Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_Sentimentality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average_Sentimentality]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Average_Sentimentality</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Price</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Average Price]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Average Price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E49:no:A1:E49:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Food (Data1)]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>Food</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cafe_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cafe_Name (Data1)]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>Cafe_Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count (Data1)]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_Sentimentality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average_Sentimentality (Data1)]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>Average_Sentimentality</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average Price (Data1)]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>Average Price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F49:no:A1:F49:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food_Items</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Food_Items]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Food_Items</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count (Data2)]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative Reviews</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Negative Reviews]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Negative Reviews</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neutal Reviews</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Neutal Reviews]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Neutal Reviews</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Reviews</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive Reviews]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Positive Reviews</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Polarity of Negative Reviews</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Polarity of Negative Reviews]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Polarity of Negative Reviews</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Polarity of Neutral</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Polarity of Neutral]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Polarity of Neutral</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Polarity off Positive Reviews</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Polarity off Positive Reviews]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Polarity off Positive Reviews</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Insights</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive Insights]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Positive Insights</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative Insights</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Negative Insights]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Negative Insights</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J11:no:A1:J11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Average Price (Data1)]' role='dimension' type='ordinal' />
      <column caption='Average Sentimentality (Data1)' datatype='real' name='[Average_Sentimentality (Data1)]' role='measure' type='quantitative' />
      <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
      <column caption='Cafe Name (Data1)' datatype='string' name='[Cafe_Name (Data1)]' role='dimension' type='nominal' />
      <column caption='Cafes that serve the item' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
      <column datatype='string' name='[Food (Data1)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Food]' role='dimension' type='nominal' />
      <column caption='Food Items' datatype='string' name='[Food_Items]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <group caption='Action (Average Price (Data1),Cafes that serve the item,Food (Data1))' hidden='true' name='[Action (Average Price (Data1),Cafes that serve the item,Food (Data1))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Average Price (Data1)]' />
          <groupfilter function='level-members' level='[Cafe_Name]' />
          <groupfilter function='level-members' level='[Food (Data1)]' />
        </groupfilter>
      </group>
      <group caption='Action (Food)' hidden='true' name='[Action (Food)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Food]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Food)' hidden='true' name='[Tooltip (Food)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Food]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.724199' measure-ordering='alphabetic' measure-percentage='0.275801' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data ((TP) Resturants with the Food)' inline='true' name='federated.1aga11k1ekosjx135ngez1ayruag' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(TP) Food Items in Quarters (2)' name='excel-direct.0zt9kcz10oquch17xhkoc0dd0qrz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Tableau Visualisations/Overall trending gradient with filters.twb Files/Data/Downloads 1/(TP) Food Items in Quarters (2).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='(TP) From2016 Insights (TrendPolarity)' name='excel-direct.0uiarp30x1vmzb1fnjf16005dlu5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Tableau Visualisations/Overall trending gradient with filters.twb Files/Data/Downloads 1/(TP) From2016 Insights (TrendPolarity).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='(TP) Resturants with the Food' name='excel-direct.16k5o2r12372hy104d5551bjz55k'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Tableau Visualisations/Overall trending gradient with filters.twb Files/Data/Downloads 1/(TP) Resturants with the Food.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Data].[Food]' />
              <expression op='[Data2].[Food_Items]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Data].[Food]' />
                <expression op='[Data1].[Keyword]' />
              </expression>
            </clause>
            <relation connection='excel-direct.16k5o2r12372hy104d5551bjz55k' name='Data' table='[Data$]' type='table'>
              <columns gridOrigin='A1:E81:no:A1:E81:0' header='yes' outcome='6'>
                <column datatype='string' name='Food' ordinal='0' />
                <column datatype='string' name='Cafe_Name' ordinal='1' />
                <column datatype='integer' name='Count' ordinal='2' />
                <column datatype='real' name='Average_Sentimentality' ordinal='3' />
                <column datatype='real' name='F5' ordinal='4' />
              </columns>
            </relation>
            <relation connection='excel-direct.0zt9kcz10oquch17xhkoc0dd0qrz' name='Data1' table='[Data$]' type='table'>
              <columns gridOrigin='A1:D1909:no:A1:D1909:0' header='yes' outcome='6'>
                <column datatype='string' name='Keyword' ordinal='0' />
                <column datatype='date' name='QYearList' ordinal='1' />
                <column datatype='integer' name='Count' ordinal='2' />
                <column datatype='real' name='Average Polarity' ordinal='3' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0uiarp30x1vmzb1fnjf16005dlu5' name='Data2' table='[Data$]' type='table'>
            <columns gridOrigin='A1:J11:no:A1:J11:0' header='yes' outcome='2'>
              <column datatype='string' name='Food_Items' ordinal='0' />
              <column datatype='integer' name='Count' ordinal='1' />
              <column datatype='string' name='Negative Reviews' ordinal='2' />
              <column datatype='string' name='Neutal Reviews' ordinal='3' />
              <column datatype='string' name='Positive Reviews' ordinal='4' />
              <column datatype='real' name='Polarity of Negative Reviews' ordinal='5' />
              <column datatype='real' name='Polarity of Neutral' ordinal='6' />
              <column datatype='real' name='Polarity off Positive Reviews' ordinal='7' />
              <column datatype='string' name='Positive Insights' ordinal='8' />
              <column datatype='string' name='Negative Insights' ordinal='9' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Average Polarity]' value='[Data1].[Average Polarity]' />
          <map key='[Average_Sentimentality]' value='[Data].[Average_Sentimentality]' />
          <map key='[Cafe_Name]' value='[Data].[Cafe_Name]' />
          <map key='[Count (Data1)]' value='[Data1].[Count]' />
          <map key='[Count (Data2)]' value='[Data2].[Count]' />
          <map key='[Count]' value='[Data].[Count]' />
          <map key='[F5]' value='[Data].[F5]' />
          <map key='[Food]' value='[Data].[Food]' />
          <map key='[Food_Items]' value='[Data2].[Food_Items]' />
          <map key='[Keyword]' value='[Data1].[Keyword]' />
          <map key='[Negative Insights]' value='[Data2].[Negative Insights]' />
          <map key='[Negative Reviews]' value='[Data2].[Negative Reviews]' />
          <map key='[Neutal Reviews]' value='[Data2].[Neutal Reviews]' />
          <map key='[Polarity of Negative Reviews]' value='[Data2].[Polarity of Negative Reviews]' />
          <map key='[Polarity of Neutral]' value='[Data2].[Polarity of Neutral]' />
          <map key='[Polarity off Positive Reviews]' value='[Data2].[Polarity off Positive Reviews]' />
          <map key='[Positive Insights]' value='[Data2].[Positive Insights]' />
          <map key='[Positive Reviews]' value='[Data2].[Positive Reviews]' />
          <map key='[QYearList]' value='[Data1].[QYearList]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Food</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Food]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Food</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cafe_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cafe_Name]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Cafe_Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_Sentimentality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average_Sentimentality]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Average_Sentimentality</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E81:no:A1:E81:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Keyword</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Keyword]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>Keyword</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QYearList</remote-name>
            <remote-type>7</remote-type>
            <local-name>[QYearList]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>QYearList</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count (Data1)]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Polarity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Polarity]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>Average Polarity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1909:no:A1:D1909:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food_Items</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Food_Items]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Food_Items</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count (Data2)]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative Reviews</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Negative Reviews]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Negative Reviews</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neutal Reviews</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Neutal Reviews]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Neutal Reviews</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Reviews</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive Reviews]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Positive Reviews</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Polarity of Negative Reviews</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Polarity of Negative Reviews]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Polarity of Negative Reviews</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Polarity of Neutral</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Polarity of Neutral]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Polarity of Neutral</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Polarity off Positive Reviews</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Polarity off Positive Reviews]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Polarity off Positive Reviews</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Insights</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive Insights]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Positive Insights</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative Insights</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Negative Insights]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Negative Insights</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J11:no:A1:J11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
      <column caption='Cafes that sell this item' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
      <column caption='Actual Count' datatype='real' datatype-customized='true' name='[Calculation_848365600023904256]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Count]/12' />
      </column>
      <column caption='Actual Average Sentiment' datatype='real' name='[Calculation_848365600075751425]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Average_Sentimentality]/12' />
      </column>
      <column datatype='string' name='[Food]' role='dimension' type='nominal' />
      <column caption='Food Items' datatype='string' name='[Food_Items]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Q Year List' datatype='date' name='[QYearList]' role='dimension' type='ordinal' />
      <group caption='Action (Food)' hidden='true' name='[Action (Food)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Food]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Food)' hidden='true' name='[Tooltip (Food)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Food]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.613879' measure-ordering='alphabetic' measure-percentage='0.386121' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data+ (Multiple Connections)' inline='true' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(TP) Resturants with the All Food' name='excel-direct.1okfg7508q85rn1efrhpf07x71f0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Storyboard/(TP) Resturants with the All Food.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='(TP) Food Items in Quarters (2)' name='excel-direct.1kdut6m09i79md12qrzkd1p4pg5v'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Tableau Visualisations/Overall trending gradient with filters.twb Files/Data/Downloads/(TP) Food Items in Quarters (2).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Compiled Food and Drink Insights' name='excel-direct.19v360a1lvilzw1ccrxsb0ur3x8j'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Storyboard/Compiled Food and Drink Insights.xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='From2016_Average_Sentimental_Burpple (1)' name='excel-direct.0ha2lfc14w3joq1cky56700ssurs'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Storyboard/From2016_Average_Sentimental_Burpple (1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Top Cafe Insights' name='excel-direct.1dgicp10na0e6w1avayao1q55vja'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Storyboard/Top Cafe Insights.xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Top 3 foods by each cafe' name='excel-direct.1sx09zr065d22t1gzaepr1d4ish7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/FYP Storyboard/Top 3 foods by each cafe.xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Data].[Cafe_Name]' />
              <expression op='[Sheet12].[Cafe_Name]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Data].[Cafe_Name]' />
                <expression op='[Sheet11].[Café Name]' />
              </expression>
            </clause>
            <relation join='right' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[Data].[Cafe_Name]' />
                  <expression op='[Data2].[Café_Names]' />
                </expression>
              </clause>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Data].[Food]' />
                    <expression op='[Sheet1].[Items]' />
                  </expression>
                </clause>
                <relation join='right' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[Data].[Food]' />
                      <expression op='[Data1].[Keyword]' />
                    </expression>
                  </clause>
                  <relation connection='excel-direct.1okfg7508q85rn1efrhpf07x71f0' name='Data' table='[Data$]' type='table'>
                    <columns gridOrigin='A1:D593:no:A1:D593:0' header='yes' outcome='6'>
                      <column datatype='string' name='Food' ordinal='0' />
                      <column datatype='string' name='Cafe_Name' ordinal='1' />
                      <column datatype='integer' name='Count' ordinal='2' />
                      <column datatype='real' name='Average_Sentimentality' ordinal='3' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1kdut6m09i79md12qrzkd1p4pg5v' name='Data1' table='[Data$]' type='table'>
                    <columns gridOrigin='A1:D1909:no:A1:D1909:0' header='yes' outcome='6'>
                      <column datatype='string' name='Keyword' ordinal='0' />
                      <column datatype='date' name='QYearList' ordinal='1' />
                      <column datatype='integer' name='Count' ordinal='2' />
                      <column datatype='real' name='Average Polarity' ordinal='3' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.19v360a1lvilzw1ccrxsb0ur3x8j' name='Sheet1' table='[Sheet1$]' type='table'>
                  <columns gridOrigin='A1:G13:no:A1:G13:0' header='yes' outcome='2'>
                    <column datatype='string' name='Items' ordinal='0' />
                    <column datatype='string' name='Negative Review' ordinal='1' />
                    <column datatype='string' name='Negative_word' ordinal='2' />
                    <column datatype='string' name='Negative_Insights' ordinal='3' />
                    <column datatype='string' name='Positive_Review' ordinal='4' />
                    <column datatype='string' name='Positive_word' ordinal='5' />
                    <column datatype='string' name='Positive_Insights' ordinal='6' />
                  </columns>
                </relation>
              </relation>
              <relation connection='excel-direct.0ha2lfc14w3joq1cky56700ssurs' name='Data2' table='[Data$]' type='table'>
                <columns gridOrigin='A1:K184:no:A1:K184:0' header='yes' outcome='2'>
                  <column datatype='string' name='Café_Names' ordinal='0' />
                  <column datatype='integer' name='Count' ordinal='1' />
                  <column datatype='string' name='Cleaned_Reviews' ordinal='2' />
                  <column datatype='real' name='Average_Polarity' ordinal='3' />
                  <column datatype='real' name='Average_Subjectivity' ordinal='4' />
                  <column datatype='string' name='Neighbourhood' ordinal='5' />
                  <column datatype='real' name='Latitude' ordinal='6' />
                  <column datatype='real' name='Longitude' ordinal='7' />
                  <column datatype='real' name='Distance in Km' ordinal='8' />
                  <column datatype='real' name='Distance in m' ordinal='9' />
                  <column datatype='string' name='Price per pax' ordinal='10' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.1dgicp10na0e6w1avayao1q55vja' name='Sheet11' table='[Sheet1$]' type='table'>
              <columns gridOrigin='A1:G5:no:A1:G5:0' header='yes' outcome='2'>
                <column datatype='string' name='Café Name' ordinal='0' />
                <column datatype='string' name='Positive Verbatim 1' ordinal='1' />
                <column datatype='string' name='Positive Insights 1' ordinal='2' />
                <column datatype='string' name='Positive Verbatim 2' ordinal='3' />
                <column datatype='string' name='Positive Insights 2' ordinal='4' />
                <column datatype='string' name='Positive Verbatim 3' ordinal='5' />
                <column datatype='string' name='Positive Insights 3' ordinal='6' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1sx09zr065d22t1gzaepr1d4ish7' name='Sheet12' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:E65:no:A1:E65:0' header='yes' outcome='6'>
              <column datatype='string' name='Cafe_Name' ordinal='0' />
              <column datatype='string' name='1st Food' ordinal='1' />
              <column datatype='string' name='2nd Food' ordinal='2' />
              <column datatype='string' name='3rd Food' ordinal='3' />
              <column datatype='string' name='Top foods they offer' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[1st Food]' value='[Sheet12].[1st Food]' />
          <map key='[2nd Food]' value='[Sheet12].[2nd Food]' />
          <map key='[3rd Food]' value='[Sheet12].[3rd Food]' />
          <map key='[Average Polarity]' value='[Data1].[Average Polarity]' />
          <map key='[Average_Polarity]' value='[Data2].[Average_Polarity]' />
          <map key='[Average_Sentimentality]' value='[Data].[Average_Sentimentality]' />
          <map key='[Average_Subjectivity]' value='[Data2].[Average_Subjectivity]' />
          <map key='[Cafe_Name (Sheet12)]' value='[Sheet12].[Cafe_Name]' />
          <map key='[Cafe_Name]' value='[Data].[Cafe_Name]' />
          <map key='[Café Name]' value='[Sheet11].[Café Name]' />
          <map key='[Café_Names]' value='[Data2].[Café_Names]' />
          <map key='[Cleaned_Reviews]' value='[Data2].[Cleaned_Reviews]' />
          <map key='[Count (Data1)]' value='[Data1].[Count]' />
          <map key='[Count (Data2)]' value='[Data2].[Count]' />
          <map key='[Count]' value='[Data].[Count]' />
          <map key='[Distance in Km]' value='[Data2].[Distance in Km]' />
          <map key='[Distance in m]' value='[Data2].[Distance in m]' />
          <map key='[Food]' value='[Data].[Food]' />
          <map key='[Items]' value='[Sheet1].[Items]' />
          <map key='[Keyword]' value='[Data1].[Keyword]' />
          <map key='[Latitude]' value='[Data2].[Latitude]' />
          <map key='[Longitude]' value='[Data2].[Longitude]' />
          <map key='[Negative Review]' value='[Sheet1].[Negative Review]' />
          <map key='[Negative_Insights]' value='[Sheet1].[Negative_Insights]' />
          <map key='[Negative_word]' value='[Sheet1].[Negative_word]' />
          <map key='[Neighbourhood]' value='[Data2].[Neighbourhood]' />
          <map key='[Positive Insights 1]' value='[Sheet11].[Positive Insights 1]' />
          <map key='[Positive Insights 2]' value='[Sheet11].[Positive Insights 2]' />
          <map key='[Positive Insights 3]' value='[Sheet11].[Positive Insights 3]' />
          <map key='[Positive Verbatim 1]' value='[Sheet11].[Positive Verbatim 1]' />
          <map key='[Positive Verbatim 2]' value='[Sheet11].[Positive Verbatim 2]' />
          <map key='[Positive Verbatim 3]' value='[Sheet11].[Positive Verbatim 3]' />
          <map key='[Positive_Insights]' value='[Sheet1].[Positive_Insights]' />
          <map key='[Positive_Review]' value='[Sheet1].[Positive_Review]' />
          <map key='[Positive_word]' value='[Sheet1].[Positive_word]' />
          <map key='[Price per pax]' value='[Data2].[Price per pax]' />
          <map key='[QYearList]' value='[Data1].[QYearList]' />
          <map key='[Top foods they offer]' value='[Sheet12].[Top foods they offer]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Food</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Food]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Food</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cafe_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cafe_Name]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Cafe_Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_Sentimentality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average_Sentimentality]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Average_Sentimentality</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D593:no:A1:D593:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Keyword</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Keyword]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>Keyword</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QYearList</remote-name>
            <remote-type>7</remote-type>
            <local-name>[QYearList]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>QYearList</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count (Data1)]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Polarity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Polarity]</local-name>
            <parent-name>[Data1]</parent-name>
            <remote-alias>Average Polarity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1909:no:A1:D1909:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Items</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Items]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Items</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative Review</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Negative Review]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Negative Review</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative_word</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Negative_word]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Negative_word</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative_Insights</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Negative_Insights]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Negative_Insights</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive_Review</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive_Review]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Positive_Review</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive_word</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive_word]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Positive_word</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive_Insights</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive_Insights]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Positive_Insights</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G13:no:A1:G13:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Café_Names</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Café_Names]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Café_Names</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count (Data2)]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cleaned_Reviews</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cleaned_Reviews]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Cleaned_Reviews</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_Polarity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average_Polarity]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Average_Polarity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_Subjectivity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average_Subjectivity]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Average_Subjectivity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance in Km</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Distance in Km]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Distance in Km</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance in m</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Distance in m]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Distance in m</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price per pax</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Price per pax]</local-name>
            <parent-name>[Data2]</parent-name>
            <remote-alias>Price per pax</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K184:no:A1:K184:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Café Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Café Name]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Café Name</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Verbatim 1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive Verbatim 1]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Positive Verbatim 1</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Insights 1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive Insights 1]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Positive Insights 1</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Verbatim 2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive Verbatim 2]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Positive Verbatim 2</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Insights 2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive Insights 2]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Positive Insights 2</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Verbatim 3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive Verbatim 3]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Positive Verbatim 3</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Insights 3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive Insights 3]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Positive Insights 3</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G5:no:A1:G5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cafe_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cafe_Name (Sheet12)]</local-name>
            <parent-name>[Sheet12]</parent-name>
            <remote-alias>Cafe_Name</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1st Food</remote-name>
            <remote-type>130</remote-type>
            <local-name>[1st Food]</local-name>
            <parent-name>[Sheet12]</parent-name>
            <remote-alias>1st Food</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2nd Food</remote-name>
            <remote-type>130</remote-type>
            <local-name>[2nd Food]</local-name>
            <parent-name>[Sheet12]</parent-name>
            <remote-alias>2nd Food</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3rd Food</remote-name>
            <remote-type>130</remote-type>
            <local-name>[3rd Food]</local-name>
            <parent-name>[Sheet12]</parent-name>
            <remote-alias>3rd Food</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Top foods they offer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Top foods they offer]</local-name>
            <parent-name>[Sheet12]</parent-name>
            <remote-alias>Top foods they offer</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet12]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E65:no:A1:E65:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Polarity1' datatype='real' name='[Average_Polarity]' role='measure' type='quantitative' />
      <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
      <column caption='Average Subjectivity' datatype='real' name='[Average_Subjectivity]' role='measure' type='quantitative' />
      <column caption='Cafe Name (Sheet12)' datatype='string' name='[Cafe_Name (Sheet12)]' role='dimension' type='nominal' />
      <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
      <column caption='Café Names' datatype='string' name='[Café_Names]' role='dimension' type='nominal' />
      <column caption='Competitors legend' datatype='string' name='[Calculation_1133781232569679872]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Café_Names]==&quot;The Caffeine Experience&quot; THEN &quot;The Caffeine Experience&quot;&#13;&#10;ELSEIF [Café_Names]==&quot;Tanjong Pagar MRT&quot; THEN &quot;Tanjong Pagar MRT&quot;&#13;&#10;ELSE &quot;Competitors&quot;&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Count for line chart' datatype='real' name='[Calculation_150307658965069824]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Count (Data1)])/COUNT([Count (Data1)])' />
      </column>
      <column caption='Actual Count' datatype='real' name='[Calculation_560135224675717120]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Count]/12' />
      </column>
      <column caption='Total count for 2 quarters' datatype='real' name='[Calculation_850335926243942400]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Count (Data1)]) *2' />
      </column>
      <column caption='Total Count by year' datatype='real' name='[Calculation_850335926260305921]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Count (Data1)])/COUNT([Count (Data1)]))*4' />
      </column>
      <column caption='Total Count across all years' datatype='real' name='[Calculation_850335926265724930]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Count (Data1)])*12' />
      </column>
      <column caption='TCE foods' datatype='string' name='[Calculation_888616528774746112]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Food]==&quot;braised beef&quot; THEN &quot;braised beef&quot;&#13;&#10;ELSEIF [Food]==&quot;coffee brew&quot; THEN &quot;coffee brew&quot;&#13;&#10;ELSEIF [Food]==&quot;brown rice&quot; THEN &quot;brown rice&quot;&#13;&#10;ELSEIF [Food]==&quot;earl grey&quot; THEN &quot;earl grey&quot;&#13;&#10;ELSEIF [Food]==&quot;garden greens&quot; THEN &quot;garden greens&quot;&#13;&#10;ELSEIF [Food]==&quot;grain bowl&quot; THEN &quot;grain bowl&quot;&#13;&#10;ELSEIF [Food]==&quot;green tea&quot; THEN &quot;green tea&quot;&#13;&#10;ELSEIF [Food]==&quot;&quot; THEN &quot;Null&quot;&#13;&#10;&#13;&#10;ELSE &quot;Offers different food&quot;&#13;&#10;END' />
      </column>
      <column caption='Cleaned Reviews' datatype='string' name='[Cleaned_Reviews]' role='dimension' type='nominal' />
      <column datatype='string' name='[Food]' role='dimension' type='nominal' />
      <column datatype='string' name='[Keyword]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[Negative Review]' role='dimension' type='nominal' />
      <column datatype='string' name='[Negative_Insights]' role='dimension' type='nominal' />
      <column datatype='string' name='[Negative_word]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Positive_Insights]' role='dimension' type='nominal' />
      <column datatype='string' name='[Positive_Review]' role='dimension' type='nominal' />
      <column datatype='string' name='[Positive_word]' role='dimension' type='nominal' />
      <column datatype='string' name='[Price per pax]' role='dimension' type='nominal' />
      <column caption='Q Year List' datatype='date' name='[QYearList]' role='dimension' type='ordinal' />
      <column-instance column='[Lokal Highlight]' derivation='InOut' name='[io:Lokal Highlight:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ninja Bowl Highlight]' derivation='InOut' name='[io:Ninja Bowl Highlight:nk]' pivot='key' type='nominal' />
      <column-instance column='[Populus Highlight]' derivation='InOut' name='[io:Populus Highlight:nk]' pivot='key' type='nominal' />
      <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[TCE items]' derivation='InOut' name='[io:TCE items:nk]' pivot='key' type='nominal' />
      <column-instance column='[Top 3 drinks by Count]' derivation='InOut' name='[io:Top 3 drinks by Count:nk]' pivot='key' type='nominal' />
      <column-instance column='[Top 3 drinks by Polarity]' derivation='InOut' name='[io:Top 3 drinks by Polarity:nk]' pivot='key' type='nominal' />
      <column-instance column='[Top 4 Competitors]' derivation='InOut' name='[io:Top 4 Competitors:nk]' pivot='key' type='nominal' />
      <column-instance column='[Xiao Ya Tou Highlight]' derivation='InOut' name='[io:Xiao Ya Tou Highlight:nk]' pivot='key' type='nominal' />
      <column-instance column='[Café_Names]' derivation='None' name='[none:Café_Names:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1133781232569679872]' derivation='None' name='[none:Calculation_1133781232569679872:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_888616528774746112]' derivation='None' name='[none:Calculation_888616528774746112:nk]' pivot='key' type='nominal' />
      <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
      <column-instance column='[Keyword]' derivation='None' name='[none:Keyword:nk]' pivot='key' type='nominal' />
      <column-instance column='[Price per pax]' derivation='None' name='[none:Price per pax:nk]' pivot='key' type='nominal' />
      <column-instance column='[QYearList]' derivation='Quarter-Trunc' name='[tqr:QYearList:ok]' pivot='key' type='ordinal' />
      <column-instance column='[QYearList]' derivation='Quarter-Trunc' name='[tqr:QYearList:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Cafe Name)' hidden='true' name='[Action (Cafe Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Cafe_Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Food)' hidden='true' name='[Action (Food)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Food]' />
        </groupfilter>
      </group>
      <group caption='Action (Food,QUARTER(Q Year List))' hidden='true' name='[Action (Food,QUARTER(Q Year List))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Food]' />
          <groupfilter function='level-members' level='[tqr:QYearList:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Keyword)' hidden='true' name='[Action (Keyword)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Keyword]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Café,Food,Negative Insights,Positive Insights,Sample Negative Reviews,Sample Positive Reviews)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Café:nk]' />
          <groupfilter function='level-members' level='[none:Food:nk]' />
          <groupfilter function='level-members' level='[none:Negative Insights:nk]' />
          <groupfilter function='level-members' level='[none:Positive Insights:nk]' />
          <groupfilter function='level-members' level='[none:Sample Negative Reviews:nk]' />
          <groupfilter function='level-members' level='[none:Sample Positive Reviews:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Food,IN/OUT(TCE items))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Food:nk]' />
          <groupfilter function='level-members' level='[io:TCE items:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Food,Keyword)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Food:nk]' />
          <groupfilter function='level-members' level='[none:Keyword:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Food,QUARTER(Q Year List))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Food:nk]' />
          <groupfilter function='level-members' level='[tqr:QYearList:qk]' />
        </groupfilter>
      </group>
      <group name='[Lokal Highlight]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;The Lokal&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[Ninja Bowl Highlight]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[Café_Names]' member='&quot;NINJA BOWL&quot;' />
      </group>
      <group name='[Populus Highlight]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;The Populus Coffee &amp; Food Co.&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Top 6 drinks' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Top 3 drinks by Count]' function='reference' />
          <groupfilter field='[Top 3 drinks by Polarity]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Top 6 foods' delimiter=',' name='[Set 2]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Top 3 foods by Count]' function='reference' />
          <groupfilter field='[Top 3 foods by Polarity]' function='reference' />
        </groupfilter>
      </group>
      <group name='[TCE items]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;beef patty&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;brown rice&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;coffee brew&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;earl grey&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;garden greens&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;grain bowl&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;green tea&quot;' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Keyword)' hidden='true' name='[Tooltip (Keyword)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Keyword]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Negative Review,Negative_Insights,Negative_word,Positive_Insights,Positive_Review,Positive_word)' hidden='true' name='[Tooltip (Negative Review,Negative_Insights,Negative_word,Positive_Insights,Positive_Review,Positive_word)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Negative Review]' />
          <groupfilter function='level-members' level='[Negative_Insights]' />
          <groupfilter function='level-members' level='[Negative_word]' />
          <groupfilter function='level-members' level='[Positive_Insights]' />
          <groupfilter function='level-members' level='[Positive_Review]' />
          <groupfilter function='level-members' level='[Positive_word]' />
        </groupfilter>
      </group>
      <group name='[Top 10 Mentions]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Food]' member='&quot;beef cheek&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;earl grey&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;french toast&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;grain bowl&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;green tea&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;ice cream&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;onsen egg&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;poached egg&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;scrambled egg&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;truffle fries&quot;' />
        </groupfilter>
      </group>
      <group name='[Top 10 Trending]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Food]' member='&quot;buttermilk waffle&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;date pudding&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;gula melaka&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;hollandaise sauce&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;ice cream&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;iced mocha&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;pickled vegetable&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;rice bowl&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;scrambled egg&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;sweet potato&quot;' />
        </groupfilter>
      </group>
      <group name='[Top 3 drinks by Count]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;earl grey&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;green tea&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;milk tea&quot;' />
        </groupfilter>
      </group>
      <group name='[Top 3 drinks by Polarity]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;iced mocha&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;thai coffee&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;thai tea&quot;' />
        </groupfilter>
      </group>
      <group name='[Top 3 foods by Count]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;french toast&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;ice cream&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;onsen egg&quot;' />
        </groupfilter>
      </group>
      <group name='[Top 3 foods by Polarity]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;buttermilk waffle&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;eggs ben&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;pulled pork&quot;' />
        </groupfilter>
      </group>
      <group name='[Top 4 Competitors]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;NINJA BOWL&quot;' />
          <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;The Lokal&quot;' />
          <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;The Populus Coffee &amp; Food Co.&quot;' />
          <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;Xiao Ya Tou&quot;' />
        </groupfilter>
      </group>
      <group name='[Top Competitors]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;NINJA BOWL&quot;' />
          <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;Tanjong Pagar MRT&quot;' />
          <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;The Caffeine Experience&quot;' />
          <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;The Lokal&quot;' />
          <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;The Populus Coffee &amp; Food Co.&quot;' />
          <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;Xiao Ya Tou&quot;' />
        </groupfilter>
      </group>
      <group name='[Trendy set for 2017Q4 - 2018Q1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;buttermilk waffle&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;eggs ben&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;french toast&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;grain bowl&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;ice cream&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;onsen egg&quot;' />
          <groupfilter function='member' level='[none:Food:nk]' member='&quot;scrambled egg&quot;' />
        </groupfilter>
      </group>
      <group name='[Xiao Ya Tou Highlight]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[none:Café_Names:nk]' member='&quot;Xiao Ya Tou&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.423372' group-percentage='0.289272' measure-ordering='alphabetic' measure-percentage='0.287356' rowDisplayCount='500' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Food:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;braised beef&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;cornflake crumb&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;french toast&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;kaya toast&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pork belly&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;smoked salmon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;white choc&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;aglio olio&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;chocolate sponge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;date pudding&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;hokkien mee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;onsen egg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;scallops mussels&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;thai tea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;beef cheek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;coffee brew&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;egg yolk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;iced cappuccino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pickled vegetables&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;shaved ice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;unagi benedict&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;butter sauce&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cream cheese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;garden greens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;lunar coffee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;red velvet&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sponge cake&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;brown rice&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;craft beer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;fried chicken&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;lemon curd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pork jowl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;smooth cream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;white chocolate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;beef cheeks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;coffee brewers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;eggs ben&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;iced mocha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;poached egg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;shoestring fries&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;unicorn tears&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;chocolate mouss&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;dark choc&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;hokkaido scallop&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;mushroom duxelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;salmon rosti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;thai green&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;baby corn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;coconut ice&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;dried tomato&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;hollandaise sauce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pan seared&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;scrambled egg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;truffle fries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;chicken leg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;custard cream&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hazelnut butter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;milky way&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;roasted pumpkin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;tea thai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;beef patty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;coffee food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;eggs benedict&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;infused honey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;populus coffee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;slipper lobster&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;wagyu beef&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;buttermilk waffle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;cream sauce&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;grain bowl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;maple syrup&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;rice bowl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;sticky date&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;cherry tomato&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;cup coffee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;green tea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;matcha cream&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;rice bowls&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;string fries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;chicken thigh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;dapper coffee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;healthy bowl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;miso butter&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;salmon roe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;thai coffee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;chocolate mousse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;dark chocolate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;hokkaido scallops&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;nut butter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;salted egg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;thai milk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;buckwheat pancake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cream bun&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;fried mantou&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;lobster roll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pulled pork&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;sous vide&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;yuan yang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;black sesame&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;coffee tea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;fig jam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;japanese rice&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;populus scramble&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;smashed avocado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;whipped cream&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;banana bread&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coffee bean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;dried tomatoes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;homemade hazelnut&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pickled cucumber&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sea salt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;truffle oil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;cherry tomatoes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;curry rice&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;gula melaka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;milk tea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;rice orzo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sweet potato&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;butter cream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cream buns&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;garden green&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;lobster tail&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;red bean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;soy sauce&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;bean sprouts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;coffee beans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;earl grey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ice cream&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pickled vegetable&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;seared hokkaido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ume boshi&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[io:TCE items:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>true</bucket>
            </map>
            <map to='square'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[TCE items]' type='palette'>
            <map to='#4e79a7'>
              <bucket>(&quot;beef patty&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;grain bowl&quot;)</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>(&quot;garden greens&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(%null%)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;earl grey&quot;)</bucket>
            </map>
            <map to='#edc948'>
              <bucket>(&quot;green tea&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;coffee brew&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_888616528774746112:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;beef patty&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;grain bowl&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;garden greens&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;braised beef&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Offers different food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;earl grey&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;green tea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coffee brew&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;brown rice&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 3 drinks by Count:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[io:Top 3 drinks by Count:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>true</bucket>
            </map>
            <map to='circle'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 3 drinks by Polarity:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[io:Top 3 drinks by Polarity:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>true</bucket>
            </map>
            <map to='circle'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:TCE items:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Ninja Bowl Highlight:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[io:Ninja Bowl Highlight:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>true</bucket>
            </map>
            <map to='circle'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Lokal Highlight:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[io:Lokal Highlight:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>true</bucket>
            </map>
            <map to='circle'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Xiao Ya Tou Highlight:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[io:Xiao Ya Tou Highlight:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>true</bucket>
            </map>
            <map to='circle'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Populus Highlight:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[io:Populus Highlight:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>true</bucket>
            </map>
            <map to='circle'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 4 Competitors:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[io:Top 4 Competitors:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>true</bucket>
            </map>
            <map to='circle'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Set 2:nk]&#10;[io:Set 1:nk]' type='palette'>
            <map to='#75a1c7'>
              <multibucket>
                <bucket>true</bucket>
                <bucket>false</bucket>
              </multibucket>
            </map>
            <map to='#dcd4d0'>
              <multibucket>
                <bucket>false</bucket>
                <bucket>false</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>false</bucket>
                <bucket>true</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Price per pax:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;20&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;15&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_1133781232569679872:nk]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>&quot;The Caffeine Experience&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;Competitors&quot;</bucket>
            </map>
            <map to=':filled/triangle'>
              <bucket>&quot;Tanjong Pagar MRT&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Burpple data with image url)' inline='true' name='federated.11htxgq0ugffyd1e0dns11wtrz0f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='BurpMustOrder' name='excel-direct.097jq51080lbmz1gn7lkx1lbzb9y'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/BurpMustOrder.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Burpple data with image url' name='excel-direct.1ajm7lc1133tkm19k8o8e142ta0o'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Desktop/Burpple data with image url.xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='From2016_Example_Reviews' name='excel-direct.1x61cma1ptgti418y6le302mwwtu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Donovan/Downloads/From2016_Example_Reviews.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Sheet1].[Name_Of_Cafe]' />
              <expression op='[Data].[Café_Names]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Sheet1].[Name_Of_Cafe]' />
                <expression op='[Sheet11].[Name_Of_Cafe]' />
              </expression>
            </clause>
            <relation connection='excel-direct.1ajm7lc1133tkm19k8o8e142ta0o' name='Sheet1' table='[Sheet1$]' type='table'>
              <columns gridOrigin='A1:I86:no:A1:I86:0' header='yes' outcome='2'>
                <column datatype='string' name='Name_Of_Cafe' ordinal='0' />
                <column datatype='string' name='Neighbourhood' ordinal='1' />
                <column datatype='real' name='Latitude' ordinal='2' />
                <column datatype='real' name='Longitude' ordinal='3' />
                <column datatype='real' name='Distance to Tanjong Pagar MRT(Km)' ordinal='4' />
                <column datatype='real' name='Distance to Tanjong Pagar MRT (m)' ordinal='5' />
                <column datatype='integer' name='No_Of_Reviews' ordinal='6' />
                <column datatype='string' name='Price_per_pax' ordinal='7' />
                <column datatype='string' name='Food Image URL' ordinal='8' />
              </columns>
            </relation>
            <relation connection='excel-direct.097jq51080lbmz1gn7lkx1lbzb9y' name='Sheet11' table='[Sheet1$]' type='table'>
              <columns gridOrigin='A1:M86:no:A1:M86:0' header='yes' outcome='2'>
                <column datatype='string' name='Name_Of_Cafe' ordinal='0' />
                <column datatype='string' name='Image 1' ordinal='1' />
                <column datatype='string' name='Item 1 name' ordinal='2' />
                <column datatype='integer' name='Item 1 No. of reviews' ordinal='3' />
                <column datatype='string' name='Item 1 Price' ordinal='4' />
                <column datatype='string' name='Image 2' ordinal='5' />
                <column datatype='string' name='Item 2 name' ordinal='6' />
                <column datatype='integer' name='Item 2 No. of reviews' ordinal='7' />
                <column datatype='string' name='Item 2 Price' ordinal='8' />
                <column datatype='string' name='Image 3' ordinal='9' />
                <column datatype='string' name='Item 3 name' ordinal='10' />
                <column datatype='integer' name='Item 3 No. of reviews' ordinal='11' />
                <column datatype='string' name='Item 3 Price' ordinal='12' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1x61cma1ptgti418y6le302mwwtu' name='Data' table='[Data$]' type='table'>
            <columns gridOrigin='A1:G80:no:A1:G80:0' header='yes' outcome='2'>
              <column datatype='string' name='Café_Names' ordinal='0' />
              <column datatype='integer' name='Count' ordinal='1' />
              <column datatype='real' name='Average_Polarity' ordinal='2' />
              <column datatype='real' name='Average_Subjectivity' ordinal='3' />
              <column datatype='string' name='Negative_Review' ordinal='4' />
              <column datatype='string' name='Neutral_Review' ordinal='5' />
              <column datatype='string' name='Positive_Review' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Average_Polarity]' value='[Data].[Average_Polarity]' />
          <map key='[Average_Subjectivity]' value='[Data].[Average_Subjectivity]' />
          <map key='[Café_Names]' value='[Data].[Café_Names]' />
          <map key='[Count]' value='[Data].[Count]' />
          <map key='[Distance to Tanjong Pagar MRT (m)]' value='[Sheet1].[Distance to Tanjong Pagar MRT (m)]' />
          <map key='[Distance to Tanjong Pagar MRT(Km)]' value='[Sheet1].[Distance to Tanjong Pagar MRT(Km)]' />
          <map key='[Food Image URL]' value='[Sheet1].[Food Image URL]' />
          <map key='[Image 1]' value='[Sheet11].[Image 1]' />
          <map key='[Image 2]' value='[Sheet11].[Image 2]' />
          <map key='[Image 3]' value='[Sheet11].[Image 3]' />
          <map key='[Item 1 No. of reviews]' value='[Sheet11].[Item 1 No. of reviews]' />
          <map key='[Item 1 Price]' value='[Sheet11].[Item 1 Price]' />
          <map key='[Item 1 name]' value='[Sheet11].[Item 1 name]' />
          <map key='[Item 2 No. of reviews]' value='[Sheet11].[Item 2 No. of reviews]' />
          <map key='[Item 2 Price]' value='[Sheet11].[Item 2 Price]' />
          <map key='[Item 2 name]' value='[Sheet11].[Item 2 name]' />
          <map key='[Item 3 No. of reviews]' value='[Sheet11].[Item 3 No. of reviews]' />
          <map key='[Item 3 Price]' value='[Sheet11].[Item 3 Price]' />
          <map key='[Item 3 name]' value='[Sheet11].[Item 3 name]' />
          <map key='[Latitude]' value='[Sheet1].[Latitude]' />
          <map key='[Longitude]' value='[Sheet1].[Longitude]' />
          <map key='[Name_Of_Cafe (Sheet11)]' value='[Sheet11].[Name_Of_Cafe]' />
          <map key='[Name_Of_Cafe]' value='[Sheet1].[Name_Of_Cafe]' />
          <map key='[Negative_Review]' value='[Data].[Negative_Review]' />
          <map key='[Neighbourhood]' value='[Sheet1].[Neighbourhood]' />
          <map key='[Neutral_Review]' value='[Data].[Neutral_Review]' />
          <map key='[No_Of_Reviews]' value='[Sheet1].[No_Of_Reviews]' />
          <map key='[Positive_Review]' value='[Data].[Positive_Review]' />
          <map key='[Price_per_pax]' value='[Sheet1].[Price_per_pax]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Name_Of_Cafe</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name_Of_Cafe]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Name_Of_Cafe</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance to Tanjong Pagar MRT(Km)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Distance to Tanjong Pagar MRT(Km)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Distance to Tanjong Pagar MRT(Km)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance to Tanjong Pagar MRT (m)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Distance to Tanjong Pagar MRT (m)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Distance to Tanjong Pagar MRT (m)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No_Of_Reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No_Of_Reviews]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>No_Of_Reviews</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price_per_pax</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Price_per_pax]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Price_per_pax</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food Image URL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Food Image URL]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Food Image URL</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I86:no:A1:I86:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name_Of_Cafe</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name_Of_Cafe (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Name_Of_Cafe</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Image 1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Image 1]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Image 1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item 1 name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Item 1 name]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Item 1 name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item 1 No. of reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Item 1 No. of reviews]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Item 1 No. of reviews</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item 1 Price</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Item 1 Price]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Item 1 Price</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Image 2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Image 2]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Image 2</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item 2 name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Item 2 name]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Item 2 name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item 2 No. of reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Item 2 No. of reviews]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Item 2 No. of reviews</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item 2 Price</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Item 2 Price]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Item 2 Price</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Image 3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Image 3]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Image 3</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item 3 name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Item 3 name]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Item 3 name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item 3 No. of reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Item 3 No. of reviews]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Item 3 No. of reviews</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item 3 Price</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Item 3 Price]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Item 3 Price</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M86:no:A1:M86:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Café_Names</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Café_Names]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Café_Names</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_Polarity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average_Polarity]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Average_Polarity</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_Subjectivity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average_Subjectivity]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Average_Subjectivity</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative_Review</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Negative_Review]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Negative_Review</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neutral_Review</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Neutral_Review]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Neutral_Review</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive_Review</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Positive_Review]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Positive_Review</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G80:no:A1:G80:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Polarity' datatype='real' name='[Average_Polarity]' role='measure' type='quantitative' />
      <column caption='Average Subjectivity' datatype='real' name='[Average_Subjectivity]' role='measure' type='quantitative' />
      <column caption='Café Names' datatype='string' name='[Café_Names]' role='dimension' type='nominal' />
      <column caption='Sentiment Category' datatype='string' name='[Calculation_1008524855170584577]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Average_Polarity] &lt;=0 THEN &quot;Negative(&lt;=0)&quot;&#13;&#10;ELSEIF [Average_Polarity] &lt;= 0.3 THEN &quot;Neutral(&lt;=0.3)&quot;&#13;&#10;ELSEIF [Average_Polarity] &gt; 0.3 THEN &quot;Positive(&gt;0.3)&quot;&#13;&#10;END' />
      </column>
      <column caption='Distance Categories' datatype='string' name='[Calculation_849772956182061056]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Distance to Tanjong Pagar MRT (m)] &lt;1 THEN &apos;MRT&apos;&#13;&#10;ELSEIF [Distance to Tanjong Pagar MRT (m)]&lt;250 THEN &apos;Distance &lt; 250 metres&apos;&#13;&#10;ELSEIF [Distance to Tanjong Pagar MRT (m)]&lt;470 AND [Distance to Tanjong Pagar MRT (m)]&gt;250 THEN &apos;Distance &lt; 470 metres&apos;&#13;&#10;ELSEIF [Distance to Tanjong Pagar MRT (m)]&gt;470 THEN &apos;Distance &gt; 470 metres&apos;&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Shapes' datatype='string' name='[Calculation_849772956182499329]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Name_Of_Cafe]=&quot;Tanjong Pagar MRT&quot; THEN &apos;Tanjong Pagar MRT&apos;&#13;&#10;ELSEIF [Name_Of_Cafe]=&quot;The Caffeine Experience&quot; THEN &apos;The Caffeine Experience&apos;&#13;&#10;ELSE &apos;Competitors&apos;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Image 1]' role='dimension' type='nominal' />
      <column datatype='string' name='[Image 2]' role='dimension' type='nominal' />
      <column datatype='string' name='[Image 3]' role='dimension' type='nominal' />
      <column datatype='string' name='[Item 1 Price]' role='dimension' type='nominal' />
      <column datatype='string' name='[Item 1 name]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name Of Cafe (Sheet11)' datatype='string' name='[Name_Of_Cafe (Sheet11)]' role='dimension' type='nominal' />
      <column caption='Name Of Cafe' datatype='string' name='[Name_Of_Cafe]' role='dimension' type='nominal' />
      <column caption='Negative Review' datatype='string' name='[Negative_Review]' role='dimension' type='nominal' />
      <column caption='Neutral Review' datatype='string' name='[Neutral_Review]' role='dimension' type='nominal' />
      <column caption='No Of Reviews' datatype='integer' name='[No_Of_Reviews]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Positive Review' datatype='string' name='[Positive_Review]' role='dimension' type='nominal' />
      <column caption='Price per pax' datatype='string' name='[Price_per_pax]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1008524855170584577]' derivation='None' name='[none:Calculation_1008524855170584577:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_849772956182061056]' derivation='None' name='[none:Calculation_849772956182061056:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_849772956182499329]' derivation='None' name='[none:Calculation_849772956182499329:nk]' pivot='key' type='nominal' />
      <column-instance column='[Image 1]' derivation='None' name='[none:Image 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Image 2]' derivation='None' name='[none:Image 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Image 3]' derivation='None' name='[none:Image 3:nk]' pivot='key' type='nominal' />
      <column-instance column='[Name_Of_Cafe (Sheet11)]' derivation='None' name='[none:Name_Of_Cafe (Sheet11):nk]' pivot='key' type='nominal' />
      <group caption='Action (Café Names,Negative Review,Positive Review)' hidden='true' name='[Action (Café Names,Negative Review,Positive Review)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Café_Names]' />
          <groupfilter function='level-members' level='[Negative_Review]' />
          <groupfilter function='level-members' level='[Positive_Review]' />
        </groupfilter>
      </group>
      <group caption='Action (Sentiment Category,Name Of Cafe,Price per pax)' hidden='true' name='[Action (Sentiment Category,Name Of Cafe,Price per pax)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1008524855170584577]' />
          <groupfilter function='level-members' level='[Name_Of_Cafe]' />
          <groupfilter function='level-members' level='[Price_per_pax]' />
        </groupfilter>
      </group>
      <group caption='Action (Sentiment Category,Shapes,Image 1,Item 1 Price,Item 1 name,Name Of Cafe (Sheet11),Price per pax)' hidden='true' name='[Action (Sentiment Category,Shapes,Image 1,Item 1 Price,Item 1 name,Name Of Cafe (Sheet11),Price per pax)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1008524855170584577]' />
          <groupfilter function='level-members' level='[Calculation_849772956182499329]' />
          <groupfilter function='level-members' level='[Image 1]' />
          <groupfilter function='level-members' level='[Item 1 Price]' />
          <groupfilter function='level-members' level='[Item 1 name]' />
          <groupfilter function='level-members' level='[Name_Of_Cafe (Sheet11)]' />
          <groupfilter function='level-members' level='[Price_per_pax]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Image 1,Image 2,Image 3,Name Of Cafe (Sheet11))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Image 1:nk]' />
          <groupfilter function='level-members' level='[none:Image 2:nk]' />
          <groupfilter function='level-members' level='[none:Image 3:nk]' />
          <groupfilter function='level-members' level='[none:Name_Of_Cafe (Sheet11):nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.408046' group-percentage='0.0632184' measure-ordering='alphabetic' measure-percentage='0.528736' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_849772956182061056:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Distance &lt; 250 metres&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Distance &gt; 470 metres&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Distance &lt; 470 metres&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_849772956182499329:nk]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>&quot;The Caffeine Experience&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;Competitors&quot;</bucket>
            </map>
            <map to=':filled/triangle'>
              <bucket>&quot;Tanjong Pagar MRT&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1008524855170584577:nk]' type='palette'>
            <map to='#27763d'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Positive(&gt;0.3)&quot;</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Negative(&lt;=0)&quot;</bucket>
            </map>
            <map to='#ee7422'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neutral(&lt;=0.3)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BoxPlot and Sample Reviews' type='sheet' worksheet='BoxPlot' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='BoxPlot and Sample Reviews' />
      </command>
    </action>
    <action caption='Hyperlink4' name='[Action11]'>
      <activation type='on-select' />
      <source dashboard='Map with Food Image' type='sheet' worksheet='Map of Competitors' />
      <link caption='' expression='&lt;[Image 1]&gt;' />
    </action>
    <action caption='Filter 8 (generated)' name='[Action12]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 8' type='sheet' worksheet='Count of trendy foods(All Data)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 8' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Polarity Dashboard' type='sheet' worksheet='Food Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Polarity Dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Polarity Dashboard' type='sheet' worksheet='Cafe Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Polarity Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Raw Frequency Line Chart (filters)' type='sheet' worksheet='Food Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Raw Frequency Line Chart (filters)' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Raw Frequency Food Insights' type='sheet' worksheet='Raw Frequency Food Count' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Raw Frequency Food Insights' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Polarity Food Insights' type='sheet' worksheet='Count of top 10 food' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Polarity Food Insights' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Polarity Dashboard' type='sheet' worksheet='All Polarity Line chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Polarity Dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated) 1' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Raw Frequency Dashboard' type='sheet' worksheet='Food Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Raw Frequency Dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated) 1' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Raw Frequency Dashboard' type='sheet' worksheet='Cafe Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Raw Frequency Dashboard' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Raw Frequency Dashboard' type='sheet' worksheet='Raw frequency Line Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Raw Frequency Dashboard' />
      </command>
    </action>
    <datasources>
      <datasource caption='Sheet1 (Burpple data with image url)' name='federated.11htxgq0ugffyd1e0dns11wtrz0f' />
    </datasources>
    <datasource-dependencies datasource='federated.11htxgq0ugffyd1e0dns11wtrz0f'>
      <column datatype='string' name='[Image 1]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='All Foods Scatterplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column datatype='real' name='[Average Polarity]' role='measure' type='quantitative' />
            <column caption='Total Count across all years' datatype='real' name='[Calculation_850335926265724930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Count (Data1)])*12' />
            </column>
            <column datatype='integer' name='[Count (Data1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column datatype='string' name='[Keyword]' role='dimension' type='nominal' />
            <column-instance column='[Average Polarity]' derivation='Avg' name='[avg:Average Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[TCE items]' derivation='InOut' name='[io:TCE items:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top 3 drinks by Count]' derivation='InOut' name='[io:Top 3 drinks by Count:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top 3 drinks by Polarity]' derivation='InOut' name='[io:Top 3 drinks by Polarity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top 3 foods by Count]' derivation='InOut' name='[io:Top 3 foods by Count:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top 3 foods by Polarity]' derivation='InOut' name='[io:Top 3 foods by Polarity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[Keyword]' derivation='None' name='[none:Keyword:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_850335926265724930]' derivation='User' name='[usr:Calculation_850335926265724930:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Exclusions (Food,IN/OUT(TCE items))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Food:nk]' />
                <groupfilter function='level-members' level='[io:TCE items:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[io:TCE items:nk]' member='true' />
                  <groupfilter function='member' level='[none:Food:nk]' member='%null%' />
                </groupfilter>
                <order>
                  <hierarchy name='[none:Food:nk]' />
                  <hierarchy name='[io:TCE items:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Count:nk]'>
            <groupfilter function='level-members' level='[io:Top 3 drinks by Count:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Polarity:nk]'>
            <groupfilter function='level-members' level='[io:Top 3 drinks by Polarity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Count:nk]'>
            <groupfilter function='level-members' level='[io:Top 3 foods by Count:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Polarity:nk]'>
            <groupfilter function='level-members' level='[io:Top 3 foods by Polarity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Count:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Polarity:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Count:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Polarity:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Exclusions (Food,IN/OUT(TCE items))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[usr:Calculation_850335926265724930:qk]' scope='cols' value='Total Count across all years' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Polarity:nk]' value='Top 3 Foods by Polarity'>
              <formatted-text>
                <run bold='true' fontsize='10'>Top 3 Foods by Polarity</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Count:nk]' value='Top 3 Foods by Count'>
              <formatted-text>
                <run bold='true' fontsize='10'>Top 3 Foods by Count</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Polarity:nk]' value='Top 3 Drinks by Polarity'>
              <formatted-text>
                <run bold='true' fontsize='10'>Top 3 Drinks by Polarity</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Count:nk]' value='Top 3 Drinks by Count'>
              <formatted-text>
                <run bold='true' fontsize='10'>Top 3 Drinks by Count</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Set 2:nk]' />
              <text column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' />
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Set 1:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14' underline='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Avg. Average Polarity:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Total Count across all years:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[usr:Calculation_850335926265724930:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[usr:Calculation_850335926265724930:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='All Polarity Line chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='12' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column datatype='real' name='[Average Polarity]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column caption='Q Year List' datatype='date' name='[QYearList]' role='dimension' type='ordinal' />
            <column-instance column='[Top 10 Mentions]' derivation='InOut' name='[io:Top 10 Mentions:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top 10 Trending]' derivation='InOut' name='[io:Top 10 Trending:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[QYearList]' derivation='None' name='[none:QYearList:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Average Polarity]' derivation='Sum' name='[sum:Average Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QYearList]' derivation='Quarter-Trunc' name='[tqr:QYearList:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Cafe Name)]'>
            <groupfilter function='level-members' level='[Cafe_Name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food)]'>
            <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Exclusions (Food,QUARTER(Q Year List))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Food:nk]' />
              <groupfilter function='level-members' level='[tqr:QYearList:qk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Mentions:nk]'>
            <groupfilter function='level-members' level='[io:Top 10 Mentions:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Trending:nk]'>
            <groupfilter function='level-members' level='[io:Top 10 Trending:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:QYearList:ok]' member='#2016-01-01#' />
              <groupfilter function='member' level='[none:QYearList:ok]' member='#2016-04-01#' />
              <groupfilter function='member' level='[none:QYearList:ok]' member='#2016-07-01#' />
              <groupfilter function='member' level='[none:QYearList:ok]' member='#2016-10-01#' />
              <groupfilter function='member' level='[none:QYearList:ok]' member='#2017-01-01#' />
              <groupfilter function='member' level='[none:QYearList:ok]' member='#2017-04-01#' />
              <groupfilter function='member' level='[none:QYearList:ok]' member='#2017-07-01#' />
              <groupfilter function='member' level='[none:QYearList:ok]' member='#2017-10-01#' />
              <groupfilter function='member' level='[none:QYearList:ok]' member='#2018-01-01#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Exclusions (Food,QUARTER(Q Year List))]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Cafe Name)]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food)]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Mentions:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Trending:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Trending:nk]' value=' Top 10 Trending '>
              <formatted-text>
                <run bold='true'> Top 10 Trending </run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Mentions:nk]' value='Top 10 Mentions'>
              <formatted-text>
                <run bold='true'>Top 10 Mentions</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[sum:Average Polarity:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[tqr:QYearList:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Average Sentiment viz in tooltip'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data ((TP) Resturants with the Food (Top 10))' name='federated.1i9dtkq12hler81dnwt3v1exon9t' />
          </datasources>
          <datasource-dependencies datasource='federated.1i9dtkq12hler81dnwt3v1exon9t'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafes that serve the item' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[Action (Food)]'>
            <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[Tooltip (Food)]'>
            <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action - Sheet 2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1i9dtkq12hler81dnwt3v1exon9t].[Tooltip (Food)]</column>
            <column>[federated.1i9dtkq12hler81dnwt3v1exon9t].[Action (Food)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]' scope='cols' value='Average Sentiment' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Cafe_Name:nk]' value='256' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]' />
              <text column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Cafe_Name:nk]</rows>
        <cols>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='BoxPlot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Burpple data with image url)' name='federated.11htxgq0ugffyd1e0dns11wtrz0f' />
          </datasources>
          <datasource-dependencies datasource='federated.11htxgq0ugffyd1e0dns11wtrz0f'>
            <column caption='Average Polarity' datatype='real' name='[Average_Polarity]' role='measure' type='quantitative' />
            <column caption='Sentiment Category' datatype='string' name='[Calculation_1008524855170584577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Average_Polarity] &lt;=0 THEN &quot;Negative(&lt;=0)&quot;&#13;&#10;ELSEIF [Average_Polarity] &lt;= 0.3 THEN &quot;Neutral(&lt;=0.3)&quot;&#13;&#10;ELSEIF [Average_Polarity] &gt; 0.3 THEN &quot;Positive(&gt;0.3)&quot;&#13;&#10;END' />
            </column>
            <column caption='Shapes' datatype='string' name='[Calculation_849772956182499329]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Name_Of_Cafe]=&quot;Tanjong Pagar MRT&quot; THEN &apos;Tanjong Pagar MRT&apos;&#13;&#10;ELSEIF [Name_Of_Cafe]=&quot;The Caffeine Experience&quot; THEN &apos;The Caffeine Experience&apos;&#13;&#10;ELSE &apos;Competitors&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Image 1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item 1 Price]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item 1 name]' role='dimension' type='nominal' />
            <column caption='Name Of Cafe (Sheet11)' datatype='string' name='[Name_Of_Cafe (Sheet11)]' role='dimension' type='nominal' />
            <column caption='Name Of Cafe' datatype='string' name='[Name_Of_Cafe]' role='dimension' type='nominal' />
            <column caption='Price per pax' datatype='string' name='[Price_per_pax]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1008524855170584577]' derivation='None' name='[none:Calculation_1008524855170584577:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name_Of_Cafe]' derivation='None' name='[none:Name_Of_Cafe:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price_per_pax]' derivation='None' name='[none:Price_per_pax:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average_Polarity]' derivation='Sum' name='[sum:Average_Polarity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[Action (Sentiment Category,Shapes,Image 1,Item 1 Price,Item 1 name,Name Of Cafe (Sheet11),Price per pax)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1008524855170584577]' />
              <groupfilter function='level-members' level='[Calculation_849772956182499329]' />
              <groupfilter function='level-members' level='[Image 1]' />
              <groupfilter function='level-members' level='[Item 1 Price]' />
              <groupfilter function='level-members' level='[Item 1 name]' />
              <groupfilter function='level-members' level='[Name_Of_Cafe (Sheet11)]' />
              <groupfilter function='level-members' level='[Price_per_pax]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Name_Of_Cafe:nk]'>
            <groupfilter function='level-members' level='[none:Name_Of_Cafe:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11htxgq0ugffyd1e0dns11wtrz0f].[Action (Sentiment Category,Shapes,Image 1,Item 1 Price,Item 1 name,Name Of Cafe (Sheet11),Price per pax)]</column>
            <column>[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Name_Of_Cafe:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_gray60' />
            <format attr='opacity' id='refline0' value='126' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_1008524855170584577:nk]' />
              <lod column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Name_Of_Cafe:nk]' />
            </encodings>
            <reference-line axis-column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Average_Polarity:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Average_Polarity:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14' underline='true'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Name_Of_Cafe:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Sentiment Category:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_1008524855170584577:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Price per pax:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Price_per_pax:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Average Polarity:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Average_Polarity:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Average_Polarity:qk]</rows>
        <cols>[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Price_per_pax:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cafe Filter'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='12' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column caption='Q Year List' datatype='date' name='[QYearList]' role='dimension' type='ordinal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[QYearList]' derivation='Quarter-Trunc' name='[tqr:QYearList:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food)]'>
            <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food,QUARTER(Q Year List))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Food]' />
              <groupfilter function='level-members' level='[tqr:QYearList:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food)]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food,QUARTER(Q Year List))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Cafes Sentiment'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='12' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column caption='Q Year List' datatype='date' name='[QYearList]' role='dimension' type='ordinal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Sum' name='[sum:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QYearList]' derivation='Quarter-Trunc' name='[tqr:QYearList:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Cafe Name)]'>
            <groupfilter function='level-members' level='[Cafe_Name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food)]'>
            <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food,QUARTER(Q Year List))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Food]' />
              <groupfilter function='level-members' level='[tqr:QYearList:ok]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[sum:Average_Sentimentality:qk]' />
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]'>
            <groupfilter function='level-members' level='[none:Food:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Cafe Name)]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food)]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food,QUARTER(Q Year List))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[sum:Average_Sentimentality:qk]' palette='orange_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Cafe Name:&#9;</run>
                <run bold='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Average Sentimentality:&#9;</run>
                <run bold='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[sum:Average_Sentimentality:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cafes that serve item'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column datatype='string' name='[Keyword]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trendy set for 2017Q4 - 2018Q1]' derivation='InOut' name='[io:Trendy set for 2017Q4 - 2018Q1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Keyword)]'>
            <groupfilter function='level-members' level='[Keyword]' user:ui-action-filter='[Action12]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Tooltip (Keyword)]'>
            <groupfilter function='level-members' level='[Keyword]' user:ui-action-filter='[Action - Cafes that serve item]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Trendy set for 2017Q4 - 2018Q1:nk]' filter-group='4'>
            <groupfilter function='member' level='[io:Trendy set for 2017Q4 - 2018Q1:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Trendy set for 2017Q4 - 2018Q1:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Keyword)]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Tooltip (Keyword)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' value='78' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
              <text column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Count of top 10 food'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data ((TP) Resturants with the Food)' name='federated.1aga11k1ekosjx135ngez1ayruag' />
          </datasources>
          <datasource-dependencies datasource='federated.1aga11k1ekosjx135ngez1ayruag'>
            <column datatype='real' name='[Average Polarity]' role='measure' type='quantitative' />
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafes that sell this item' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column caption='Actual Count' datatype='real' datatype-customized='true' name='[Calculation_848365600023904256]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Count]/12' />
            </column>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average Polarity]' derivation='Sum' name='[sum:Average Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_848365600023904256]' derivation='Sum' name='[sum:Calculation_848365600023904256:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aga11k1ekosjx135ngez1ayruag].[none:Cafe_Name:nk]'>
            <groupfilter expression='SUM([Calculation_848365600023904256]) &gt;= 3.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Cafe_Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]' direction='DESC' using='[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Count:qk]' />
          <slices>
            <column>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Cafe_Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]' />
              <lod column='[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]' />
              <lod column='[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14' underline='true'>&lt;[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Count of Item mentions:&#9;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='12'>&lt;[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='12'>Average sentimentality:</run>
                <run> &lt;[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]&gt;&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</rows>
        <cols>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Count of trendy foods(All Data)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Total count for 2 quarters' datatype='real' name='[Calculation_850335926243942400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Count (Data1)]) *2' />
            </column>
            <column caption='Total Count across all years' datatype='real' name='[Calculation_850335926265724930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Count (Data1)])*12' />
            </column>
            <column datatype='integer' name='[Count (Data1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column datatype='string' name='[Keyword]' role='dimension' type='nominal' />
            <column-instance column='[Trendy set for 2017Q4 - 2018Q1]' derivation='InOut' name='[io:Trendy set for 2017Q4 - 2018Q1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[Keyword]' derivation='None' name='[none:Keyword:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_850335926243942400]' derivation='User' name='[usr:Calculation_850335926243942400:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_850335926265724930]' derivation='User' name='[usr:Calculation_850335926265724930:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Trendy set for 2017Q4 - 2018Q1:nk]' filter-group='4'>
            <groupfilter function='member' level='[io:Trendy set for 2017Q4 - 2018Q1:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[usr:Calculation_850335926243942400:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Trendy set for 2017Q4 - 2018Q1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Keyword:&#9;</run>
                <run bold='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Count across all years:&#9;</run>
                <run bold='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[usr:Calculation_850335926265724930:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>&lt;Sheet name=&quot;Cafes that serve item&quot; maxwidth=&quot;800&quot; maxheight=&quot;800&quot; filter=&quot;&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]&gt;&quot;&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[usr:Calculation_850335926265724930:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Earl Grey Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Earl Grey </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;earl grey&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Food Filter'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='12' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column caption='Actual Count' datatype='real' name='[Calculation_560135224675717120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Count]/12' />
            </column>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column caption='Q Year List' datatype='date' name='[QYearList]' role='dimension' type='ordinal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_560135224675717120]' derivation='Sum' name='[sum:Calculation_560135224675717120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QYearList]' derivation='Quarter-Trunc' name='[tqr:QYearList:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Cafe Name)]'>
            <groupfilter function='level-members' level='[Cafe_Name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food,QUARTER(Q Year List))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Food]' />
              <groupfilter function='level-members' level='[tqr:QYearList:ok]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[sum:Count:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Cafe Name)]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food,QUARTER(Q Year List))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[sum:Calculation_560135224675717120:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Food Insights'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data ((TP) Resturants with the Food (Top 10))' name='federated.1i9dtkq12hler81dnwt3v1exon9t' />
          </datasources>
          <datasource-dependencies datasource='federated.1i9dtkq12hler81dnwt3v1exon9t'>
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column caption='Food Items' datatype='string' name='[Food_Items]' role='dimension' type='nominal' />
            <column datatype='string' name='[Negative Insights]' role='dimension' type='nominal' />
            <column datatype='string' name='[Positive Insights]' role='dimension' type='nominal' />
            <column-instance column='[Food_Items]' derivation='None' name='[none:Food_Items:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative Insights]' derivation='None' name='[none:Negative Insights:nk]' pivot='key' type='nominal' />
            <column-instance column='[Positive Insights]' derivation='None' name='[none:Positive Insights:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[Action (Food)]'>
            <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i9dtkq12hler81dnwt3v1exon9t].[Action (Food)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Negative Insights:nk]' value='44' />
            <format attr='width' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Positive Insights:nk]' value='52' />
            <format attr='width' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food_Items:nk]' value='112' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14'>&lt;[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food_Items:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='12' underline='true'>Positive Insights:</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Positive Insights:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#e15759' fontsize='12' underline='true'>Negative Insights:&#9;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Negative Insights:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food_Items:nk] / ([federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Positive Insights:nk] / [federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Negative Insights:nk]))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Green Tea Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Green Tea</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;green tea&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ice cream bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Ice Cream</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;ice cream&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Iced Mocha bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Iced Mocha</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;iced mocha&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14' underline='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Average Sentimentality:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Total Count:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map of Competitors'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Burpple data with image url)' name='federated.11htxgq0ugffyd1e0dns11wtrz0f' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11htxgq0ugffyd1e0dns11wtrz0f'>
            <column caption='Average Polarity' datatype='real' name='[Average_Polarity]' role='measure' type='quantitative' />
            <column caption='Distance Categories' datatype='string' name='[Calculation_849772956182061056]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Distance to Tanjong Pagar MRT (m)] &lt;1 THEN &apos;MRT&apos;&#13;&#10;ELSEIF [Distance to Tanjong Pagar MRT (m)]&lt;250 THEN &apos;Distance &lt; 250 metres&apos;&#13;&#10;ELSEIF [Distance to Tanjong Pagar MRT (m)]&lt;470 AND [Distance to Tanjong Pagar MRT (m)]&gt;250 THEN &apos;Distance &lt; 470 metres&apos;&#13;&#10;ELSEIF [Distance to Tanjong Pagar MRT (m)]&gt;470 THEN &apos;Distance &gt; 470 metres&apos;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Shapes' datatype='string' name='[Calculation_849772956182499329]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Name_Of_Cafe]=&quot;Tanjong Pagar MRT&quot; THEN &apos;Tanjong Pagar MRT&apos;&#13;&#10;ELSEIF [Name_Of_Cafe]=&quot;The Caffeine Experience&quot; THEN &apos;The Caffeine Experience&apos;&#13;&#10;ELSE &apos;Competitors&apos;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='real' name='[Distance to Tanjong Pagar MRT (m)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Image 1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item 1 Price]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item 1 name]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name Of Cafe (Sheet11)' datatype='string' name='[Name_Of_Cafe (Sheet11)]' role='dimension' type='nominal' />
            <column caption='Name Of Cafe' datatype='string' name='[Name_Of_Cafe]' role='dimension' type='nominal' />
            <column caption='Price per pax' datatype='string' name='[Price_per_pax]' role='dimension' type='nominal' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_849772956182061056]' derivation='None' name='[none:Calculation_849772956182061056:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_849772956182499329]' derivation='None' name='[none:Calculation_849772956182499329:nk]' pivot='key' type='nominal' />
            <column-instance column='[Image 1]' derivation='None' name='[none:Image 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item 1 Price]' derivation='None' name='[none:Item 1 Price:nk]' pivot='key' type='nominal' />
            <column-instance column='[Item 1 name]' derivation='None' name='[none:Item 1 name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name_Of_Cafe (Sheet11)]' derivation='None' name='[none:Name_Of_Cafe (Sheet11):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price_per_pax]' derivation='None' name='[none:Price_per_pax:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average_Polarity]' derivation='Sum' name='[sum:Average_Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance to Tanjong Pagar MRT (m)]' derivation='Sum' name='[sum:Distance to Tanjong Pagar MRT (m):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Average_Polarity:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Count:qk]' included-values='in-range-or-null'>
            <min>1</min>
            <max>300</max>
          </filter>
          <slices>
            <column>[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Average_Polarity:qk]</column>
            <column>[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Count:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[avg:Longitude:qk]' field-type='quantitative' max='11561020.462075751' min='11558940.965268483' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[avg:Latitude:qk]' field-type='quantitative' max='142659.52993206138' min='141733.05490210693' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[avg:Latitude:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[avg:Longitude:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Image 1:nk]' value='false' />
            <format attr='in-tooltip' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_849772956182061056:nk]' value='false' />
            <format attr='in-tooltip' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_849772956182499329:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#ffffff' />
            <format attr='title' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Average_Polarity:qk]' value='Average Sentiment Score'>
              <formatted-text>
                <run>Average Sentiment Score</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Count:qk]' value='No. of Reviews'>
              <formatted-text>
                <run>No. of Reviews</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_849772956182061056:nk]' />
              <shape column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_849772956182499329:nk]' />
              <size column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_849772956182499329:nk]' />
              <lod column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Name_Of_Cafe (Sheet11):nk]' />
              <lod column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Distance to Tanjong Pagar MRT (m):qk]' />
              <lod column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Item 1 name:nk]' />
              <lod column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Item 1 Price:nk]' />
              <lod column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Price_per_pax:nk]' />
              <lod column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Image 1:nk]' />
              <lod column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Count:qk]' />
              <lod column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Average_Polarity:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Name_Of_Cafe (Sheet11):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Item  Name:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Item 1 name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Item  Price ($):&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Item 1 Price:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Price per pax ($):</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Æ&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Price_per_pax:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12'>Distance to Tanjong Pagar MRT (m): </run>
                <run bold='true' fontsize='12'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Distance to Tanjong Pagar MRT (m):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='12'>Cafe Average Sentiment Score:</run>
                <run fontcolor='#666666' fontsize='12'>Æ </run>
                <run bold='true' fontsize='12'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Average_Polarity:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='12'>No. of Reviews: </run>
                <run bold='true' fontcolor='#898989' fontsize='12'>Æ </run>
                <run bold='true' fontsize='12'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Count:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11htxgq0ugffyd1e0dns11wtrz0f].[avg:Latitude:qk]</rows>
        <cols>[federated.11htxgq0ugffyd1e0dns11wtrz0f].[avg:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Milk Tea bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Milk Tea</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;milk tea&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ninja Bowl '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Polarity1' datatype='real' name='[Average_Polarity]' role='measure' type='quantitative' />
            <column caption='Café Names' datatype='string' name='[Café_Names]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count (Data2)]' role='measure' type='quantitative' />
            <column-instance column='[Average_Polarity]' derivation='Avg' name='[avg:Average_Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count (Data2)]' derivation='Avg' name='[avg:Count (Data2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ninja Bowl Highlight]' derivation='InOut' name='[io:Ninja Bowl Highlight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Café_Names]' derivation='None' name='[none:Café_Names:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]' scope='rows' value='Average Polarity' />
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]' scope='cols' value='Number of Mentions' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Ninja Bowl Highlight:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Ninja Bowl Highlight:nk]' />
              <shape column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Ninja Bowl Highlight:nk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14' underline='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Average Polarity:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Number of mentions:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Onsen egg bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Onsen Egg</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;onsen egg&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Polarity of trendy foods(All Data)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column datatype='real' name='[Average Polarity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column datatype='string' name='[Keyword]' role='dimension' type='nominal' />
            <column-instance column='[Average Polarity]' derivation='Avg' name='[avg:Average Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trendy set for 2017Q4 - 2018Q1]' derivation='InOut' name='[io:Trendy set for 2017Q4 - 2018Q1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[Keyword]' derivation='None' name='[none:Keyword:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Keyword)]'>
            <groupfilter function='level-members' level='[Keyword]' user:ui-action-filter='[Action12]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Trendy set for 2017Q4 - 2018Q1:nk]' filter-group='4'>
            <groupfilter function='member' level='[io:Trendy set for 2017Q4 - 2018Q1:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Trendy set for 2017Q4 - 2018Q1:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Keyword)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Price of items served by cafes'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data ((TP) Resturants with the Food (Top 10))' name='federated.1i9dtkq12hler81dnwt3v1exon9t' />
          </datasources>
          <datasource-dependencies datasource='federated.1i9dtkq12hler81dnwt3v1exon9t'>
            <column datatype='integer' name='[Average Price (Data1)]' role='dimension' type='ordinal' />
            <column caption='Cafes that serve the item' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Food (Data1)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average Price (Data1)]' derivation='None' name='[none:Average Price (Data1):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food (Data1)]' derivation='None' name='[none:Food (Data1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Average Price (Data1)]' derivation='Sum' name='[sum:Average Price (Data1):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[Action (Food)]'>
            <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[Tooltip (Food)]'>
            <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action - Price of items served by cafes]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Average Price (Data1):qk]' />
          <slices>
            <column>[federated.1i9dtkq12hler81dnwt3v1exon9t].[Action (Food)]</column>
            <column>[federated.1i9dtkq12hler81dnwt3v1exon9t].[Tooltip (Food)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Average Price (Data1):qk]' scope='cols' value='Average price of item' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='129' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Average Price (Data1):ok]' value='172' />
            <format attr='width' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Average Price (Data1):qk]' value='172' />
            <format attr='width' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Cafe_Name:nk]' value='236' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Average Price (Data1):qk]' num-steps='4' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Average Price (Data1):qk]' />
              <text column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Average Price (Data1):ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food (Data1):nk] / [federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Cafe_Name:nk])</rows>
        <cols>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Average Price (Data1):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Raw Frequency Food Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data ((TP) Resturants with the Food (Top 10))' name='federated.1i9dtkq12hler81dnwt3v1exon9t' />
          </datasources>
          <datasource-dependencies datasource='federated.1i9dtkq12hler81dnwt3v1exon9t'>
            <column datatype='integer' name='[Average Price (Data1)]' role='dimension' type='ordinal' />
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafes that serve the item' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food (Data1)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average Price (Data1)]' derivation='Avg' name='[avg:Average Price (Data1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[Action (Average Price (Data1),Cafes that serve the item,Food (Data1))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Average Price (Data1)]' />
              <groupfilter function='level-members' level='[Cafe_Name]' />
              <groupfilter function='level-members' level='[Food (Data1)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[Action (Food)]'>
            <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Cafe_Name:nk]'>
            <groupfilter expression='SUM([Count]) &gt;= 3' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Cafe_Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]' direction='DESC' using='[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]' />
          <slices>
            <column>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Cafe_Name:nk]</column>
            <column>[federated.1i9dtkq12hler81dnwt3v1exon9t].[Action (Average Price (Data1),Cafes that serve the item,Food (Data1))]</column>
            <column>[federated.1i9dtkq12hler81dnwt3v1exon9t].[Action (Food)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]' value='88' />
            <format attr='title' class='0' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]' scope='rows' value='Number of item mentions' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]' value='65' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]' />
              <lod column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]' />
              <lod column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]' />
              <tooltip column='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14' underline='true'>&lt;[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Item Average Sentiment: &#9;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='12'>&lt;[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#666666' fontsize='12'>Number of item mentions:</run>
                <run bold='true' fontcolor='#898989' fontsize='12'>Æ </run>
                <run bold='true' fontsize='12'>Æ </run>
                <run bold='true' fontcolor='#4e79a7' fontsize='12'>&lt;[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#666666' fontsize='12'>Average item price:</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='12'> &lt;[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]&gt;</run>
                <run>&#10;&#10;&lt;Sheet name=&quot;Price of items served by cafes&quot; maxwidth=&quot;800&quot; maxheight=&quot;800&quot; filter=&quot;&lt;[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]&gt;&quot;&gt;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</rows>
        <cols>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Raw frequency Line Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='12' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column datatype='integer' name='[Count (Data1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column caption='Q Year List' datatype='date' name='[QYearList]' role='dimension' type='ordinal' />
            <column-instance column='[Count (Data1)]' derivation='Avg' name='[avg:Count (Data1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 10 Mentions]' derivation='InOut' name='[io:Top 10 Mentions:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top 10 Trending]' derivation='InOut' name='[io:Top 10 Trending:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[QYearList]' derivation='None' name='[none:QYearList:ok]' pivot='key' type='ordinal' />
            <column-instance column='[QYearList]' derivation='Quarter-Trunc' name='[tqr:QYearList:ok]' pivot='key' type='ordinal' />
            <column-instance column='[QYearList]' derivation='Quarter-Trunc' name='[tqr:QYearList:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food)]'>
            <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food,QUARTER(Q Year List))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Food]' />
              <groupfilter function='level-members' level='[tqr:QYearList:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Mentions:nk]'>
            <groupfilter function='level-members' level='[io:Top 10 Mentions:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Trending:nk]'>
            <groupfilter function='level-members' level='[io:Top 10 Trending:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]'>
            <groupfilter from='#2016-01-01#' function='range' level='[none:QYearList:ok]' to='#2018-01-01#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food)]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Mentions:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Trending:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food,QUARTER(Q Year List))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Trending:nk]' value='Top 10 Trending'>
              <formatted-text>
                <run>Top 10 Trending</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Mentions:nk]' value='Top 10 Mentions'>
              <formatted-text>
                <run>Top 10 Mentions</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data1):qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[tqr:QYearList:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Raw frequency Line Chart (top 10)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column datatype='integer' name='[Count (Data1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column caption='Q Year List' datatype='date' name='[QYearList]' role='dimension' type='ordinal' />
            <column-instance column='[Count (Data1)]' derivation='Avg' name='[avg:Count (Data1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[QYearList]' derivation='Quarter-Trunc' name='[tqr:QYearList:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food)]'>
            <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Food:nk]' member='&quot;beef cheek&quot;' />
              <groupfilter function='member' level='[none:Food:nk]' member='&quot;earl grey&quot;' />
              <groupfilter function='member' level='[none:Food:nk]' member='&quot;french toast&quot;' />
              <groupfilter function='member' level='[none:Food:nk]' member='&quot;grain bowl&quot;' />
              <groupfilter function='member' level='[none:Food:nk]' member='&quot;green tea&quot;' />
              <groupfilter function='member' level='[none:Food:nk]' member='&quot;ice cream&quot;' />
              <groupfilter function='member' level='[none:Food:nk]' member='&quot;onsen egg&quot;' />
              <groupfilter function='member' level='[none:Food:nk]' member='&quot;poached egg&quot;' />
              <groupfilter function='member' level='[none:Food:nk]' member='&quot;scrambled egg&quot;' />
              <groupfilter function='member' level='[none:Food:nk]' member='&quot;truffle fries&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Action (Food)]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data1):qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[tqr:QYearList:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sample Reviews'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Burpple data with image url)' name='federated.11htxgq0ugffyd1e0dns11wtrz0f' />
          </datasources>
          <datasource-dependencies datasource='federated.11htxgq0ugffyd1e0dns11wtrz0f'>
            <column caption='Average Polarity' datatype='real' name='[Average_Polarity]' role='measure' type='quantitative' />
            <column caption='Café Names' datatype='string' name='[Café_Names]' role='dimension' type='nominal' />
            <column caption='Sentiment Category' datatype='string' name='[Calculation_1008524855170584577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Average_Polarity] &lt;=0 THEN &quot;Negative(&lt;=0)&quot;&#13;&#10;ELSEIF [Average_Polarity] &lt;= 0.3 THEN &quot;Neutral(&lt;=0.3)&quot;&#13;&#10;ELSEIF [Average_Polarity] &gt; 0.3 THEN &quot;Positive(&gt;0.3)&quot;&#13;&#10;END' />
            </column>
            <column caption='Shapes' datatype='string' name='[Calculation_849772956182499329]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Name_Of_Cafe]=&quot;Tanjong Pagar MRT&quot; THEN &apos;Tanjong Pagar MRT&apos;&#13;&#10;ELSEIF [Name_Of_Cafe]=&quot;The Caffeine Experience&quot; THEN &apos;The Caffeine Experience&apos;&#13;&#10;ELSE &apos;Competitors&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Image 1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item 1 Price]' role='dimension' type='nominal' />
            <column datatype='string' name='[Item 1 name]' role='dimension' type='nominal' />
            <column caption='Name Of Cafe (Sheet11)' datatype='string' name='[Name_Of_Cafe (Sheet11)]' role='dimension' type='nominal' />
            <column caption='Name Of Cafe' datatype='string' name='[Name_Of_Cafe]' role='dimension' type='nominal' />
            <column caption='Negative Review' datatype='string' name='[Negative_Review]' role='dimension' type='nominal' />
            <column caption='Positive Review' datatype='string' name='[Positive_Review]' role='dimension' type='nominal' />
            <column caption='Price per pax' datatype='string' name='[Price_per_pax]' role='dimension' type='nominal' />
            <column-instance column='[Café_Names]' derivation='None' name='[none:Café_Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative_Review]' derivation='None' name='[none:Negative_Review:nk]' pivot='key' type='nominal' />
            <column-instance column='[Positive_Review]' derivation='None' name='[none:Positive_Review:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[Action (Sentiment Category,Name Of Cafe,Price per pax)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1008524855170584577]' />
              <groupfilter function='level-members' level='[Name_Of_Cafe]' />
              <groupfilter function='level-members' level='[Price_per_pax]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[Action (Sentiment Category,Shapes,Image 1,Item 1 Price,Item 1 name,Name Of Cafe (Sheet11),Price per pax)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1008524855170584577]' />
              <groupfilter function='level-members' level='[Calculation_849772956182499329]' />
              <groupfilter function='level-members' level='[Image 1]' />
              <groupfilter function='level-members' level='[Item 1 Price]' />
              <groupfilter function='level-members' level='[Item 1 name]' />
              <groupfilter function='level-members' level='[Name_Of_Cafe (Sheet11)]' />
              <groupfilter function='level-members' level='[Price_per_pax]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11htxgq0ugffyd1e0dns11wtrz0f].[Action (Sentiment Category,Shapes,Image 1,Item 1 Price,Item 1 name,Name Of Cafe (Sheet11),Price per pax)]</column>
            <column>[federated.11htxgq0ugffyd1e0dns11wtrz0f].[Action (Sentiment Category,Name Of Cafe,Price per pax)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Negative_Review:nk]' value='95' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Negative_Review:nk]' value='280' />
            <format attr='width' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Positive_Review:nk]' value='264' />
            <format attr='width' field='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Café_Names:nk]' value='112' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='color' scope='cols' value='#000000' />
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='12'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Café_Names:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#72b966' italic='true' underline='true'>Positive Review:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Positive_Review:nk]&gt;</run>
                <run>Æ&#10;&#10;&#10;</run>
                <run bold='true' fontcolor='#e15759' italic='true' underline='true'>Negative Review:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'>&lt;[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Negative_Review:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Café_Names:nk] / ([federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Positive_Review:nk] / [federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Negative_Review:nk]))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scatter across all years'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column datatype='real' name='[Average Polarity]' role='measure' type='quantitative' />
            <column caption='Total Count across all years' datatype='real' name='[Calculation_850335926265724930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Count (Data1)])*12' />
            </column>
            <column datatype='integer' name='[Count (Data1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average Polarity]' derivation='Avg' name='[avg:Average Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TCE items]' derivation='InOut' name='[io:TCE items:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top 3 drinks by Count]' derivation='InOut' name='[io:Top 3 drinks by Count:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top 3 drinks by Polarity]' derivation='InOut' name='[io:Top 3 drinks by Polarity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top 3 foods by Count]' derivation='InOut' name='[io:Top 3 foods by Count:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top 3 foods by Polarity]' derivation='InOut' name='[io:Top 3 foods by Polarity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_850335926265724930]' derivation='User' name='[usr:Calculation_850335926265724930:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Exclusions (Food,IN/OUT(TCE items))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Food:nk]' />
                <groupfilter function='level-members' level='[io:TCE items:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[io:TCE items:nk]' member='true' />
                  <groupfilter function='member' level='[none:Food:nk]' member='%null%' />
                </groupfilter>
                <order>
                  <hierarchy name='[none:Food:nk]' />
                  <hierarchy name='[io:TCE items:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]'>
            <groupfilter function='level-members' level='[io:TCE items:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Count:nk]'>
            <groupfilter function='level-members' level='[io:Top 3 drinks by Count:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Polarity:nk]'>
            <groupfilter function='level-members' level='[io:Top 3 drinks by Polarity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Count:nk]'>
            <groupfilter function='level-members' level='[io:Top 3 foods by Count:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Polarity:nk]'>
            <groupfilter function='level-members' level='[io:Top 3 foods by Polarity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Count:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Polarity:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Count:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Polarity:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Exclusions (Food,IN/OUT(TCE items))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[usr:Calculation_850335926265724930:qk]' scope='cols' value='Total Count across all years' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]' />
              <text column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[usr:Calculation_850335926265724930:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data ((TP) Resturants with the Food)' name='federated.1aga11k1ekosjx135ngez1ayruag' />
          </datasources>
          <datasource-dependencies datasource='federated.1aga11k1ekosjx135ngez1ayruag'>
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column caption='Food Items' datatype='string' name='[Food_Items]' role='dimension' type='nominal' />
            <column datatype='string' name='[Negative Insights]' role='dimension' type='nominal' />
            <column datatype='string' name='[Positive Insights]' role='dimension' type='nominal' />
            <column-instance column='[Food_Items]' derivation='None' name='[none:Food_Items:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative Insights]' derivation='None' name='[none:Negative Insights:nk]' pivot='key' type='nominal' />
            <column-instance column='[Positive Insights]' derivation='None' name='[none:Positive Insights:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aga11k1ekosjx135ngez1ayruag].[Action (Food)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Food]' member='&quot;buttermilk waffle&quot;' />
              <groupfilter function='member' level='[Food]' member='&quot;date pudding&quot;' />
              <groupfilter function='member' level='[Food]' member='&quot;gula melaka&quot;' />
              <groupfilter function='member' level='[Food]' member='&quot;hollandaise sauce&quot;' />
              <groupfilter function='member' level='[Food]' member='&quot;ice cream&quot;' />
              <groupfilter function='member' level='[Food]' member='&quot;iced mocha&quot;' />
              <groupfilter function='member' level='[Food]' member='&quot;pickled vegetables&quot;' />
              <groupfilter function='member' level='[Food]' member='&quot;rice bowl&quot;' />
              <groupfilter function='member' level='[Food]' member='&quot;scrambled egg&quot;' />
              <groupfilter function='member' level='[Food]' member='&quot;sweet potato&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1aga11k1ekosjx135ngez1ayruag].[Action (Food)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food_Items:nk]' value='60' />
            <format attr='width' field='[federated.1aga11k1ekosjx135ngez1ayruag].[none:Negative Insights:nk]' value='40' />
            <format attr='width' field='[federated.1aga11k1ekosjx135ngez1ayruag].[none:Positive Insights:nk]' value='40' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14'>&lt;[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food_Items:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#e15759' fontsize='12' underline='true'>Negative Insights:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[federated.1aga11k1ekosjx135ngez1ayruag].[none:Negative Insights:nk]&gt;</run>
                <run>Æ&#10;&#10;&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='12' underline='true'>Positive Insights:</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[federated.1aga11k1ekosjx135ngez1ayruag].[none:Positive Insights:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.1aga11k1ekosjx135ngez1ayruag].[none:Food_Items:nk] / ([federated.1aga11k1ekosjx135ngez1ayruag].[none:Negative Insights:nk] / [federated.1aga11k1ekosjx135ngez1ayruag].[none:Positive Insights:nk]))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='TCE Competitors MAP '>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Café Names' datatype='string' name='[Café_Names]' role='dimension' type='nominal' />
            <column caption='Competitors legend' datatype='string' name='[Calculation_1133781232569679872]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Café_Names]==&quot;The Caffeine Experience&quot; THEN &quot;The Caffeine Experience&quot;&#13;&#10;ELSEIF [Café_Names]==&quot;Tanjong Pagar MRT&quot; THEN &quot;Tanjong Pagar MRT&quot;&#13;&#10;ELSE &quot;Competitors&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='TCE foods' datatype='string' name='[Calculation_888616528774746112]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Food]==&quot;braised beef&quot; THEN &quot;braised beef&quot;&#13;&#10;ELSEIF [Food]==&quot;coffee brew&quot; THEN &quot;coffee brew&quot;&#13;&#10;ELSEIF [Food]==&quot;brown rice&quot; THEN &quot;brown rice&quot;&#13;&#10;ELSEIF [Food]==&quot;earl grey&quot; THEN &quot;earl grey&quot;&#13;&#10;ELSEIF [Food]==&quot;garden greens&quot; THEN &quot;garden greens&quot;&#13;&#10;ELSEIF [Food]==&quot;grain bowl&quot; THEN &quot;grain bowl&quot;&#13;&#10;ELSEIF [Food]==&quot;green tea&quot; THEN &quot;green tea&quot;&#13;&#10;ELSEIF [Food]==&quot;&quot; THEN &quot;Null&quot;&#13;&#10;&#13;&#10;ELSE &quot;Offers different food&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Count (Data2)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Distance in m]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Price per pax]' role='dimension' type='nominal' />
            <column datatype='string' name='[Top foods they offer]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count (Data2)]' derivation='Avg' name='[avg:Count (Data2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance in m]' derivation='Avg' name='[avg:Distance in m:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top Competitors]' derivation='InOut' name='[io:Top Competitors:nk]' pivot='key' type='nominal' />
            <column-instance column='[Café_Names]' derivation='None' name='[none:Café_Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1133781232569679872]' derivation='None' name='[none:Calculation_1133781232569679872:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_888616528774746112]' derivation='None' name='[none:Calculation_888616528774746112:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price per pax]' derivation='None' name='[none:Price per pax:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top foods they offer]' derivation='None' name='[none:Top foods they offer:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top Competitors:nk]'>
            <groupfilter function='level-members' level='[io:Top Competitors:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Calculation_888616528774746112:nk]'>
            <groupfilter from='&quot;braised beef&quot;' function='range' level='[none:Calculation_888616528774746112:nk]' to='&quot;green tea&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Price per pax:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Price per pax:nk]' member='&quot;10&quot;' />
              <groupfilter function='member' level='[none:Price per pax:nk]' member='&quot;12&quot;' />
              <groupfilter function='member' level='[none:Price per pax:nk]' member='&quot;15&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top Competitors:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Price per pax:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Calculation_888616528774746112:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Longitude:qk]' field-type='quantitative' max='11562121.781871228' min='11558436.712507585' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Latitude:qk]' field-type='quantitative' max='143626.08966069121' min='141448.85605942726' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Latitude:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Longitude:qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top Competitors:nk]' value='Top Competitors'>
              <formatted-text>
                <run bold='true' fontsize='10'>Top Competitors</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Price per pax:nk]' />
              <shape column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Calculation_1133781232569679872:nk]' />
              <size column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Distance in m:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Top foods they offer:nk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Price per pax:nk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14' underline='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#666666' fontsize='12'>Price per pax:</run>
                <run bold='true' fontsize='12'> &lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Price per pax:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Average Sentimentality:&#9;</run>
                <run bold='true' fontcolor='#000000' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#666666' fontsize='12'>Number of mentions:  </run>
                <run bold='true' fontcolor='#000000' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Distance from Tanjong Pagar MRT (m):&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Distance in m:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#666666' fontsize='12'>Food they offer:</run>
                <run bold='true' fontsize='12'>  &lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Top foods they offer:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Latitude:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='TCE Items Scatterplot '>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column datatype='real' name='[Average Polarity]' role='measure' type='quantitative' />
            <column caption='Total Count across all years' datatype='real' name='[Calculation_850335926265724930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Count (Data1)])*12' />
            </column>
            <column datatype='integer' name='[Count (Data1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average Polarity]' derivation='Avg' name='[avg:Average Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TCE items]' derivation='InOut' name='[io:TCE items:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_850335926265724930]' derivation='User' name='[usr:Calculation_850335926265724930:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Exclusions (Food,IN/OUT(TCE items))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Food:nk]' />
                <groupfilter function='level-members' level='[io:TCE items:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[io:TCE items:nk]' member='true' />
                  <groupfilter function='member' level='[none:Food:nk]' member='%null%' />
                </groupfilter>
                <order>
                  <hierarchy name='[none:Food:nk]' />
                  <hierarchy name='[io:TCE items:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]'>
            <groupfilter function='level-members' level='[io:TCE items:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]</column>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Exclusions (Food,IN/OUT(TCE items))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[usr:Calculation_850335926265724930:qk]' scope='cols' value='Total Count across all years' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#59a14f4b' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='solid' />
            <format attr='stroke-size' id='refline1' value='3' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]' value='The Caffeine Experience Items'>
              <formatted-text>
                <run bold='true' fontsize='10'>The Caffeine Experience Items</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]' />
              <text column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]' z-order='1' />
            <reference-line axis-column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]' z-order='2' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[usr:Calculation_850335926265724930:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Thai coffee bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Thai Coffee</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;thai coffee&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Cafe Name:&#9;</run>
                <run bold='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Average Sentimentality:&#9;</run>
                <run bold='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Count:&#9;</run>
                <run bold='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Thai tea bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Thai Tea</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;thai tea&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='The Lokal'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Polarity1' datatype='real' name='[Average_Polarity]' role='measure' type='quantitative' />
            <column caption='Café Names' datatype='string' name='[Café_Names]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count (Data2)]' role='measure' type='quantitative' />
            <column-instance column='[Average_Polarity]' derivation='Avg' name='[avg:Average_Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count (Data2)]' derivation='Avg' name='[avg:Count (Data2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lokal Highlight]' derivation='InOut' name='[io:Lokal Highlight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Café_Names]' derivation='None' name='[none:Café_Names:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]' scope='rows' value='Average Polarity' />
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]' scope='cols' value='Number of Mentions' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Lokal Highlight:nk]' />
              <shape column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Lokal Highlight:nk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14' underline='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Average Polarity:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Number of mentions:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='The Populus Coffee &amp; Food Co.'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Polarity1' datatype='real' name='[Average_Polarity]' role='measure' type='quantitative' />
            <column caption='Café Names' datatype='string' name='[Café_Names]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count (Data2)]' role='measure' type='quantitative' />
            <column-instance column='[Average_Polarity]' derivation='Avg' name='[avg:Average_Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count (Data2)]' derivation='Avg' name='[avg:Count (Data2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Populus Highlight]' derivation='InOut' name='[io:Populus Highlight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Café_Names]' derivation='None' name='[none:Café_Names:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]' scope='rows' value='Average Polarity' />
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]' scope='cols' value='Number of Mentions' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Populus Highlight:nk]' />
              <shape column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Populus Highlight:nk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14' underline='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Average Polarity:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Number of mentions:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 4 Competitors'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Polarity1' datatype='real' name='[Average_Polarity]' role='measure' type='quantitative' />
            <column caption='Café Names' datatype='string' name='[Café_Names]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count (Data2)]' role='measure' type='quantitative' />
            <column-instance column='[Average_Polarity]' derivation='Avg' name='[avg:Average_Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count (Data2)]' derivation='Avg' name='[avg:Count (Data2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 4 Competitors]' derivation='InOut' name='[io:Top 4 Competitors:nk]' pivot='key' type='nominal' />
            <column-instance column='[Café_Names]' derivation='None' name='[none:Café_Names:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]' scope='rows' value='Average Polarity' />
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]' scope='cols' value='Number of Mentions' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 4 Competitors:nk]' />
              <shape column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 4 Competitors:nk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14' underline='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Average Polarity:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Number of mentions:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Xiao Ya Tou'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Polarity1' datatype='real' name='[Average_Polarity]' role='measure' type='quantitative' />
            <column caption='Café Names' datatype='string' name='[Café_Names]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count (Data2)]' role='measure' type='quantitative' />
            <column-instance column='[Average_Polarity]' derivation='Avg' name='[avg:Average_Polarity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count (Data2)]' derivation='Avg' name='[avg:Count (Data2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Xiao Ya Tou Highlight]' derivation='InOut' name='[io:Xiao Ya Tou Highlight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Café_Names]' derivation='None' name='[none:Café_Names:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]' scope='rows' value='Average Polarity' />
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]' scope='cols' value='Number of Mentions' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Xiao Ya Tou Highlight:nk]' />
              <shape column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Xiao Ya Tou Highlight:nk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='14' underline='true'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Average Polarity:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='12'>Number of mentions:&#9;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Polarity:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count (Data2):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='buttermilk waffle bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Buttermilk Waffle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;buttermilk waffle&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='eggs ben bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Eggs Benedict</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;eggs ben&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='french toast bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>French Toast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;french toast&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='pulled pork bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Pulled Pork</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
          </datasources>
          <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
            <column caption='Average Sentimentality' datatype='real' name='[Average_Sentimentality]' role='measure' type='quantitative' />
            <column caption='Cafe Name' datatype='string' name='[Cafe_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Food]' role='dimension' type='nominal' />
            <column-instance column='[Average_Sentimentality]' derivation='Avg' name='[avg:Average_Sentimentality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Avg' name='[avg:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cafe_Name]' derivation='None' name='[none:Cafe_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Food]' derivation='None' name='[none:Food:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]'>
            <groupfilter function='member' level='[none:Food:nk]' member='&quot;pulled pork&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]' direction='DESC' using='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' />
          <slices>
            <column>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' scope='rows' value='Average Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
              <lod column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</rows>
        <cols>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='BoxPlot and Sample Reviews'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Sheet1 (Burpple data with image url)' name='federated.11htxgq0ugffyd1e0dns11wtrz0f' />
      </datasources>
      <datasource-dependencies datasource='federated.11htxgq0ugffyd1e0dns11wtrz0f'>
        <column caption='Name Of Cafe' datatype='string' name='[Name_Of_Cafe]' role='dimension' type='nominal' />
        <column-instance column='[Name_Of_Cafe]' derivation='None' name='[none:Name_Of_Cafe:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='55500' id='1' name='BoxPlot' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42500' id='7' name='Sample Reviews' w='82400' x='800' y='56500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='3375' id='6' name='BoxPlot' pane-specification-id='0' param='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_1008524855170584577:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4250' id='8' mode='checkdropdown' name='BoxPlot' param='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Name_Of_Cafe:nk]' type='filter' values='database' w='16000' x='83200' y='4375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Buttermilk waffle dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='62000' id='1' name='buttermilk waffle bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='36000' id='3' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/Buttermilk Waffle.png' type='bitmap' w='98400' x='800' y='63000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 8'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
      </datasources>
      <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
        <column-instance column='[Trendy set for 2017Q4 - 2018Q1]' derivation='InOut' name='[io:Trendy set for 2017Q4 - 2018Q1:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Count of trendy foods(All Data)' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='Polarity of trendy foods(All Data)' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='15125' id='6' name='Count of trendy foods(All Data)' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Trendy set for 2017Q4 - 2018Q1:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3375' id='8' name='Polarity of trendy foods(All Data)' pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]' type='color' w='16000' x='83200' y='16125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Earl Grey dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='67000' id='1' name='Earl Grey Bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='31000' id='3' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/Earl Grey insights.png' type='bitmap' w='98400' x='800' y='68000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Eggs ben dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='56500' id='1' name='eggs ben bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='41500' id='3' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/Eggs Benedict.png' type='bitmap' w='98400' x='800' y='57500'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='French Toast dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='63125' id='1' name='french toast bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='34875' id='3' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/French Toast.png' type='bitmap' w='98400' x='800' y='64125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Green Tea dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='67125' id='1' name='Green Tea Bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='30875' id='3' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/Green Tea.png' type='bitmap' w='98400' x='800' y='68125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Ice cream dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='57250' id='1' name='Ice cream bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='40750' id='3' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/Ice Cream.png' type='bitmap' w='98400' x='800' y='58250'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Iced Mocha dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='64125' id='1' name='Iced Mocha bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='33875' id='3' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/Iced Mocha.png' type='bitmap' w='98400' x='800' y='65125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Lokal Insights'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='6' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='4' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='1' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Cafe Insight screenshots/The Lokal.png' type='bitmap' w='98400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='3' name='The Lokal' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Map with Food Image'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Sheet1 (Burpple data with image url)' name='federated.11htxgq0ugffyd1e0dns11wtrz0f' />
      </datasources>
      <datasource-dependencies datasource='federated.11htxgq0ugffyd1e0dns11wtrz0f'>
        <column caption='Average Polarity' datatype='real' name='[Average_Polarity]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
        <column datatype='real' name='[Distance to Tanjong Pagar MRT (m)]' role='measure' type='quantitative' />
        <column-instance column='[Average_Polarity]' derivation='Sum' name='[sum:Average_Polarity:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Distance to Tanjong Pagar MRT (m)]' derivation='Sum' name='[sum:Distance to Tanjong Pagar MRT (m):qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='74200' x='800' y='1000'>
              <zone h='49000' id='1' name='Map of Competitors' w='74200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='' h='49000' id='9' param='https://burpple-2.imgix.net/foods/5196c719da69281baa81619394_original.?w=390&amp;h=390&amp;fit=crop&amp;q=80' type='web' w='61400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' type='empty' w='12800' x='62200' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='242' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='24200' x='75000' y='1000'>
              <zone fixed-size='116' h='15500' id='7' is-fixed='true' name='Map of Competitors' pane-specification-id='0' param='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_849772956182499329:nk]' type='shape' w='24200' x='75000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16750' id='6' name='Map of Competitors' pane-specification-id='0' param='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_849772956182061056:nk]' type='color' w='24200' x='75000' y='16500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9625' id='11' name='Map of Competitors' param='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Distance to Tanjong Pagar MRT (m):qk]' type='filter' values='database' w='24200' x='75000' y='33250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9625' id='12' name='Map of Competitors' param='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Average_Polarity:qk]' type='filter' values='database' w='24200' x='75000' y='42875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9625' id='13' name='Map of Competitors' param='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[sum:Count:qk]' type='filter' values='database' w='24200' x='75000' y='52500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Milk Tea dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='58250' id='1' name='Milk Tea bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='39750' id='3' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/Milk Tea.png' type='bitmap' w='98400' x='800' y='59250'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Ninja Bowl Insights'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='53125' id='1' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Cafe Insight screenshots/Ninja Bowl.png' type='bitmap' w='98400' x='800' y='45875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='44875' id='3' name='Ninja Bowl ' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Onsen egg dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='70125' id='1' name='Onsen egg bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='27875' id='3' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/Onsen Egg.png' type='bitmap' w='98400' x='800' y='71125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Polarity Dashboard'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
      </datasources>
      <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
        <column-instance column='[Top 10 Mentions]' derivation='InOut' name='[io:Top 10 Mentions:nk]' pivot='key' type='nominal' />
        <column-instance column='[Top 10 Trending]' derivation='InOut' name='[io:Top 10 Trending:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' type='layout-basic' w='87115' x='586' y='1042'>
              <zone h='48958' id='1' param='vert' type='layout-flow' w='87115' x='586' y='1042'>
                <zone h='48958' id='4' name='All Polarity Line chart' w='87115' x='586' y='1042'>
                  <layout-cache minheight='219' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='48958' id='3' param='horz' type='layout-flow' w='87115' x='586' y='50000'>
                <zone h='48958' id='11' name='Cafes Sentiment' w='49779' x='586' y='50000'>
                  <layout-cache fixed-size-h='1408' minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48958' id='14' param='horz' type='layout-flow' w='18668' x='50365' y='50000'>
                  <zone h='48958' id='16' name='Cafe Filter' w='18668' x='50365' y='50000'>
                    <layout-cache fixed-size-h='1644' fixed-size-w='247' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='48958' id='13' param='horz' type='layout-flow' w='18668' x='69033' y='50000'>
                  <zone h='48958' id='15' name='Food Filter' w='18668' x='69033' y='50000'>
                    <layout-cache fixed-size-h='3344' fixed-size-w='247' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='97916' id='6' is-fixed='true' param='vert' type='layout-flow' w='11713' x='87701' y='1042'>
              <zone h='15756' id='9' name='All Polarity Line chart' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Mentions:nk]' type='filter' w='11713' x='87701' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='82160' id='10' leg-item-layout='grid' name='All Polarity Line chart' pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' type='color' w='11713' x='87701' y='16798'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='15755' id='8' name='All Polarity Line chart' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Trending:nk]' type='filter' w='10908' x='70278' y='521' />
      </zones>
    </dashboard>
    <dashboard name='Polarity Food Insights'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='79600' x='800' y='1000'>
              <zone h='54375' id='1' name='Count of top 10 food' w='79600' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43625' id='8' name='Average Sentiment viz in tooltip' w='79600' x='800' y='55375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='188' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='18800' x='80400' y='1000'>
              <zone h='10125' id='6' name='Count of top 10 food' pane-specification-id='2' param='[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]' type='color' w='18800' x='80400' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10125' id='9' name='Average Sentiment viz in tooltip' pane-specification-id='0' param='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]' type='color' w='18800' x='80400' y='11125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38875' id='7' name='Sheet 6' w='18800' x='80400' y='21250'>
                <layout-cache fixed-size-h='303' fixed-size-w='202' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Populus Insights'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='1' name='The Populus Coffee &amp; Food Co.' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='6' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Cafe Insight screenshots/Populus.png' type='bitmap' w='98400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Pulled pork dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='65625' id='1' name='pulled pork bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='32375' id='3' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/Pulled Pork.png' type='bitmap' w='98400' x='800' y='66625'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Raw Frequency Dashboard'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
      </datasources>
      <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
        <column-instance column='[Top 10 Mentions]' derivation='InOut' name='[io:Top 10 Mentions:nk]' pivot='key' type='nominal' />
        <column-instance column='[Top 10 Trending]' derivation='InOut' name='[io:Top 10 Trending:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' type='layout-basic' w='88067' x='586' y='1042'>
              <zone h='48958' id='1' param='vert' type='layout-flow' w='88067' x='586' y='1042'>
                <zone h='48958' id='17' name='Raw frequency Line Chart' w='88067' x='586' y='1042'>
                  <layout-cache minheight='219' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='48958' id='3' param='horz' type='layout-flow' w='88067' x='586' y='50000'>
                <zone h='48958' id='11' name='Cafes Sentiment' w='49267' x='586' y='50000'>
                  <layout-cache fixed-size-h='1408' minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48958' id='14' param='horz' type='layout-flow' w='20132' x='49853' y='50000'>
                  <zone h='48958' id='16' name='Cafe Filter' w='20132' x='49853' y='50000'>
                    <layout-cache fixed-size-h='1644' fixed-size-w='267' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='48958' id='13' param='horz' type='layout-flow' w='18668' x='69985' y='50000'>
                  <zone h='48958' id='15' name='Food Filter' w='18668' x='69985' y='50000'>
                    <layout-cache fixed-size-h='3344' fixed-size-w='247' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='147' h='97916' id='6' is-fixed='true' param='vert' type='layout-flow' w='10761' x='88653' y='1042'>
              <zone h='15756' id='19' name='Raw frequency Line Chart' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Mentions:nk]' type='filter' w='10761' x='88653' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='591' h='77995' id='20' is-fixed='true' leg-item-layout='grid' name='Raw frequency Line Chart' pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' type='color' w='10761' x='88653' y='16798'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='14583' id='18' name='Raw frequency Line Chart' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Trending:nk]' type='filter' w='11420' x='76501' y='1693' />
      </zones>
    </dashboard>
    <dashboard name='Raw Frequency Food Insights'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='59750' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='59750' id='3' type='layout-basic' w='70900' x='800' y='1000'>
              <zone h='59750' id='1' name='Raw Frequency Food Count' w='70900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='275' h='59750' id='4' is-fixed='true' param='vert' type='layout-flow' w='27500' x='71700' y='1000'>
              <zone h='10125' id='6' name='Raw Frequency Food Count' pane-specification-id='0' param='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]' type='color' w='27500' x='71700' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38875' id='8' name='Food Insights' w='27500' x='71700' y='11125'>
                <layout-cache fixed-size-h='303' fixed-size-w='270' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='38250' id='10' name='Average Sentiment viz in tooltip' w='98400' x='800' y='60750'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Raw Frequency Line Chart (filters)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Raw frequency Line Chart' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='49000' id='6' name='Raw frequency Line Chart' pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='Food Filter' w='16000' x='83200' y='50000'>
                <layout-cache fixed-size-h='3402' fixed-size-w='167' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Scatter V2 with filters'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Data+ (Multiple Connections)' name='federated.1l77jjw10wjrf412tf8hl1sdx50b' />
      </datasources>
      <datasource-dependencies datasource='federated.1l77jjw10wjrf412tf8hl1sdx50b'>
        <column-instance column='[TCE items]' derivation='InOut' name='[io:TCE items:nk]' pivot='key' type='nominal' />
        <column-instance column='[Top 3 drinks by Count]' derivation='InOut' name='[io:Top 3 drinks by Count:nk]' pivot='key' type='nominal' />
        <column-instance column='[Top 3 drinks by Polarity]' derivation='InOut' name='[io:Top 3 drinks by Polarity:nk]' pivot='key' type='nominal' />
        <column-instance column='[Top 3 foods by Count]' derivation='InOut' name='[io:Top 3 foods by Count:nk]' pivot='key' type='nominal' />
        <column-instance column='[Top 3 foods by Polarity]' derivation='InOut' name='[io:Top 3 foods by Polarity:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Scatter across all years' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='15125' id='6' name='Scatter across all years' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Polarity:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15125' id='7' name='Scatter across all years' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Count:nk]' type='filter' w='16000' x='83200' y='16125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15125' id='9' name='Scatter across all years' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Count:nk]' type='filter' w='16000' x='83200' y='31250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15125' id='8' name='Scatter across all years' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Polarity:nk]' type='filter' w='16000' x='83200' y='46375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15125' id='10' name='Scatter across all years' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]' type='filter' values='database' w='16000' x='83200' y='61500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 2' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='226' />
        </style-rule>
      </style>
      <size maxheight='1000' maxwidth='1100' minheight='1000' minwidth='1100' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='1' param='vert' removable='false' type='layout-flow' w='98546' x='727' y='800'>
            <zone h='5000' id='3' type='title' w='98546' x='727' y='800' />
            <zone fixed-size='124' h='12400' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98546' x='727' y='5800' />
            <zone h='81000' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98546' x='727' y='18200'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='This chart shows all the foods we analysed and wish to highlight' captured-sheet='All Foods Scatterplot' id='2'>
                    <capturedDeltas>
                      <worksheet name='All Foods Scatterplot'>
                        <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Count:nk]'>
                          <groupfilter function='level-members' level='[io:Top 3 drinks by Count:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Buttermilk Waffle Insights' captured-sheet='Buttermilk waffle dashboard' id='4' />
                  <story-point caption='Pulled pork Insights' captured-sheet='Pulled pork dashboard' id='6' />
                  <story-point caption='Eggs benedict Insights' captured-sheet='Eggs ben dashboard' id='5' />
                  <story-point caption='Ice cream Insights' captured-sheet='Ice cream dashboard' id='15' />
                  <story-point caption='Onsen Egg Insights' captured-sheet='Onsen egg dashboard' id='16' />
                  <story-point caption='French Toast Insights' captured-sheet='French Toast dashboard' id='14' />
                  <story-point caption='Earl Grey Insights' captured-sheet='Earl Grey dashboard' id='7' />
                  <story-point caption='Green Tea Insights' captured-sheet='Green Tea dashboard' id='8' />
                  <story-point caption='Milk Tea Insights' captured-sheet='Milk Tea dashboard' id='9' />
                  <story-point caption='Iced Mocha Insights' captured-sheet='Iced Mocha dashboard' id='10' />
                  <story-point caption='Thai Coffee Insights' captured-sheet='Thai coffee dashboard' id='11' />
                  <story-point caption='Thai Tea Insights' captured-sheet='Thai tea dashboard' id='12' />
                  <story-point caption='This plot highlights the top 4 competitors we wish to analyse' captured-sheet='Top 4 Competitors dashboard' id='18' />
                  <story-point caption='This Map shows competitors who sell similar items as TCE' captured-sheet='TCE Competitors MAP ' id='13'>
                    <capturedDeltas>
                      <worksheet name='TCE Competitors MAP '>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Latitude:qk]' field-type='quantitative' max='143397.68545580574' min='141144.80462213737' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Longitude:qk]' field-type='quantitative' max='11561606.256424917' min='11559031.535472153' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The Caffeine experience Items are plotted here ' captured-sheet='TCE Items Scatterplot ' id='17' />
                  <story-point caption='The Populus Coffee &amp; Food Co. Insights' captured-sheet='Populus Insights' id='21' />
                  <story-point caption='Ninja Bowl Insights' captured-sheet='Ninja Bowl Insights' id='19' />
                  <story-point caption='The Lokal Insights' captured-sheet='Lokal Insights' id='20' />
                  <story-point caption='Xiao Ya Tou Insights' captured-sheet='Xiao Ya Tou Insights' id='22' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Storyboard V1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='233' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='5187' id='3' type='title' w='98426' x='787' y='830' />
            <zone fixed-size='151' h='15664' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='6017' />
            <zone h='77489' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='21681'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='This Map showcases all The Caffeine Experience Competitors ' captured-sheet='Map with Food Image' id='8' />
                  <story-point caption='This data suggests that $15 is a comfortable price for most people ' captured-sheet='BoxPlot and Sample Reviews' id='9' />
                  <story-point caption='This chart represents the Sentiment value of all the foods we have gathered over the years' captured-sheet='Polarity Dashboard' id='4' />
                  <story-point caption='These are some of the Insights we have gathered for the Top 10 foods identified earlier' captured-sheet='Polarity Food Insights' id='7'>
                    <capturedDeltas>
                      <worksheet name='Count of top 10 food'>
                        <selection-collection />
                      </worksheet>
                      <worksheet name='Sheet 6'>
                        <filter class='categorical' column='[federated.1aga11k1ekosjx135ngez1ayruag].[Action (Food)]'>
                          <groupfilter function='level-members' level='[Food]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='This chart represents the Popularity of all the foods we have gathered over the years' captured-sheet='Raw Frequency Dashboard' id='3'>
                    <capturedDeltas>
                      <worksheet name='Raw frequency Line Chart'>
                        <filter class='categorical' column='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Trending:nk]'>
                          <groupfilter function='level-members' level='[io:Top 10 Trending:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='These are some of the  Insights we have gathered for these Top 10 Items' captured-sheet='Raw Frequency Food Insights' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Thai coffee dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='76250' id='1' name='Thai coffee bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='21750' id='3' is-centered='0' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/Thai Coffee.png' type='bitmap' w='98400' x='800' y='77250'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Thai tea dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='76000' id='1' name='Thai tea bar' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='22000' id='3' is-centered='0' param='C:/Users/Donovan/Desktop/FYP Storyboard/Tableau Food Insight screenshots/Thai Tea.png' type='bitmap' w='98400' x='800' y='77000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Top 4 Competitors dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='1' name='Top 4 Competitors' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Xiao Ya Tou Insights'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='1' name='Xiao Ya Tou' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='6' is-centered='0' is-scaled='1' param='C:/Users/Donovan/Desktop/FYP Storyboard/Cafe Insight screenshots/Xiao Ya Tou.png' type='bitmap' w='98400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='dashboard' name='Storyboard V1'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Raw Frequency Food Insights'>
      <viewpoints>
        <viewpoint name='Average Sentiment viz in tooltip' />
        <viewpoint name='Food Insights' />
        <viewpoint name='Raw Frequency Food Count'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Polarity Food Insights'>
      <viewpoints>
        <viewpoint name='Average Sentiment viz in tooltip' />
        <viewpoint name='Count of top 10 food'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Count:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.20312547241118667</value>
                  <value>&quot;buttermilk waffle&quot;</value>
                  <value>8.2771825396825403</value>
                  <value>11.000000000000002</value>
                  <value>132</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Count:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.2687380125661375</value>
                  <value>&quot;pickled vegetables&quot;</value>
                  <value>5.3811458333333357</value>
                  <value>13.000000000000002</value>
                  <value>156</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Count:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.40101780990173824</value>
                  <value>&quot;iced mocha&quot;</value>
                  <value>7.5516326530612261</value>
                  <value>13.000000000000002</value>
                  <value>156</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Count:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.21031405102833681</value>
                  <value>&quot;gula melaka&quot;</value>
                  <value>9.0209799459799438</value>
                  <value>13.000000000000002</value>
                  <value>156</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Count:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.16701473700877731</value>
                  <value>&quot;sweet potato&quot;</value>
                  <value>9.9893311196242696</value>
                  <value>15.999999999999995</value>
                  <value>192</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Count:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.21530502135013413</value>
                  <value>&quot;hollandaise sauce&quot;</value>
                  <value>11.034259884851991</value>
                  <value>18.0</value>
                  <value>216</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Count:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.2437492171216129</value>
                  <value>&quot;date pudding&quot;</value>
                  <value>10.379943010032298</value>
                  <value>21.0</value>
                  <value>252</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Count:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.24418841079063985</value>
                  <value>&quot;rice bowl&quot;</value>
                  <value>8.758330944069316</value>
                  <value>26.000000000000004</value>
                  <value>312</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Count:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.18752661962514028</value>
                  <value>&quot;scrambled egg&quot;</value>
                  <value>21.975077304185557</value>
                  <value>61.999999999999986</value>
                  <value>744</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[avg:Average_Sentimentality:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Calculation_848365600023904256:qk]</field>
                    <field>[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Count:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.27936855865085242</value>
                  <value>&quot;ice cream&quot;</value>
                  <value>49.778973972122316</value>
                  <value>118.0</value>
                  <value>1416</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 6' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Polarity Dashboard'>
      <viewpoints>
        <viewpoint name='All Polarity Line chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Cafe Filter' />
        <viewpoint name='Cafes Sentiment' />
        <viewpoint name='Food Filter' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Raw Frequency Dashboard'>
      <viewpoints>
        <viewpoint name='Cafe Filter' />
        <viewpoint name='Cafes Sentiment' />
        <viewpoint name='Food Filter' />
        <viewpoint name='Raw frequency Line Chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Raw frequency Line Chart (top 10)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[yr:QYearList:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Raw Frequency Line Chart (filters)'>
      <viewpoints>
        <viewpoint name='Food Filter' />
        <viewpoint name='Raw frequency Line Chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Scatter across all years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Polarity:nk]' type='filter' />
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Count:nk]' type='filter' />
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Polarity:nk]' type='filter' />
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Count:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[TCE items]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 10 Mentions]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 10 Trending]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Count:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[yr:QYearList:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='All Foods Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Polarity:nk]' type='filter' />
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Count:nk]' type='filter' />
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Polarity:nk]' type='filter' />
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Count:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[TCE items]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 10 Mentions]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 10 Trending]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Set 1:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Set 2:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 drinks by Polarity:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Count:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[yr:QYearList:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TCE Items Scatterplot '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[TCE items]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 10 Mentions]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 10 Trending]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:TCE items:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 3 foods by Count:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[yr:QYearList:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='BoxPlot and Sample Reviews'>
      <viewpoints>
        <viewpoint name='BoxPlot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sample Reviews' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 8'>
      <viewpoints>
        <viewpoint name='Count of trendy foods(All Data)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Polarity of trendy foods(All Data)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Story 2'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Scatter V2 with filters'>
      <viewpoints>
        <viewpoint name='Scatter across all years'>
          <zoom type='entire-view' />
          <highlight field='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
    <window class='worksheet' maximized='true' name='TCE Competitors MAP '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Calculation_888616528774746112:nk]' type='filter' />
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top Competitors:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Calculation_1133781232569679872:nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Price per pax:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[TCE items]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top Competitors]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[attr:Positive Insights 1:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Calculation_1133781232569679872:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Calculation_888616528774746112:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Positive Insights 1:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Price per pax:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:TCE competitors:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Top foods they offer:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:neighbourhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Earl Grey dashboard'>
      <viewpoints>
        <viewpoint name='Earl Grey Bar'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Green Tea dashboard'>
      <viewpoints>
        <viewpoint name='Green Tea Bar'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Milk Tea dashboard'>
      <viewpoints>
        <viewpoint name='Milk Tea bar'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Iced Mocha dashboard'>
      <viewpoints>
        <viewpoint name='Iced Mocha bar'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Thai coffee dashboard'>
      <viewpoints>
        <viewpoint name='Thai coffee bar'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Thai tea dashboard'>
      <viewpoints>
        <viewpoint name='Thai tea bar'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Buttermilk waffle dashboard'>
      <viewpoints>
        <viewpoint name='buttermilk waffle bar'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Eggs ben dashboard'>
      <viewpoints>
        <viewpoint name='eggs ben bar'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Pulled pork dashboard'>
      <viewpoints>
        <viewpoint name='pulled pork bar'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='French Toast dashboard'>
      <viewpoints>
        <viewpoint name='french toast bar'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Ice cream dashboard'>
      <viewpoints>
        <viewpoint name='Ice cream bar'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Onsen egg dashboard'>
      <viewpoints>
        <viewpoint name='Onsen egg bar'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Ninja Bowl Insights'>
      <viewpoints>
        <viewpoint name='Ninja Bowl '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
    </window>
    <window class='dashboard' name='Lokal Insights'>
      <viewpoints>
        <viewpoint name='The Lokal'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Xiao Ya Tou Insights'>
      <viewpoints>
        <viewpoint name='Xiao Ya Tou'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Populus Insights'>
      <viewpoints>
        <viewpoint name='The Populus Coffee &amp; Food Co.'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Top 4 Competitors dashboard'>
      <viewpoints>
        <viewpoint name='Top 4 Competitors'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' hidden='true' name='All Polarity Line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Trending:nk]' type='filter' />
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Mentions:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 10 Mentions]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 10 Trending]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[yr:QYearList:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Average Sentiment viz in tooltip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Cafe_Name:nk]</field>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='BoxPlot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_1008524855170584577:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Cafe Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Cafes Sentiment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Cafes that serve item'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Trendy set for 2017Q4 - 2018Q1]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Count of top 10 food'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1aga11k1ekosjx135ngez1ayruag].[sum:Average Polarity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Cafe_Name:nk]</field>
            <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Count of trendy foods(All Data)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Trendy set for 2017Q4 - 2018Q1:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Trendy set for 2017Q4 - 2018Q1]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Earl Grey Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Food Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Food Insights'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food_Items:nk]</field>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Negative Insights:nk]</field>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Positive Insights:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Green Tea Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Ice cream bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Iced Mocha bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Map of Competitors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_849772956182061056:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_849772956182499329:nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.11htxgq0ugffyd1e0dns11wtrz0f].[none:Calculation_849772956182499329:nk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' hidden='true' name='Map with Food Image'>
      <viewpoints>
        <viewpoint name='Map of Competitors'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' hidden='true' name='Milk Tea bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Ninja Bowl '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Ninja Bowl Highlight:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Ninja Bowl Highlight:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Ninja Bowl Highlight]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Ninja Bowl Highlight:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Onsen egg bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Polarity of trendy foods(All Data)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Trendy set for 2017Q4 - 2018Q1:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Trendy set for 2017Q4 - 2018Q1]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average Polarity:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Price of items served by cafes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Average Price (Data1):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Average Price:nk]</field>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Cafe_Name:nk]</field>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food (Data1):nk]</field>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Average Price (Data1):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Raw Frequency Food Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>11.25</value>
                <value>0.13677283830495637</value>
                <value>&quot;truffle fries&quot;</value>
                <value>22</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>16.5</value>
                <value>0.14994250541125545</value>
                <value>&quot;grain bowl&quot;</value>
                <value>25</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7.333333333333333</value>
                <value>0.22546925296925294</value>
                <value>&quot;green tea&quot;</value>
                <value>26</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>21.5</value>
                <value>0.2748793177308802</value>
                <value>&quot;beef cheek&quot;</value>
                <value>38</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7.5999999999999996</value>
                <value>0.28880952380952385</value>
                <value>&quot;earl grey&quot;</value>
                <value>39</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.0</value>
                <value>0.11149250440917109</value>
                <value>&quot;poached egg&quot;</value>
                <value>43</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>13.0</value>
                <value>0.19781956469456469</value>
                <value>&quot;scrambled egg&quot;</value>
                <value>54</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.0</value>
                <value>0.26303872224266966</value>
                <value>&quot;onsen egg&quot;</value>
                <value>63</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>13.25</value>
                <value>0.29156107596126857</value>
                <value>&quot;french toast&quot;</value>
                <value>64</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average Price (Data1):qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
                  <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[sum:Count:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.4166666666666661</value>
                <value>0.24118839332013173</value>
                <value>&quot;ice cream&quot;</value>
                <value>107</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[avg:Average_Sentimentality:qk]</field>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Average Price (Data1):nk]</field>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Cafe_Name:nk]</field>
            <field>[federated.1i9dtkq12hler81dnwt3v1exon9t].[none:Food:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Raw frequency Line Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Trending:nk]' type='filter' />
            <card param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 10 Mentions:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 10 Mentions]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 10 Trending]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Food:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Keyword:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:QYearList:ok]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[yr:QYearList:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sample Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Food_Items:nk]</field>
            <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Negative Insights:nk]</field>
            <field>[federated.1aga11k1ekosjx135ngez1ayruag].[none:Positive Insights:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Thai coffee bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Thai tea bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 drinks by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='The Lokal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Ninja Bowl Highlight]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Lokal Highlight:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Ninja Bowl Highlight:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='The Populus Coffee &amp; Food Co.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Populus Highlight:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Populus Highlight:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Ninja Bowl Highlight]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Ninja Bowl Highlight:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Populus Highlight:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Top 4 Competitors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 4 Competitors:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 4 Competitors:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Ninja Bowl Highlight]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Lokal Highlight:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Ninja Bowl Highlight:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Top 4 Competitors:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Xiao Ya Tou Highlight:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Xiao Ya Tou'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Xiao Ya Tou Highlight:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Xiao Ya Tou Highlight:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Ninja Bowl Highlight]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Lokal Highlight:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Ninja Bowl Highlight:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[io:Xiao Ya Tou Highlight:nk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Café_Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='buttermilk waffle bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='eggs ben bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='french toast bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Count]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Average_Sentimentality:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='pulled pork bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[Top 3 foods by Polarity]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[avg:Count:qk]</field>
            <field>[federated.1l77jjw10wjrf412tf8hl1sdx50b].[none:Cafe_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='All Foods Scatterplot' width='192'>
      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
      nmn8CyPuWBovmt5RAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='BoxPlot and Sample Reviews' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Buttermilk waffle dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOzdd5gc533g+W91DtM9Pd09OeeEnEEAJEGAFEmRoiRaoix6vSufVpbt9Tqs
      dXs+33Pnx8/u3mM/jidZsiiJkiXmjJwzkSdg8vTk0DPd09N5Oqe6PwYECSKQIIEBwKnP8+DB
      dHXV278Kv0rvW28JoiiKSCSLlOxuByCR3E1SAkgWNSkBJIualACSRU1KAMmiJiWAZFG7KgH8
      0yO88MILvPDCC+zYe4Rk5vp3SI/sP0Dq8t8DHecZmfZ/riDaTuzi7YNnSXjH+dmruyDh5Uc/
      e/Wa8VpOHWLKGwFg/7uvMuoMAHBwz14S1wnV5xjh//iLP+W13SeZnejnB3/2X3n38Hn+/Uf/
      SuhzRSz5org6ARyjDEyHWL1qFcMtB3jncAsepx1PIAxkGBoaweO08+brb3CxtRWHY5qDe3dw
      5PhphsbsAEyND2MbHgcgHPAwPetjanyYuVCIoTE748M27E43Qa+Lrr5BRKB22QY2rW4ikwgz
      OumATIKh0UkAxoZsRJOZ+fico7zf0gPpMAd37+LI6VYQ4+zcfwSVAN5ZB21tbfjmoqRic7z6
      61+QX7+BNQ1FvPyrF6lYuZW1S2oYHxq+nMAiw7YexqdcC7S4JfcaxfUGptNJYmk5dZUlnDv0
      JlRt58ubqvjxj37O97/zDL6An/bWVtTCasbsMyjiPZQWW3HbTvPa0V5yZEGqN/8Wq0x+frn3
      HGqlhj/8T8/yp3/+//Do1i2cOnqUtZs24Rjs5Jk/+BuMnhZ6YwV8Y3XOVXEMtB3njVMj/NWf
      1AOwYsUK/nlHJ1vL0zQ/8W1cQ90EJnLIqWwGErz4bz8ly5rLP/3ol/z4H/+SkQknimg2w0M5
      jE3NkCUfZWqm+Ur5r//b39HrUxC0D/Bbf/CXbFpScccWtOTedE0CzDomaGvXIip0yGXXnlfU
      LV9PdVk5v/e976EBHD3L0TR9hW2rK/iff/EiZVWr0ItGTp84yapnlqE0lfM/fvBd8I9Rs2IT
      f/LH/4WZ4RH+5C/+G6fffoFIOIzxOoENXDzGX9mH+fWL/4ZweZi1eim+sde5dCnJynXPcXCw
      i66ubpYvX4GYymDNzyOOHFloloi2iK0bPowtNNFBweZvs76pgAOXyzt6rpVVD2zHmMnl5Knz
      UgIsQtckQPPqLXz/e1/nzO6XOXziIg0qgUgsxqzDTiw9P46QjuEPxcjTqRBkAn6/j0ymjOxs
      E0se2M6DS0qZcrqZG2+noqryMwVWt3YrD5QL7Dx6geceWz8/UKYlV53gpM3H//WNHAZzVOw8
      2cn3/vs3sfecZTpt4U+ff5S+82f4NA08TMYctj/1LKVmDW5/9DPFKbm/XXUNoMnKYbj1IL//
      +99nT8sE3/rqNlZveoRT7/6C37x7lJra+Y352W8+zd/84M841z3Kxq1Pcm73i/zstd387u//
      ESfeeoH/8qc/oGNwEr3RTKH18mmNQkNNeTEAlTU1yIAcayFmo56sHCv5ZiMylZ7K0kKQqaip
      LOWb3/szvD2nmAl8uHE+/PBG1MY8NDJYvX4dUZmJKouawroVpO0t/K9//hnldY2oZGDOLyYn
      SwOAtbAUo14FQHlNNQrgj/7oD3nhH/6GH/yff83k7Oe7kJfcnwSpMZxkMZPqASSLmpQAkkVN
      SgDJoiYlgAQQGezrIZG523EsPCkBFhlbywn+6Yc/5v2WHqYnRhiddDDSfoyf/HoHkWiY7su1
      88Sc/O53/oSx1iO0jvkZG+pnasaLZ3aW4cF+nE4Ho3Yn6WSU7h4b9+udlOvWBEu+uC70jfOn
      f/yHCMD+917jwOle/vM3HqCqvondb71OvkmNK6bgkUYtD6xfyoAjiMWSouXcWdpGZtlUX4DG
      ksO5jmn06gylZi05Jj32QIbHH2i827N3y6QjwCJTnK1i96ET2IYHsA05KcgxYM7LpbK2jmTI
      w8B0AINy/lxIn1tJx5mjpAJTjPvBqFeDQs+mzWtpaFhCbk4WsZCf3rFZjLr7c1OS6gEWnfnz
      /ez8MqI+BygNFOYZmIvLMKqhp3+I+qYlaBVpnJ4wQiKIzlKEc2wQbbYFrUJGjiUbjy9KJhXF
      mpNNV4+NuqYl6NT33wnFHU2AdDqNXC6/U8VLJJ/b/XnckkhuEykBJIualACSRe2euGr517dO
      3u0Q7pji3Gy++tDyux2G5AbuiQT48Rc4AdY2lUsJcA+TToEki5qUAJJFTUoAyaL2mRJgZLCf
      scnp+Q+ZJLb+fmxDo2RiATq6+5iecd/OGCWSO+aWEyDhnySpyScc8JIBEBTU1dcRDniZmZok
      jpycHNPtj1QiuQNu+S5QOplEoVaTEQQygEwQcE1PIiDDXLmEAtK0d3SxYvkyMpkMi72pkSiK
      pFKpTx5RclfccgJorWVEOrqRa7OIuqeJK7LwBiPIlSpCPhezbh9GkxmZTIYoiou+LZAgCCgU
      98TdZsl13PqaERQsXbHiykcDYDV92LWVxZJ3O+KSSBaEdBdIsqhJCSBZ1KQEkCxqUgJIFjUp
      ASSLmpQAkkVNSgDJonbr9QBiiq6ObmQaPc0NtZBJYBsYIRJPUV9RwODkDAZjDlVlRXcgXInk
      9rphAuzatYunn376muFR9zi6ojoSs6OkAIVMhcmoJTDtY8TuZOmSJfT29JDJFEhNIZCaQtzr
      bnoE2LVrFxs3bsRqtV4ZJlepSQXjiKKIjPkVnFdYhsfpJiEqSKZFEEWpKcRlUlOIe9sN10xd
      XR0AHo/nqgRQZZegmu1HZrIQdk+TUGThck4jN5pZVlFIv62XvKKyOx+5RHIb3DAB6uvrr3Rs
      9fEOriprGq4a1/KRtkBNTc1IJPeLG94Fmpme4H/97d/S1dXJj154cSFjkkgWzA0TIJ1KUVle
      TiKR5Pnf/u2FjEkiWTA3TICisiqEeJChoSE6e20LGZNEsmBuWhEWmItQXl5OQa55oeKRSBbU
      TRPgySceYy4aIxlPLlQ8EsmCumkC7N53iDRyLl44tVDxSCQL6qYJ0FxXyXBfJ1UNqxYqHolk
      Qd20ijKRTJGXm4dM9mFzBjEZ5nxrLzKlknWrV0AmTl//KH5fgKYaK93TCSqLcinKt96kZInk
      3nDTBJjxBFi5Zj36bMuVYWHPFPm1y4g7h0gCSpmasmIroXgSZHpM2iThcIRMJiO1BUJqC3Sv
      u2kCBAKBa4Zps63MTbgQUykykTliMhm9w07WrlpKwOehprqG3p4eZLIyqS0QUluge91NrwEK
      c3Po7e1lzO64MkyuNVOco6CssgYAETlGvRKbbRh9djZTE2M0SM0hJPeJG+6a2trbMVsszAZi
      13xnySu86nN9ff2Vv6uqa25jeBLJnXXDI8CqlSvJshbz3HPPYVQvZEgSycK54RHg0rkT/Oql
      N+nt7iK7oJI1CxmVRLJAbpgAKzY8xO8r1USTYLTkL2RMEsmCuelF8OmzFygsLMRsyl6oeCSS
      BXXTBMgzGzh37hy9g6MLFY9EsqBumgCWHBPyrBziQe9CxSORLKibJkDv4CiKdISRD16HdJnH
      5cAXDF/57J114HB5ARH7+CixZPqOBCuR3G43TACP085zz/9H7EM2Hn70iSvD0xEPU74k4yOD
      iACZOEm0eOzjDA/1o8nJo7+3dwFCl0g+vxveBdq3cx9LVpRTvOIRTh3cSfP3vgtAIhxAn1NA
      IjVHGlDI1MQi0+jNFqLhOcxGPU6FTGoLdJnUFujedsMEePLpRzl6wcbXnmyizaS9Mvzjr0hK
      KzSM293kW82Ul+bT1d2DMVt6RdIHpLZA9zZBvIO76I93p3Ijzd/6H3cqhLtubVM5v/q//8Pd
      DkNyAzfdNb384o9J6AsQIyF+7zu/u1AxSSQL5ua9Q4swOzmMymi56WgSyf3qpkeA1es2UDkX
      QyZX4A/FMGVpFiouiWRB3PQIcPz9sxQXF3Lu7GleeuXVhYpJIlkwNz0CNFYWc/zYMRpWbESV
      iS9UTJIbuDTh49KE/26Hccc8vrSAgmztJ494G900AaKxONFYBK8vyLe/9thCxSS5AX8kyZg7
      crfDuGNiycyC/+ZNT4HsnjB1NTX4XBMLFY9EsqBuegTYuHED+WYjzSsf+HDgx1+RRIbhvg6U
      OdUUasO0j/kpKZC6RZHcH256BDh3eDcXe4bxeD1Xhn3wiiRZOkHqchHV1WXEYkmCwSgqpYAg
      fNgUQiK5l930CLDt8ScYnPJc1Tfox1+R9FGmonIscjmdXV0U5pmldjDc3rZAX/QdSjqdXvDt
      5aYJsHvfIWqWreXihVMsXzL/yqSPvyIprTUzO+kkEge/AWbdbnLziz/8gUXeDuZ2tgWSyb7Y
      b7WVy+ULvr3c9Nea6yrp7eukccUDVw3/+CuSTA0f9gNksUi1xpL7x013KRkEysprWNok9fUj
      +WK6aQLU1TcS9trZse/YQsUjkSyom54ChWNJmpqXMhsRFioeiWRB3TABDu18jakgDI6O8Td/
      9d8XMiaJZMHcuGvE9VuwGtTo5WmOn2tbyJgkkgVzwyOAJb+Yp575Gk898zXSaamXB8kX06e6
      sfzxxxo/3i1KMhYmHEsidYsiud/ccs3KNd2ikMExOYjdGWRS6hZFcp+55Wq3aNCDwVpO3DlH
      ClAio6y8lIFpCMTTlErdolxFagrx6d1zTSGuR28toae1C5lSScw9TVhrZnZslEkPNFflcam7
      B6VCLXWLcpnUFOLTu+eaQlyPoNCxfv3VbwswNa+h9vLfBSW3IyyJZGF8sXcpEsknkBJAsqhJ
      CSBZ1KQEkCxqUgJIFjUpASSL2uJ+XlHyheWNfroKtc+UACOD/cg0RipKiwAYGx4go9RTkZdF
      19A0ublStyiSu6vF8ek6ELvlU6CEf5KkJp9wwEsGyIRdhIVskkEfjqlJ4sjJyTHdarESyV1x
      y0eAdDKJQq0mIwhkAFIJ5Mos5AhYqpspyqRp7+hixfJlUlsgpLZAt+K+aAt0zSuSdPmkvT2k
      VDriHhdjbh9Gk/SKpA9IbYE+vfuiLRCCgqUrVlw1yLT8w8/ZlrzPHZREslC+2LsUieQTSAkg
      WdSkBJAsalICSBa1W74IFpNhzrf2IlMqWbd6BaTjnL/YgahQUFtkYdIbQi5XsbSx9pMLk0ju
      sls+AoQ9U+TXLsOoUZIEkgEnprJG8jVqhn1zrFjSjJBJ3IFQJZLb75YTQJttZc7tIp5KkYnM
      kdKYiPlmCaVTFGgUuINh0unFXfkluX/c8imQXGumOCeOTFMDZBCUBsryo2QUeVhMeuzjY9Q3
      Nt6BUCWS2+8zVbtZ8gqv+qyxFlz5u6S8EuBKtyiLvSZYcm8TxDvYWCedTt9zCSCKIoJw7/V2
      LS2rT+d2L6c7mgD34gK8V0nL6tO53cvpjtYD3ChQ98w0NpuNsclpPB73dcfxu2cYGBwikfrk
      FpAej+eG34limrGRoct9l14elk7Q2zdAOOhleHz6htOGAl7sjtkrnyfHhrENj326WESRybER
      guHYJ8YPN15Wn0c8MofNZsPtn4N0HJvNhs1mwzXtIHLd7lvTuGbm14ff47rlF1eHwuFPHulz
      ut3LSf7Xf/3Xf31bS/wUdFkGnI4Z6mqrsfV24PfPYcixMDbQRywtw5ClY3LSQU11OT29NjLx
      MFOzfgzKNLbRKWKJFKl4HJ1Ojcvlxe/zzperU+CaCeKcHiOSEDEa9PR1d1JcWYuMNPaxYfyh
      ONHZEexhNdPjNnIsuYQDblzeEFlqsA2OoNZno1bK6e23kYyEySnIRw44Zz3U11QTCXgZGh1D
      pTPidU4yNevHYspioH+A6VkvJUUFDPZ1Yy6uRCUDh32MWX8Ic072gi7nkeERahoayNKoQabA
      ahRw+hUYhSBDTi+ZVJp0bI7RiSlyLFZkQoTjxzqora+g58IRMqYqHOM20oICr2uaqSkHPr+f
      eHq+i8xJpweD6vI6iSfp775ECgWp6BwTDje5lpwFnd/P4q7XBGdlm2koNdHTeYnpuQwDAwMA
      xKNzDA6NYLLkEAgnKdalGLY7MJfUEg368Xq8QJpZ1/we1+PxAglmXV6CgRDyy81qRUGOTq1E
      mfSS1OSTCgUwWiyUVVRgzs2nojQPm22IqaEBWnr6kcvl2Pr754NLRginRbyu+b2iZ2aawZFx
      xqZnaGxsYGps4Epsp9v6Ka1tIMeoAyAmCmTr1GiVScJJDbpUCN8CV48U5FkZ7O+jb3D0Y98I
      VFTXEgn5sQ3YkKUC2EZmACi16pmw21HqLKRD01TXN+FxOYgl05SaFRgKawn7vNhsA0Rdo4zY
      nZiLa4hG5jBZ86iuKGVuLjjfHH5hZ/czuesJAPOHNY3Rgk4hUl5eBoBaa6C+voHy4kLiET9D
      Uz7MeiVjQzYSGQEycQYGhvjgKC0mYwwMDJMCDAYDTocDAJ1aQV9/P/64HP/0ML5oAuVVvy7H
      Yskmv7Sckjwr6YxIeXk5IJJMZ4h6pgml5xeTJb+I2qpy9EoZvX19qPQ5V2KrzDcx0N+Hf27+
      UbwcnZqevn5m/HEi/mmmfFGUMTcz/k/3qN7tEIvFEABBuM5qvnwqYbFYQGWktHD+KT6tuZjh
      3l7KS63ItSb6+3rJXL5ZKHx0OrMZnbUYq15xZVi2RoltZAK9Pou52Rmi98HzO3f0Ivh2Czls
      zBnqKcy625FIvijuqwSQSG63e+IUSCK5W6QEkCxqUgJIFjUpASSL2lWN4aTrYclic01r0GQq
      givsJUeXi16luWaCTCZFKBFDRga9xkgo6kOnyUF+nRpqUUwzl4hgVBsIxgIYNVfXhKbTUaZD
      fkqzr25dGk+GQaZGyMRJCUp0CtUNZyAU85PICJh182VHE3PI5FrUcqnbU8knu6YpxOjUcS55
      A1yaOEFtXjPtE2fQaMzEYrO0TneRl5XDoHuMfV0vExXUxKLu+RoSmQZXcBK1XODCRCv5xmLk
      ArzX+TZLChrZ0bMLi0bHkM+BWaNm0j+NNzTN6dGzZAQluTojF8dPk5ZpaBvaQdusHbNaRSgj
      Z8Y3yLB3klBkhjgq3HN2DFozLl8vR0bbUcgViOkI7tAs3pATUWlkzNWBN54glvAz7LahUpnQ
      KW+cSJLF6dprAEEgFPeDoODM4B7yzfUc7N/N8cFDCIKcZCrGdHCGImM5y4uWMeWbRE6Mi/Zu
      2u1t7O15F4NKxqGh0wiCHKNCwehsF0WWBvbZjuBwXaTfPcyh4fPkG3JRKY14vV1MhrzMJcLs
      6HqXQmMxTYWrSCc8eGNhLky2EQkOklEXcGb4CDpVFgLQPd3NtoYnWVHYTM/UGTyJDPHoLP6I
      m5Mj55EJAh0TZykw13Ckf/fCL13JPe+6F8G1+cv59ur/gFahIJSYQxRhRekGAv4ehgJeRAS0
      SjneaBAQMRqq8HrPY8wqJ5OOMx5wk5813xBqZWENL3ceZmVBLXNRN6Jcj5wM1bkNqOUKMmKK
      uUQcx2wXabkRjUKJXqXHE3aTvnxNolcZ0Sm1mLS5KASBWDKCCNTmVnFu7Bzj3glAQX1e/Xyt
      vKBgc9UWjg8dQhAEYokggkza+0uudVVNsCiKRGIe0nIDRpUaUUzT7+yixNJIKuFlKuSnMbca
      TzSISa1hwGsnX2fCbCjA6RvBbChDSZKemV6qcpswqLSIYpIhzwS11mr8YQeTc15qLeWEkxly
      1GpGvSMoVTmUGMz0uQbI0ZopNObT5+yi2FSGINcSjQVQywU0mlwCYRdpMUm+sQS5IODwjRBK
      yzBr1GTrC4lG3ciUBqa9A2TpCmkfPUS+tZHmvCVoFrjfScm975oE+KI9lOEKTmMxFnFvPWsl
      uVd84RNAIrkZqSJMsqhJCSBZ1KQEkCxqUgJIFrVrEiDocfL+6TM37P0gnYwxYZ/BPj5OGpia
      GONmnQeMjY7e8NnQsbGrf6Oru+vK3xPj4zecrufSBd565z18oU/X48LHJSMBfvXLXxKKp/FM
      jzLlnmO48xxjs6FbLsvrGGdixveZ4riZTHyO7v6PP8s77+jhowBMDQ/gDcXpaTmH03fto5Zd
      nZ1XlmF/dzfxjMi5k8eZu+4KEzl65Ni1cSSjdPcNABk6O3s+dfwdHZfoOH+amdlZjp+58Kmm
      mZ0c5OU3dzLSf4l39h7lyNFr4/lovDvefJnhCdd1v40F3fSPTTPnGudC19A13/d0dZDMXKcp
      hGu8H1VuLc6hLvQGIy0XLxJLCwRcdnr6BrFYrXi8HlrOvk8oJUOWSpJKzBHNqOdfl5oI09LW
      QZYpF51GxYULFymwZnH2QgcTdgdZamhp70CpzSLo86KWpTnfcglfMMysYwL37CzhRJozJ46T
      EpSEvE76bEOYsrMYGJsi32rkN6+8zfPf+i1kAuzb8TbtvUMUW9S88vY+Oi6109/VhtZaxvnj
      +2jvHaWpoY5ULMBrr73BpCvAzFAbbSOzPLBhAyd3v8zh8z0YZAkudA8yaZ8iW5ngnZ170JoK
      sJqyOHr4AN22EZLBGfYeOobFYqB7cBr3WB8JBBIyLe2nD3GhcxBZxE1Ka2bHO+9g0aaxB5Ic
      2rMTVyCO2z5IV08/4Tkfh48eJ8tcSI5Ry6u/+TWtrW2UVNVycOdbXOofRR538+JLO6iqqebI
      vl1MzgYxqdK88d4ehkbsbHpgHe/85qdcsE2hTEe41D/IxJQTRTLI3n37Qa3npZ+9QEKmpa6q
      jJ/+8B+wBxNEPVMMjo0zNRMgGXCwe/9h8suqMWhVvP7SrxgcHqWktJi2zn7ckwM4Z9z85tXX
      0Wk0vPzKaxSUVtBx/jgt3SPk6tMcPHGeSCjIgYNHaG+/xEBvB8rsQlz2SYJuJ0ZrPl39gzgn
      x6isruHs8SPkWIzs3HeKhN9BNJlm3969+KIZ3t/zBmlDMWeP7MZSVseMfYzasgLeePNtEjIN
      E/3tnDzbSnVdPTMT/bz+7gGWNddzYP9epj1hwq5x2rr6MeUWYbt4hFd2HqU0P4cDx84wOjpG
      dbGF1994i5ioJuKbQacRr3cKJNDb2QaabGw9Xazf/BD2sWHmwmEyYgYxk2TWG6S4qIw1q5bh
      drkwWS0MDPTj8fppbWtHpRS41Nl9pcRELIQhtwTiYeYiYRLJFIJMjsvlor2zl02bN+OfdSJT
      qFm7ZjV2u53isjJWLW8mFAqRFkGly2ZpQw2g4KlHt/DLX/ycS60XyBjKqTFmaLMNYy1pIpPJ
      8MQj6zh/8hTHT3cw0H6aSW+UiycPseKhp/FNDlLZ0MiajQ9j0Mipr6vl4S89jVGrYMND2/HN
      TrFr117UGjUHDxwEoKuri+3bt7Fn7x6UYpTTrSMM9rbROzyOPOphZnqMgydaGO8+R1hUcHTv
      LmbdAU609uIZbGEqkODo4cNMjtqoXbEBMR4ilkghl8sAkWgc1jeWcO70UchtoCwrTkZXwLLV
      DyD4hrBNBzh19AgHDh3luW8/jzVbC0BtTQOPP/U0GoXAlq2P4XKMk4jHEWQCp8610rRsGV9+
      7CEQZNTVNfOVp59EEOVse+Ir2Af62LN3Dxp5ioNH3wcgr7iSL29dyfGTrUzYHUxPjlNYWcvy
      levYsmUjS5euYEmZgcOnLjHSeZqeETspVQ5V+Xqyi2ogneHJbVvo7O5jbPTDo9fFw+8hzylD
      LoBOFmPvgRMEEwn6RibRylKkRTh7+gSNDY08tHUbdfXNfGn7QwAc3reLpFzD4UMH8Xo9ZDIi
      CFBaVUtz83IcIx1sfPxZXCN92O2jFNYuJ9eko66+jjWbtlJsNdK4fC3yRID9B/YSl6k5fPgg
      E6MjhEO+67UFgqblq3lo8wZKiws58/4pFJostBoNqUgQTyCKTBDIMWm50NKJIJOh0GYTnRkm
      t6SKkuIiMoKKmqr53h1kgoCAgAzh8hsTVejUcqamnAgygbwcA2fOnScSTyHI5usgBEEgW6eg
      rbMfrVZLPORj1uWk2zaMKCbo7rKhUWvQZuczZbvImd4pynOzEQQBmUwAQUBjMFNZaqVu6SpM
      OiW1jUs4tudN/AkBjUy4Ut+RU1DK+wd2EIpnEBAQBBlLmhtJZQTWr1sFQLY5F61STkNDIwq9
      mRVL68lWpVAa8ufnSWeitryA6uaV1DYto6flLF/98mb6J3w0NTejlYusX78euUKDJceESqNH
      r8zQPzQyv4xkMgRBIKewksnO01zsd1JWVoxzuI2oIgeTVs6a9WspL83j9TfexBeOA1BcVsTe
      ne8RTwmXl7WMvr4+9FlGlHIZuUYVuw+dQgTKii28++5ekMvm2y7KZDQ0NILayOpl850Z+112
      3tp5jBWrmhgf6KRnYBS5So9rvI/h8VniQQe9E35qynKpXbIai15Jbl4+ML/cZTIZCPPr/IN5
      QoB1259m5NL7JNIZmlet4cyFLtaXGwiJGkZs/cg0OjQqJYJMhiAwvw5FEGQyGpuXkEmlWL9+
      PQajkZB78srpniATaGxs5uC7rxNGhVKmINdqAUBnymOg5SQObwiZTJgvq6EZMZVi/fq18/Eh
      XFsRdiUPLm8gH1SOffCdAIiXv78yviCAKALC5T/Fq6a/Kr8uT/fB/47JMcYmp5Brslm3asmV
      oq4U+fH8/GgsH43hJm4Wy81iRBDm5/dj83Oz3/1w/j6Yj4+P+8nL6Ebz9vF5v9G0H47/YQxX
      jzu/FgVBQMyIV3Y811+uH6zx2+Pj83XjZfmRGK+73sSPLd8rW+YHvbRcW+51Nqq7XhMsiiKi
      KH7h34EruTfd9a1OuHy4vBsymXvnCbhMJoMoilf+/6wP532wQ/m0wxcTURSvOpaJ4nUvgu99
      H6zMD/4N9XYxF0teM/yjDu9+F388w//3939LKJlhx44d/Orff/3heB+b9qPTX9kgPxh+nXHd
      UyNMuvxXTfvxceYnFZk/fH/4L+K187f/+CMGe9v555/8irdffQl3LHNNWdeUefnzpfY2htvf
      p3vcRdep/bSPOK+MP9h+mp7RWTpP7eHSyOw15QF0tLVfKeuDGK+d/+svn5t99xtWn50AACAA
      SURBVPF19tHxP/53am6G3YfOISbCXOqxXV2OKLLz3Z1Xmsd/cmwfjtPdcYlkZn74a7/5JfE0
      JIJO9h07Q9A58tlekHFXiWl+8W8/xlraQGxmCNFQgEqMsjrLwE9ee5d1W7Yw2nmObIuVtMrK
      N76yHYBCi46u7h4UwvxdnUBUIDrn5d3X/x2ZpYG5iQ5C0TiPPf4lXn1rN0ImwZ//73+Je+Ai
      75zoZPPmzQy2nyIYirH1y0/wys9e4uFtDzAdAHXUSWl5AUmjgt+88E8Y1Coe/a3f5cB7bxOL
      Rvi9//oDwqPnGYlZOPbub/iP33qKyZgR71g3Y04fmxryCERTtJw/QzKjJSNmiPgc/PCdnWh0
      BmrzNdgDKbY8vJ0Sk4xXdp4iNdvHxie/xaX2bhLhWbLFOQZCNh6otdJ16hjH9ob4b3/8PTov
      tTIa6md9vYXuk0c5ui/I5iVl9E+4yC+t4/GtG2jr7MSoTnPgTBebNm/kzNFDJEQl3/3+7xOY
      6OWtg2d4YMuDHHr7NVY8uB3nYBfheJKvf/NbnDx2FId7jtWlBgZCcqZGBtHLM3zrD/6cItP8
      3ao977yGLxQjr6KZ/guHyMnOomzVo9guHCaRkvOd738fu62H40dO0VSTQ2dXP+ePH8CSa0Zl
      quDpras5feo4coOJTGCKQDhGftUyHt28mnOnjtDe3sHqDRuZDkB8ZpDKyhJ6RhyoNQaIeygq
      tPCrV3bg9czyNWDY1sPRI6coNj5xHx4BEkHQFfLVpx4ljZyvPvtV1HIRld5MQ00RY6PjCAod
      X3v2GwRdE1cmq126gpM732DdE1/n7N53qW5ehlpv4utfeRLvrIP+/mG0Og1ut5+6puU0VOST
      SENuWQ352WomJsaw9Q2i02lwz/oob1jCQ1u3kwo6iGTkGJTzF2O5JRU8tL6ZoaE+qlc+TH1N
      KQBl9SsYOrubJcuW8d6xbuoKNNjdQVzTDmqb6lmzfjOrlzSw5ZHtaOTgGB8gEE2RSMaoXboS
      MRbE7phFoTMjS3gpqarjxK63qFm6ikw6Q31tLQ8++iUMGiXrtmzFpJ/ft9XX1fHg9scxaOSs
      3/II2TolXV19KJVKIuE5YP70q6unl2e++W1qCgyMTrpQykSCoRh9vd089sxzrGquwVxQymNb
      VtE/NIJWrWJooA+Xb44ZxzTpTIaHHn2S4sJ8Ni2vwx/5sCdghzfM87/z20wM9GGwFPDUlx7G
      OTnK8NgMKiX4g1Gq6+pZtmoDlUVWMhkRhcbAs89+E6d9GEGppbFxKY9vfxCXL8Lzz/8247Y+
      QGSgbwBZJkpIkcucc4i0XMXA0AjPP/884eAsmUyGyaEeNjz2VZour4vqmnqWr15PRZHl2oqw
      e745tEJLYGaYS33jFOdbKK2sIjIXwJhtwDY4Ql5BMYGZMfoGBlmzZTsXT5+mrr4WuVJPb3c3
      jz7xBCP9vWx9dDvRuSCV5SX4w2lqK3KJpgTq62qRKVRk61UUlVYSdDsYmbBTXF5NTXk+c7E0
      dfX1KGRyystKiAdnMBXVk2fSIdfnoBATFOVZMZc0Mtx+kv7BUTZsfgidRsPQQD+PPf0Mk/Yp
      1q9sYnBwBGteAUub6ohnVORlq5Hrc1CTpG75OnxToxgt+RhUAjPuAHWNzVhMWQRddvIbNuCb
      mWLrw1uYC/pZsnwFh/cdoKy8HKMlHyEZp7KykiyjkcMH91NaXkG2pQCSUR5Yv4KhsWnKq2so
      LczD7/Pz4JZN7NnxHmpzCdmqFDJ1Fs3NTVRWlHFwzw5Scj16tYLK6hrkmTjxjJyGhgYc007y
      8vOoqSwhO7+EVDREvtWMKMY5drab5vpKtLIUew8c48FHH0eWSVJaUkhSYSbfACh187eKdXp6
      W9/HYC1GEOQ4J2wMDA6xeduTWLL1KIhwrnOE5bVF7Dt4goe+9ARmo47pyVGUWiPltU3oUh6K
      alazZkkV7763k6bl6zDolCxfvYET+3eRlKlYsXw5So2Wnoun0ecU3P27QHfCsSNHeHjbNu7m
      nKSiQd7ZsRtBk82zz3wZ2f2/WG9J0O9DazSh/IwzfuTIUR7Z9sgdX4dfyASQSD6t++8a4HNI
      pxKEwtGrhmXSScKRmzeq8zqn8F+ufb0V7ukJgtH5VzOFQ3Ok0jfvMD8aDpFIpZmb+3SN8iZG
      h/kUb5C6lpghFIpAOs7I+NRVw+dCYcRUnNEJ+01j/KK4/64BAFvPJcYdXvKtRk6fen/+nDcV
      4f1zLag1WsRkmAttnagVAm5fCEUmSiAB8rif7mEXYtRD18AEpcWFDLQe5yev7KKxsZmJgS4C
      MRGLyUjQ7aC7b4BIAqb7Woloc5kZ6WHaG6Iw10JH63liooqwd5qRKQ8FeRYy6STnzpwiIaow
      mwxcOnGAXkcAtUbL9FAf2pwCulvPEk0r0CpE3j9zgSyNkgQKnFNTeKZH8MzF+OE//5Diyhpy
      zSZGR8dQCkn80RSTI4P0D45RUlpMb0cr7723g1UPbKbzwhnkWhPeGQdutwN/IMTkxCixjAK1
      kOTM+TZKSkqw9bQzOu1BjM7w9z/8BdWVRezZf5xUJk1pcRHOiT7+9l9+TlV5AQcOHyOZgpKS
      QjpbzpOSazFm6RjubSejteCeHGDSFUSvTHO+rZvSkmIEQWByxMaw3U08EmLWNY1Wq+PM2fMU
      lpQw2t/F4JiTglwjnR3dTM24mRodQp+Tj0Z1d25I3odHgASvvfoWyVSaXW++Rm5pJa++8jIv
      v/QyteX57D54gpdffpUSi5Jj5/rYv28PRw8dQqFUk47PMTY9y2uvvEoyNV9vkJ9fQHl1HTFn
      D132CCf27SAYS2G3tTMVEjiw821SAGRwOJy8+uJPOX3qMPawAq08zqtv76Hj/f3YfTHSiQgz
      Lg8vvPAiH1TOZ5vz2PHWm9gnx3BND7Hr6EVSqQQvvfQbamurGe1qYdjp5+jRo7imRxG1OZSW
      llFelAfA0cPHmBnvpXvYzq5dh/GPdXH6zAnax3yYs/W0nzrAuC/BG6+/zokDu3GGknSeOUxS
      Y2b/jnd46df/joo5dh48zYzTyY6XXySpyaGsrIoCq4lwLMl4Txszc3HM1jxKyyopsJqJxJOM
      913kzKnjdIx5efuN1wCYnR7FYR/hwNlecs1Gfv3rlxDnpjl4povE3Cw7D5+jINfMoT07CCTg
      zVd+jUYNb753kNkZB/vefgXb8CgnL/Ry8shezCYtu/YdvzubEvdhAohpkaeeeYZDe94jzYeV
      N2kxQzqZQERAzEAiEUeQyanKNzAeFMnRfbCHEXnsqadpPbofbyyN3phNIhr5sILqyqYrolIp
      SWdAQCQWdNE14CAvxzB/2jE/Ok77JKizENIpJvrb8ae16NTzL2ESRRGlUo54+RVFSq2Jpx7d
      xM5dey63YQG5XIbb5cTrDwKgUGlATJG5fGkWj0WYtE8jCGDJzcdqyiaZiCOXq4jF4ohiGltf
      Dzm5ecgUOtasXIZMJqOsrAKVUk5kzs/whJs8U4YL7YOU5JoQlHrSidj8bdu8AkxGA5mMiFqr
      R0zOD7fmFWDKNpBMphmy9WE0531kLQgIl5fTnN/DpDuCOUs9/83lEwil2siqpU0kYyH6Bico
      zM3iVEsPZYW5JJIpcnPzyDabKSsphEyKocHBO7fR3MT9dxEsZuhqbwGdhaaaEs6cPsuSVetx
      T/TT2dVDXJNHc2kWvV0dGCs2UKn1MEURj65vIhWbw+GLE/NP44vJWLtyCQIiHS3nKaxuZnbc
      hspUSG1FMb2n93J6IsETj2xBRxx5lpmh7jbUehO1jY30t58nu7AKZTLAyLSXDevXIhdTnD13
      AUtuAfX1Nfjds/Tb+qlqXE4m4sdoyaWz5QLFNU3kGVScbelg44a1tLS0Yc3Lx2JUozEV4rUP
      EpNlUV9VylBfJ5GUQEFJORG/H4NGhtKUx1BXKzKNgSXNTVy6eBa9tRi9HIorK5iZGMNSXIFj
      YpR8q4kzF9pZtXY9k0PdyJQ6KuubmBzoQJdTQDoNWlma7PwitEo5Az2XUBmtgIBGlsaYW8xg
      50UEvYVljbW4nZOoTYW4J2zMpdVUFmRzob2btes3YtRrmBwdYDaUwZylobyygmQ0xOkz52le
      uZbZiQEycg2lZSXMheKkkxHKSgqZdPiIhYPUN9Qv+OZ0/yXADdhHB7CNOdmyZRMTQ71MeSJs
      3riWS23trFy9+pZvQwbd0yTVOVgM2jsTsOSe8IVJAInks7jvrgEkkttJSgDJoiYlgGRRkxJA
      sqhdkwBpl53YwBhiNETC7vzEAlLTE6QjCVLOSVKB8A3Hi9ts8/8PDSJe50msyMWWa4aJ8TDx
      cQdiMkp8ZPyGZYtimsi504QvtN/Gp1cli8E19c+pySFCl2ZQPr2J+PA0aecYydk5DNsfJnTk
      EGJaQLdxLZFzF1AUlJPsO0NGlY9+ZQNi1EXSISBL+pEVFhM9cxZV00o0NaXEe7pQVtUSbe9A
      yCSI9o+RtW0rsZaLCAYzsfYWktPTZG17lOi5k2REDep8FcEjHWQ/9zSZUJTwyaOkg2FkWdmI
      ggJ1vh4sVcjCY6SiWvTLyxDnfMwdfx9FWQ3qQgOh850oCgpQWXREbeMoS0vJhCNoqgtJhuRo
      KgruxnKX3COucwokolu3hHBLN4hJwifPkXGNEjp2BFlhA4IYRUxlICMSaWtBVVGJ/sGtiIEZ
      RHQkbN3ExyaJnz2JKFcTfv8kAJrmKiIXW5BlFxA6dgKBGOHzLcSGJtCuXIrcmk/WxqVELnYh
      pjMkOtuQF1egXrICpUVHwu4g5Q6gW14HWisZjwtl/VKU1izkZU3IBS/Bg8cJn34f3dbHSQ72
      Ejp9HuOTT5CaGCfc3ovhsQdJjEySso8RaetEmW9d4MUtuddc9xpAnluGGHSATIWyuAB5fjmq
      mmri7edITDpJTowgikpkSiVyq5XwyeOIKUCQIVMkQWdGWVGBmEyiWboEAGXtEiL73kOzcgXK
      slJQZaGuKUdhtiAIkPG5mTtyBmVxDkm7B0GrAU0WydEeUu7g5cg+UkchQNLWTdITIuN2kI5l
      IJVAWVpG6NB+RJkGRY6BuaNHycSSyFUQOn4aUQTd6ibiEwHk2vvviVDJ7XVtv0DixzrlEYB0
      BjERJnziHElvgJxvfxPS6fl+c+QyxFQKZLLL02UAGYJMmB8ul3/YL00qhSBXACJiKo2glCOm
      xfkyMhkQRQS5HDE1XzYyGWRSIMgud00jwuVOk+bjBIT5Dpg+iEGQya78bnLYRnxwBDQ5KM1q
      EhPjyIsbEMJ2BGst2saKBV3YknvPLdUEi8nk/AZ9n/ThI4oZSKYRVMr5BEunEZTK+USU3hcm
      QWoKIVnk7o9duURyh0gJIFnUpASQLGpSAkgWtWsSYHZykJPnL5EI++kbHPvEAuwj/XjmYgTc
      Tnyh6A3Hs3V1EIqnrvvd+NjYVU0Y+i+dwxWc74VhYrAXX+T60+18+1Vee+1Vjp9rv2r4oYMH
      PzHuWxFwDvNP//pzokmRgfZzjM8EuXhsNza7/5bLmpkYxuG99VcxfRZnjh0mlBJ599VXCKav
      bSRy+PCBD//efwgRePmll2/9hzIxfvgP/8jY2Cj/+I//zMl979Ax5vkckV8r7J3mzIXuG35/
      6VLHZyr3mnuB0ZCfoC+IL5iLPxjizMmjhKJJ1qxfx4Wz50gmE2x+8EF6enpIoYTgFNGRGeqK
      c0irIthsUVSpAOa8fIZGJzCZ81izopmAz0N+Isw7+06gEETWrV1JW9cAtbV1OKcmsRi1nLrY
      STKVoaZAT09nO52pFAQdpCf9lORqcPsjNDYvwz42yKpVq5mZDfCd7/1nfvbTnxF22Jh2+Vi+
      eiN79+7FlFfK2hWN/Oif/g6dTsfqh7/MxWN7Sch0PL1tLXuPnie3sJSI38UzX9rE0dZx3OO9
      xAUN3/3fvkPIOcxru4+j0mRRqp3DH00jAhfPncRFP8vKsug8dpAjiTjr6groHpmkunEtW9Yt
      5ef/9i9YixpQE2TK6WH12rWMOsKoog6s2Vloq7Xsf/slomkFdaVmKpet55VX3uTxdbVgKqbl
      wkXM+cXIojMgzyJLq8AzF+WhbU+Sp42x83g3gbFWtj/7PK2tfZgUIbpsE3z9q4/zzp5jrFu/
      kQfWLuXEsYMMeONo4mEO7n6PWFzBskorre3tVC5dw57de1Bn5bF5dQMHD+wlKlMSDnh4982X
      keVUkHEP4/LN8fS3/hNZsSmO9fgYbT3IN3/neVp7ZxBCEwxMenj84RWMOtx0t5zD5Q+RTiVJ
      JqP84qc/ISGo+e53v8Ol43vIql7BGy+9xtceXkbGUkVf+0XCCRn1RTrGXHM8uO1xygtM/P3f
      /b+oFQqe/MbvcHDne2TkKpbXFLD3RAel5SXk6lL84t9fZ9najfS1HCO/cjlhnwujMs7Bs31s
      3LSJM4feQ6fV07zpCdY0lvLrF3/OXEzgycfW8u7+VtLJGF9//IHrnwI1L1tGT1cnkGR80ola
      KTAy0EtR/Srycgz4/T7iiQwu1yyFRcUsX7kGBWnk2hziITehRBrnxChKtZpQKPiRkkVM1gLK
      C3MRVVlkaRT4AwESyQTjYyOsXL8Zg1aFiEDj0hXIxARFRUUsX72Gwrx8xGScQDDMqlWrAUhG
      g7zxxptsf/IrdHR0kKXXEkvLWb5sGWtXzL/1RG+y8K1nv0zr8cMMTQUgFuTYiQvINHrcHg+F
      BiXvHThDc3UBQ3Y3YjSMP5Kgo7WdL331ObIyc1Q21LPhwW3olAJ1tQ08+vhT6FQyHnjoUdSy
      FC2tnei0emac0wCkBTXPfOVLdF7qJEuvxRcTCLnHCEST6ORpwoFZBkemEVJRissr2PX2u5SX
      ltFlDxCZ6iMt1+J1e4jF4jz5tWdprK8hEQnh9vlRG/OJeScoKi1j/ztvU1HfwKjdQdjrYi6j
      Iy9bi2NmBpDRWN80/1okQcljTz1DIuBhfGIEuSzDlCfC8uXL2LJhJYJSS3PTMp587GEUmiy+
      9pWn8cxM0dHRh16rZGJqFkN+Fb7JDspKK3jnrd3U15Uy4fAyOzlJQVUdS1es4cEH1rJmw4OY
      s9SEPQ5GJt2kY2H8oQRNy5Zw6J23qSwr5dyQC7Myzlw4zujoKOUVVaRiIWbd80fU7NxiHlxd
      R2dnG1UrH6G5wIAut5Q1Gx6kNN/ElO0SjZufZMv6VaDU88yT24nFYljzS9EqRGZm3GgMOTz/
      3DP0dPUixnx0D9hRy6JMzwZoWLaWwmwdLZcuXZsAGr0RfZaBPKuJ7GwLTQ01qLRZlFc34h7t
      ZtIxi0qpRKFUkp9roai0nL7O+Qe0dWolBRYDlvxSmpYsQUylsVx+ZU12jhmFXIHZlI3BmE0m
      HkWuUKFSqTCbzVTV1NHTdh63L0iW0YRaIcNsNlNcXkFP+0WCkQhKlQqVSkFbWysAFbVNfPNb
      36K2vIiHHnoImVpPUYEVS7aW1q751qezU+O8vuMoT37jOdY0lZJbWMy2x7ahyiQoKytn45Yt
      eEMpqmtqWdNcRW5BETqVnA0PP8ypfe+gzi3HbMzBmq0DoHbJMs4c24vSkIteo6C4qIht2x8i
      kRIpLZvvfLWiogIBeOjhBxGUWkoK8qgutlBat4ysnFxy80tYt7IBc14hRZWNyGXw9LbVKLVG
      1mx6BIMiTVlZGUUl5ajkMgL+ObRaDRq1GhDIM+upXLkVuULB0uoCNGoNxWUVyBJhBKUGrUYD
      wPIVS9m9Yzf5RUXIBSguKUKj0WLMyaUw10xJnoXTFy4BsLS5gt0HT1JcXAwyOUUFhTz08AOo
      dSYKLEYEmQKTRsmqR76MXKWhutCERq2mqqoKpVxFcWEeCrWOfGsOBnMeRWVVrGyuJLewGK1K
      jt5ShlIu8PQTm1GpstCp1ajUaqqrygkGA2g0WrSa+fkrKS7CkJNH07J1eIYvYI8pWNJQi2+q
      j6nZABXLHsDReZz3L1yivKISgOLiYoIBHxqtBq1Wg9dp56W39rFt22YErYUt65rJthSSZ7Vi
      zTFQWFzM1oe3fvqKsGRsjoutXWTkKjZtWHPb+2wM+Wbp7BtEpTOyZsWS21bugf37+NLjT9y2
      8iT3h/379/H4p1jvUk2wZFH7Qt0GdTgcnziOKGZIJq9/V+mTJGMhZn1z1/0ukUiQSadIpTNE
      gl4CH+lLNJ1KfmK/oJ9XKpkgeZM+O6/ENufD/xlfMJ5IJK76nEwmb+m1Sw7nJ6+fG0mlkmQy
      Ij63i1jy2vlMJpMfjns5LpfTSeq68Yk4HPMPe92XfYN+wOF0IiaiRFIygn4vu/buJlunQZ2V
      TSLsZ9TuwmzUMjk5jdPtxWrOYWa8mx/94k3qGxsJzk4TiKZQCSnGJ6aIJjKI8TBTDgcZmRKN
      UkZ3Tx9mq5VYyEfrmSP0OjPUl1twuX2Eg14UGj2e2Vna2tqw2y5wtG0CdXSKbnsYtVKGyZiF
      vb8Tb0aHGPUxPesnS6OgzzZCbq4VQQC/x8W4Y5Z0MkYo4Eep1dDXO/+7nhk7Y1Oz5JoNjI9N
      4PL4CXhmUGgNqJUf3sR77Tc/o71vguXNNdgn7ThcXqyWHEYH+0jJ1HS+v5uDF4dRJ1x0jflR
      q+RkZ+no7enBmGPF43bh8/nIzs5mxulkyj5BljGHVGyOvqFx8qxWTp08hVGvZXZ2hqSo4Nc/
      +ReimmzKCvPxul04ndMkUhkm7Q6s5mz6e7pJy1ToNSp6u3s4cOQQq5YtpafPxv/f3pn9xHWd
      Afx3Z587y53l3tkHZsYBhgE8YDtxnMVW2sSN21iRKvUh6R/UpmrV9qUPqdKoalMl3lK7iUmI
      Dd4NGAwGDIxtMGabYRl2hmGYubcPVJEq5amVYqHwezxHR/rOkT59q84nywqCVmFuPs/WxiqC
      0crS4jzFjVXGp3IoioeJxxk2SiqSw8a5j/7E2GqF2dEHbGgGdDo9Bq3E4MNR3B4Xv/3VB3j8
      YXyKmw//+BvWDRIPu26idzjQ6YwYKTOcGUNRFARB5ZO//R3R4drbCnD2zBnWVxaYzC0x2N/P
      1uYKQcVLe9cDum/eoLQ6yyYGLn5xjeyTQWoPH0NfWmX4SZbakJ3LNx8wPtCFoC/TNbrAg852
      iiuLLKkiV79qJTs+gslm4+69Ye5eb6cqLLOuOamP+zlz9gK58UHWSnr6BjLMz08RVpxs6T34
      rWXGF0v0dt7k2NGXmBzuZqli4evWNhKJGF/+8xxWY4XMbIFEyMmHH31CIhHnausFVKOL3lvt
      WOx27vQ8RFda48qXF3D4qzjzeStTo73IwQDttx9wqCkJgFYucn9oDLW4TkNdFX/++ALzEw/Z
      0cqMTq/R2fEN0YhMQXAQcMBYrkBf1x3Wc2NsG2zcvt1Fz80ruIMxwkEf//jrXwhFI7S23aD/
      3l38bjOdwzPkJh8z/yzDjs1Hx9dtWPSQaEwT8Lhou3iWHZuLc5+eYzk7gT/2AoN9fXx+uY3t
      hUkEKcDs1DPGRoawiSbuPXxGqibGZ2fOsTidYXFTpb9/CIO2xdXWS+hsLj47e5FYPE7QJzM2
      PIAUqUFdn2dLb+Nmx1VCssRAXzf3H+eoFNZpOXwYyWlnqK+X6lQzy9NPsLh9tH91heHBXuxG
      lYfTG9RUB+i4eg2rtrq3XSDFIbJasVJaGsMVSmAUnTSkkmjqNlOTE2zsCFCpUBVLEFA8VDSQ
      PDKiVcSkU3F6fLjtZkpllVA4itmgB00gWlWFQS+wsrzI6OOnuN02BIMF2SMBIOiMWEwazlAd
      Q9e/INlyBEEQULwyNocTg14gUZNEsu9mjhAE1EoZi00i6FdYyM0wmVvFIerR1ApGi0g4FEBn
      tnPi9aOsLS+SeTSOW3Jyq6uXaEhhs1AkFKkmEPCTSqXQVJXs7K5LMTHcw/RcntzUOKPTy0Rj
      cUI+Dxsbm/iCUUwGHV6vjGh3YtTpvpVtbWWFkdFHuFxunIqfF1t2kw8Gk5WqcBBNraAJeiKR
      MFuFTQQBBMFIqrEJi1GP7HEhub3sTrU2UJ9qIBIOEfYpTAz3sKpa0OlgbbNIvDqCThBYWpjj
      0dNZXA47CHpsZj1mT4ynvd8QbzrEjc4eqiI+NndM/Pz0SVpbd4t1iuzBIbkREEjWpxAtJq5f
      v0G0Ok6ptI3LZUOWvYCA4nHjcnsBI/WNjZj1OvK5WcazKzgtu/+2Ol0evG5pb1sAv+zEaPfi
      k5yk0mk8TjuK4sMqOnjtaAvLGzs0p5twuyRCIT8er4zRaKG8uYDZV4NYXsQRThKwlujoHODN
      k2+zvTTN0Ng0P3n7FMeOHiE3m6W+Mc2BiIfJxU2SdbW4nSJOiwG5qg6ny0VzUxKbaOVAXRMT
      w/cJJZLIshfFI6HIMgajGY8/it+uMTaT59RbPyI7l+dgczMOh4TXbmB4fIZUXS2yrJBKpchm
      s6Sa0gTdIjZvhEQijuJ1EwkH8coKdlFkOb9IMBRkZa3AybdP8erLhylslYmEAoRCQeqbX2I2
      00v9oVeora3j2Wg/wVgdiuzF55U49vpx8nOz1CQbiYYDyLICQG/3XfKrBX56+jQ1sSDdQ+Oc
      PvUmdruNcDSKxyvjsFk5fKSFrs571LxwAIvFgkf24rCJhCNhqmtT5GcnaTnUwvHXXubO3R4a
      Ghv58RsnmM3O0ZROI9lF3HYzrmAcyekinW7EaRIwu4IkYtXMTDym5cVX8CseAlVV9HV3kmw4
      iOz1IDltNNQdYGFth4ZkDYca6+gZfEyiOkK0uoquzm4OHmzA65Wxi1aOn3iN7NwiB5vT2EUz
      anGdVc2xnwUCWMvPslaxEfFJzDx9gj1QjWQ1Pm+xnhsjwyMkU/XPdcTU98W+Auzzg2ZPxwBP
      MiN8R4/XfzGaGQXg9p1b/1nRGBgc/HZ/bWGKgczkd5zc54fA3o0B1BK//+DX5Es6nPptLn3Z
      ilMOM/Won7aOW0QTtaiFRT743R+wSTJ9ne08HZ/AFYozPzOFRV/mwqXLDwY/wgAAAPVJREFU
      mPUwlS8y82yMeKz6ed9qn++ZvWsBdCYaGpt4952TtF27xS/ff48rrZfovj/CL352gi9av8Hm
      CtDcnOb4sSOIkszJV9N0PXhEZjTDpctXee/99wl47Pzr049RYt//cIZ9nj97VwEAyWmhte0G
      imTj/PlzeIIxTLoS5y9eJp54AQC1uEF33yCCTtj9f0jT0DSN6oCL8xc+J5df56133uV2+xW6
      b3SwWvzfqsT77E32dBCsaSpbxW1Ei4XCVhFRtKKpFYqlnW87ItVKmVJZRSeA0aCnrIKmVjCZ
      TGwVCpjNZioaaJUyCGAwmtDtoTfY5//j3zp6Hk3z3hjPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Earl Grey dashboard' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Eggs ben dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOzdd3QcV37o+W/ngA4AGhkgEpFJgjmTSpRI5ZFHI49nPMFerz3284496/B2
      18fnHa/frt9bv2e/nfGsx8f2jGc0ijMSRTFIzDmCBIkMNGIjdqMbnXOqu3+ACjSDpBEJiUJ9
      zuFho6vq3l9V96+r6ta9VQohhEAmW6SUn3UAMtlnSU4A2aImJ4BsUZMTQLaoyQkgW9TkBJAt
      auoP/+GZGOStgyev/2XgW7/3TfS/YsETg50cPHkJUFDVsIKdD21C8SkCHe++QJdPR2t+ksM9
      c/zu1565YbpnYpCJiJq1LbWfohbZYnPDHsAzOYTDm2Lt2rWsXduKGhBShr7uDmZmPXh9QQC8
      rik6ewbwzM0BEPS6uHr1GsFo4v2yJoe68Ka0rFm9ijN7/pWz3dMAjI/YGRmffn85jy/AQE8X
      c4EIAJlkjI5r1wjFkgAIKUt/TyfDIyM45/yU1raw68FNACRjIa5d6yAUi3Lh+GH2HTxGd//w
      Pdxcsi8a9e2nqFEj+L//jz+GgjoS7hEaHvoaG0uS/M2P3mDT2uWcvtLLi9//S/7oT/+SzZvW
      caV/jN/7zS/fUEwmnUDobVSW5nLo9X/ieJ8fZWiKbV/5A3ID1/jxviusXb6UK/0v8ZPv/xV/
      9r3vUb9iJT/80U/4/j/+gH/9m/8Nv6YEApOUbXgW33gPr5118d0XNvHdP/1LVq9bz7Q3wPCw
      A2dETc/AElY0193r7Sb7grgpAWanHLS3a8GQx9rmQpzpEn745/8r7cfepC8Bp08c54//8r+w
      utrK4J98D5U2h8IcFR09Azz/tU03lDXlGKZDGUVvsqCQJI4cv0jtmi0Ii8Sp02f4UquJp174
      Fs/vWMuf/Mn3mBvtwpPS0qLWoMt46XVMMuxW8w8//DP6zh3grOuDsjsvnebBL/8O33x6GwB9
      higml56v/dqOe7vFZF8oNyXAyk0P83vffGr+DylB0mPnxJkL9F3pwLL8ccpKS3hn75vEVlXh
      CadJJdP8h//9rykwZPmT//TfeGzr6vfL2vTwE3zjyc28+eO/4/y1Pqy5FrY8+jTLl+Tjmgsw
      fu3IDXUbLbmYLTa+8Vv/E88/+wTa3AJSUQ/+SALv3BxQ8f68RUVF7DnURfrxzUTCYZQKBQF/
      AEmSUCrlc3vZx3PDNyXHkk/v2b185zvf4Tvf+XMiSj1/9X/+BWOD/ZiseSgVCp746v/MijID
      s6EsFoMKBVl+8dN/5D/+p7/huRe+/n5Zlvxizu59kd///T+g36fjyQfW8p0//EPe+Oe/43t/
      /hcMTXqw5BdTkGcCYGldHTklTXzloQb+7I/+F77/Ly+Tymr4nW89x1/+xz+lfdRLaUEe2hwL
      S0oLqF3zCFuqNPzRd7/L2Y4hlq7aTHLsIn/99/+ysFtQdl9TfFRnuH/+wd8iaS1cOneGP/u/
      foBwdXD4Yj/p0AwRw1L+85/9zkLFKpPddR+ZACGfm+GxScqr6yi2WRHZDHZ7P2l0LGtuQPlp
      2jZlss/YRyaATPZFJp8tyhY1OQFkgGCov5eU9FnHsfDkBFhk7FdO8T/+4R85e6WXmYlRxiad
      jF47wY9efJtYPEpP/xACIOHiW7/9xzjaj9HuCOAYHmB61ofX42FkaACXy8nYlItsOk5Pr537
      9Tj69leCZV9Ibf3jfO+7/wEFcHDPaxw618fvvrCF2sYW9r/xOsW5OtwJNY80G9iycQWDzhA2
      W4YrFy9wddTD1sYS9LY8LnbOkKOTWJJvIC83h6mgxONbmj/r1fvE5D3AIlNu1bL/yCnsI4PY
      h12U5JnJLyqkpr6BdMTL4EwQs2b+WCinsIbO88fJBKcZD4AlRwfqHLZuW09T03IK80wkIgH6
      HB4sxvvzqyS3Ai0688f71uJK4n4naMyUFpkJJ5VYdNA7MExjy3IM6iwubxRFKoTRVobLMYTB
      asOgVpJns+L1x5EycQryrHT32mloWY5Rd/8dUNyQAH93rueuFl5m0vO1lXLHNNnn1/2535LJ
      7hI5AWSLmpwAskVtQc9aLs9E8Seyd7XMdaVG8g3338mX7PPhU+0BpFQUZ383kWD4/ffifheB
      2blPHZhMthA+VQK4R4YpalpBaGZs/g2RJTDrIu6TE0B2f/hUxw5CoZjvDq2Y7xPt7r1MWqEn
      5nVjLirAH5TILKv+YP57cMlBkiQymcxdL1e2OHyqBMgvKWGmvxtDbhH+6QmKlm8C0njHnZhs
      BeSZ9KjVH1ShUNz9wQNKpfKGOmSyT+JTfXN0uUWU5xb9u3c12KoqP02xMtmCkZtBZYuanACy
      RU1OANmiJieAbFGTE0C2qMkJIFvUbtsMWpwMks4twhdPLmQ8d9Xf/PLKXS/zL15Yd9fLlH12
      bpsAoZlJlllzwJBz3ybBwJT/sw5B9jl3x0Og0MwkdXE3pWbDQsUjky2o2+4BDC1rCSgVBADf
      hx58IZN9kdx2D+CLJ+nquIY7mmB6sH8hY5LJFsxt9wCegav0HT+GzzGCNq+U4oWMSiZbILdN
      gMKmNaxQaclkQWvOX8iYZLIFc8eT4JmBXnLybehNOQsVj0y2oO6YAEazEedAD74Z5y2nJ/2z
      TPd3452Zf3hXMuRjdqif2bGxux+pTHYP3HE8gN5kJiEZyEaDt5zuc81S1tyKc6AbykrQWXJR
      uKaRJImId+4LOSLsTnWF0ne/Povm7pcp+8AdE8A37SSnuJSgL3rL6QoFSALeuzWwEAoKljYy
      1duHaenSL+SIsDvVdWUidNfr21lruetlyj5wx29O44M7mB11ULfl1pf/i2rrmB3oxlJWg396
      Ap1BS9gbwFJcdk+Cld3o8KiccJ/WHROg/+g72Ja2EPF5ybGYbpqu1BopbV4x/4d1froxv+Tu
      RymT3SN3TACFAuLBAOjMCxWPTLag7pwAag2WkjK0ZutCxSOTLajbNoMmoxHKWlrJZtJI2bt7
      O0OZ7PPitgmQCAdRKJWo1BoU8sOAZV9Qt00AjUbFyJXLaHQ6Jjvv/sASmezz4LYJIElZLEUl
      ZDNZmh7ctZAxyWQL5rYnwabCchTpSwSck6QysKS5aSHjkn3OtPWN89t//fO7Wub6lip++p++
      eVfL/KTu2BcoGY9jKSrFaFlcF0dki8cdm0Gr124k4A2i1st3X5YtrFAyi917d0cimrUqmgr0
      N7x3xwQYa28jt7qF2cEOCqvlG97KFk5GEnf9aUK3csdDIFt5GcHJISwVjfc8EJnss3DbBJhs
      O01B40qkTJZk5O53upLJPg9umwAKRZbeQweofeAx4j7PQsYkky2Y254DVKx/mIr1869bH3/y
      NnMJ/OOjmCtqUKuUIAT+iREMhRXojfrbLCOTfX7c8Rwg4OhnvLsL9+jwLad7h3vQFZTiGugB
      5odE5pRU4RnuvfuRymT3wB1bgRxdPZQuW4HL3ktRbd1N01NpgS3HSEA131dIZ8nD2deBpbRm
      UQ6J/CLXdy86RAohbl+fJC1IfXe+DtC6jJmRUZas3X7L6Sarmen+bpQaI/7pCaSwh6SkRZdO
      Yi0rXXRDIr/I9SlVqrtel0KhuH196buf+Leq745b1zXYj0pvZuT0AQoaVlPduvyG6eayGsw3
      jH6sxHa3opXJFsAdzwESsQS2JdWojLmEZ0YWKiaZbMHccQ/QsPUBHJ3dLFm5FlOuPCpM9sVz
      xz3A4LlTqPUaZnq70OfId4eTffHccQ9Q1LgSkQyh0OkWKh6ZbEHdMQEinlnqtj+KPCJS9kV1
      x0MgrSpF79F3mewfWKh4ZLIFdcc9gEpnRK+5/b1BZbL73R33AL5pJwopTnBubqHikckW1B33
      AJWr1pFMZqlac3M3CJnsi+DOD8oWWUIzY4y0ty9QODLZwrpjAoQ9LhTaHMrq6xcqHplsQd3+
      znABN5nMfP/+wOzsQsYkky2Y254DuAc6SSQUZFGzpEW+J5Dsi+m2CVC56TGElMU3NsBkXx+V
      y5YtZFwy2YK44zmAQqnCtnTZbb/8UiqKs7+bSDAMgJAyzAz03f0oZbJ75M6tQB/BPTJMUdMK
      QjPzT4XMplIo7sHACZnsXvlUw42EQjHfT+j6SC+13ojyescheUjkF6u+RTkk8qPkl5Qw09+N
      IbcI//QEOVYzUa+HOa2BgiVL5CGRX6D6FuWQyI+iyy2iPLfohvdqN2z9NEXKZAvqU50DyGT3
      OzkBZIuanACyRU1OANmiJieAbFGTE0C2qMkJIFvU5ASQLWpyAsgWNTkBZIuanACyRe1T9QUK
      T48SCkVRagyU1tURdTnw+8IoVTrKGhvuVowy2T3zqfYAkVCE8uYViEwcgGAgREXLCpBSdyU4
      mexe+1QJoNUoiUVjCElBPBTEoNMQCUcR96Avt0x2L3yqBLDVLSM556S4sQWAvJom0gEXRQ3y
      +GHZ/eGGc4AKyyd/BkDFitb5F3nm+b+Xzf/tdM7gD7phpXxXOdnnl0Lci3GK12WzWVS/wkgi
      IcSvNHpMrm/x1fdp67qnCfCrBifXJ9e3UHXd0+sACoWCZCyM3T5IMBL/RMtGI9H3X0cikfn3
      opGPrC8S9DE4NEwy8/FPxBOxGL/Kaft7H5Z/bpaZ2btzB223e/4ufJlElLlA+Jb1vSfo82C3
      2xkaHWfO671lebFY7Kb3bjWv9xbvvVdfOBx+///3Xt/Ke9Pe+7zefz8wh91uxz7iuO2yH67v
      38d+u8/9vfdvFXs2nWB4eJR09taf7Ht1qf7qr/7qr+4Y1afkGZ2goKGe0f5eck06BocdqPVG
      QoEgpKL4onEmRgbJas2YdAoG+u1klRo6r1xAoTORazExODhIUZGNocExsqkYUy4veQYlobSG
      oH8O04eeX+aYnKSutpqOzi50Oi2zM1MkJTAZjcy63cTDfpxuL+m0RDYeAZ0R1/g4OTYbykyS
      waERUlkFQa+LGacTnTkP5/gwwXiaXIvppvWL+2eYCEiUFViJBH04xicx5doYGehm1jOHb24O
      ndnCaH8/7rk5fHMejFYbk6ODBONpMvEwUzMzZBUacgx6+tvPo8yrYHZyHG/QT0lR0U11vkdv
      yME166S5sYFBex+BQOCmeMccY9hsNqR0goHBQbIKNX6/F7XIkEXB6OgYGaEi6JvDZrv1Q24d
      QwOEI2EUeisinSQZCzHmmMSSX8DEiP16XWa8Mw7iQs2M04MyE8cx6SS/oAC9wYhz1kVLYwP+
      udn3t1Eo4CUcidzw+X3Ye7EPDtlRqdQYjUbc7lnczinCiSz93VfJKnTEwkFyzQYG7EOodDkY
      dBq6Ojupb2wgm80wNjxEPC2wmG+uZwGuBGfpbL+C1pTL2ISLlpZmnBPjeDyzTM36KC4oQJIU
      FObmMDM8QFhSMjg4SGFxOVXlJQCYtUqmxx3kVdQSCEeptakYHJ8mEM/idntuXimVhhyjAa97
      BmthOSH//C+E2+3BMT5NbU0NHreTmTkvetUHvzqSlEUIwcTkONFUlqamJbgGB7CPzzE4aL/l
      2nlm/CypKcdgMODyeGluqmdseAiVVodWo6Gprhiny4daZ0ar1tJUmc/wYD9YK4mH/MyFItQ3
      NBKYcwNgLaki5JpAKJV8kqNhg8l6x3hHRsdY2tiC1+0kHg4wOj2HTilAwOTk+B3LXlpbQe+Q
      k6JcIz6vj0wmiyobZqCr4/31kICymgZ6r16hoWEpmWyWbNjJdCB9Q1kf3kY+nxe3x33beqNB
      H3a7nUA4ju/6r7zb4yYUDKJSqcgvLKa2qhwAe38fqFQM2uefZqTS6dCoNUSdE1grGwj5b/6e
      wIIkgIoVK1cQ9c+h06no6+tHbTBRkmskklUyMXCNYFIQiSaw2gpRC4mqykq0aoFjygVAZU0l
      V3rGKMvVkU7EGHC4KS7IY2bMji8QZmZqkmw2xtTMHFI6gd1uJyMpQK0n35qDTikYGBwknsyQ
      m5eHUgGFZj1JoZ0PUUozZLcz5ZggLhQo39sVKxSgNWEz6aiqrAJgdnKKFCmmJucPVcpqyxm4
      eo3hsQlUSPT392Oy3vlx4VpzPnMTdiKJNErgxh2/ApHwobPM//JPTk4RnpshEPsY9+W5Rbzv
      bQ+9TsdAfx8SagzmXKzaLCNjU6R5/7ZOtyHoHZpi+9o6hifmPw+3241SpUKbk3fDeoCCgpJS
      NMr5eVQqFZJ04ynmh7dRwOthxnX7Q8ccaz6NjY3kmg0oRZrBwUGSGYHJbMXldJGjVTPsmAKg
      oKAQkZWoqppfb7XIMDAwgNDnMGHvJ5G+dR339CT4Tsb6OzCWNVNs/WyeQDnU005+TSu2HM1n
      Ur/s8+EzSwCZ7PNA7g0qW9TkBJAtanICyBY1OQFki9oNneHk82HZYnPTiDB/dJZYNkuZpeyD
      9vAPCcX95OgsRNNxzFoDwUSEXIP1loWHEwFydLlkszHSQo1Ro71h+rhvjKr8mn+3lCCUCGPR
      m/HHA+QZ8m4TuiAYD2G9Td0y2cdxU1eI3R0vYdHncGmyB5tOTbd7mFJLCV1TFwims3jDE6Qz
      YX5+9XUqciuYCLpIp2OYdXqmw3O4A8P4kmlsRiu948cIK20MTR5HYyynf7oNk7GY2fA0ztAM
      PdNXCCeCmAxFzAYG6fOMkqOGH1/8MQWWSpwBB0gpRuYGiKTijPonyNNqcUYjWPV63urey4rS
      5cyFJrg81UGxpQJnYAxnyIWKFJ3OXvQaM3OhMSbCfopNd75AJVt8bjoHECKDJzKHUWfg+Mh5
      SnUSJ4dPcWGiE5VCiSs4QZ6pjMr8BspMuUwGZ+iZaWfE1c5McIKLMyNcGjlEQhIsX7IR+8xV
      ZhMpxiaPodCYOdx/gHPDhzDqbUhCor6onqP2Q0SSYexTZ5hKQFV+LTW55UwHJumZaqMkbwkX
      xq/g9PaTVmgxaQ3zwSvmw48mIwRCI5x0XOFo/9vYzOUcth+l0mSkY6aboyMXGJg8gzcpD9WU
      3eimBNBqrGxd+iiP1W1DiDTeWACt1sLmqg2cGD6KQKBS6Ugk/cTTSQTQlF/K4YkRmm1leCPT
      mA02hACt1kYqPopOV4BGqcThc1BsLcegy6fKWgwIvJFZNBoj7VMdVFhLyApBOhMlmo4jEKBQ
      YTXkYtFZ0Ks1pLNJoukEALFkCGdolraJi1TmVZGVUuSbKig0WshK84msUCiJJObQ66wofqU+
      n7IvshuuBAsh8ETcFJmLAYgmfDijIZbmV+LwDmI2lqIUSazGIjwhBxqNFUkIbAYT0yEPS3LL
      cQcniEoKqnOXoFCANzyNRmfDrNEw7BnAZq5EyiYoMBUSjM3hisyxtKABX3iKtFBiMRaSTnlJ
      okNDFqVCgdWYjz8WQImEQaMnlhHYjGaGZnvIKHSUm/IIppIYtSaElKLAVETv9EWGPXYqSh+m
      NkfLXCLGUlvNLc9rZIvXTQmwkAMg7qXZ4DihtESdreYjOnvJFrMvbALIZB+HfCFMtqjJCSBb
      1OQEkC1qcgLIFrWbEqCn4wrnzp3D47/16P+piXHS6RQjjklENoVjYvq2hSciPiZmbn23Au/s
      NKHYBxem4kE3Aw7n/HJhH9Nu/y2X881O8vprr9F2re/2a/UR9r7xMoNjU5BNcqWjm0wixLFT
      5z9yuRNHDpH6hN2l4iEvA8OTN7zXfrn9pvki/hn6R5z4pvpp6524aXr31Sskr9c9Zu/BG0rQ
      cekEzmDykwUEOIb68Efv/UXBqHeKPoeLqN/F0LjrYy4lOHTo8MecN0v7lQ4gw6GDxz52XBPD
      /fjC89eSbuoL5HT72PHoIxw9dprSAjO+UIzWVavovnaN/OIKVNkoCmWWs2fbMDz6IIFgmI6O
      DprrKhmdCeJ3T6DUW9m4bhWpaIAZt4RzvB8pm6W0phmXYwC1MZcSqxb0eVw4e5FkOk19XS19
      PYPMTIxSZlbSOeZj24YVDI+OU1lTS9DjYuWatRw6cIBNT7xAsdXAlfMn6R+ZYMMDO2k/9Q7J
      ZIa84mKUGjOVNi1d/SM8/MRzLCmy8M6eN/AEk2zbuoEzF6/RuPYBJkb7eeWVX2D41gucP32C
      0cEBvvrrX2LP2/spqaxn50NbOHfsHVyhBBZbOZ7padyOXjxpC97RPmori7jQaWfdlgdprCrl
      5Z/9hExWsPO5F7hwZB+RjJpnH9vGnD/IG6+eIJPNUtu8ktdefpm0SodntJu0OpfnnnuCzstn
      effSFF/ZtYrjF8fo67TyxPY1nDx3iaIlSzl74JfUz/j4jad3cvLQ28RzaqixQefYAawWM41l
      Fi53DrD5kSepX1LI/jdfR20twaiIMjblZeuGVkKKPPyTA+QZNOgKKnl9z+toLIXYDApWrlnJ
      /mOXqS8xUVRewZkzF6hfsZaA24GUUWDJUTHtCvLEc8+hSwd58ZW9CIWEzapn6coHcA+3MxtK
      8dQjG3jz4AVUKhVNhfDuNRe/9fzDeFImJt55mylPkCeeeYK9v9iDUCp54atfZt/beymsqKWh
      xMS5Djtef4Rdu6Cvo42rXb2s3f44Q1fPoLWWYBQRxma8fPmrXyPsGuHll19Ba/5d2s+fZWpi
      lGdf+AqH9+3DUlzBM7se4drFkwxN+zCabeQqE/hTaWxmM9W55fxy3y9u3gMkY0EunL9AfXMD
      bn+cDSsb6ekbIp1Jk8qk8fu82ApKWFJVQ1lBLl5/gGQ0RE//IFpVEocryOTYEInMBz+V0WSG
      NatamJ5ykslkSKbSREJBAnPTCGMx+Tk6UhmJ8up6lFKCktISljYtw2LUkkqlSGcEq9asRQE8
      /7Vv0HPhGLv3H6Z7YIRv/uavc/b4MVIpBWvqiqhq3YZvZpxjx46hVmQ4d/Ey2agXd1LNrs31
      9DtTtDS30FizhMrqOpavXE1DzRJqGpdRnqfm+LET+KJZLl28BMCsy82Op7/MxHAPAPFIAF8w
      yvTUNJlshng8TjadASCVVvLcrq28s2c3GXMlaypzuNI3hmvOTySRYteDm5nxJFixfAWb1iwj
      lUoRT8aRJEF9Qz0btu6g2Gqkdd0WSISIRcOkJbja3k5TYzNPP7kTgKX1jex84mm0agXbdzyB
      3zPBoaPH0WqUnD13DoDR8Wl27tjO8WOnSEc8jAcleq5cxDnrIeSZwTHYTc/oLJ3tbRi1gj0H
      TpJVwMjkLJfPHEVSabl04RyjIyPs2LWLbDpNIhknmxVkU3HySirRa9U89fgjDHa0cfzsJfyT
      Q/QOjVBY1YI2G6O2oY7123eQq80yO+dlzBPmK7s2cezERXSmPKpyNZw5eYzZcJq2i22cudDJ
      b379q1gM87/LoVAIlUjTdrXr+vps49jxE6Qibtp7xiirrmHF8pWsaKymtGopa2oLOXfqMCOe
      KO0XLpIWMOeeZdNDjzM7Ocr0xChrt+4gHfYwOXgNVfHymxPAZC1g67bt1FSUY1BnOHe5k6ol
      5ej1BgL+ABqNFtQ6UkE3Mx4fGo2GproqBqf8VC2ppNCip6KyGrVSgUKpQq1SolGrUaBEo1Ki
      0WoJBwIo1WoMZhuBmSHGpmZQvjevRoPBksf0SC/+UByDXkfA56PjajsC6O24SiSZwWg0UFaU
      y89+9hLNq9ai0+tQabSolQp0eh2rV68CTQ6tLfWojHkoIx72HLnM2uU16PX6+ZVV64l7Jhly
      TKPTatHq9DQtX4leLVi9ZtX8PFKaPb94mfySGnR6PVZbMR0XTjDrDyJUKox6FTOu+TtEuKZH
      efWtwzy8cxfBiW5Odk3SXF2MTqtBp9OjUKrmX6tTXLzajVZrwDvnJiOBJb+MwfZjzEVTaNQq
      9Ho9bucMKp0eU46B6upSdr/1DgDVNTUc3LcbSalDqQCdTs+61avIombNyuUAFBYXoVQoWLVy
      OSZbOfXVVWhSLsrqWtFo9RRV1FJRYGJZ6ypWrFnPgH2Y9bX5JNUmVq9Zj5RJs3rVGiz5heg1
      KrQaLelEGF84jkKpRKvRoNPpQKFEa8qltbmekupGygpy0apV6HQ6LAUV2C8eYy6SRKczYFam
      eGXPUdauXY5Wp0Oj01G/bA0mDaxevYraJTZeff1NMtcPTGZmZjDkmDDotBQVlaBUKFm1cgXm
      ggqWLikANKTjbrrtDnS6+c+/oqGVQqOK1tVrUClAgeDg3jcx5hVhyLFiNRvQaHUULGnCY7/w
      2V4Ik7Ip2i5eJhCJs+OxHWiUn7+LcPvfeJXtX/oa1o9x84hXXnqVr3/ja/c+KNnHdvLdPdRt
      3EVFvuGW0+UrwbJFTW4G/QTi8fgtX9/Leu7F/AtlIeMSUpZE8uO3iGVSSdLZ7P2XAPaeqwSi
      KeLxBJFojJBrmJffepdUOkM8FiWVzpJMJkgmE2SyEpFwCElAOpUkHIkScI3y+hvvEA37udo1
      QCKRIBIJIwnIplNEo1Eymfm7sMVjUWLx612voxFe+ulLAETCIX7+8ksM9l7D7Q/zkxdfJJ5I
      cLntMgiJYDCEgPmyw2GEgEQsSix+/QMSEoFAAEmSiCeSpJJJspIgEY+RSKZ49ZWX55e7vs6J
      eIxobP7LFAkFSWeyIAQv/+zf8IXCvPLqS8SjETJZCSmbIRKdv6msEBKJRJJkIkEmnSaRiBON
      JUAIgsEAmawEQhAKhUhnMlxua+PDrbyJRIJwOEIqGSeZyoCQCIXDgHh/WjoV5d/+7SViieR8
      nPEEUf8MfUNTvPLqz8mkU6QyWWLRCKnr2xUhCAYCSNfXORqLk82kSaUzJOJxBBCNhMlkJZKJ
      OIn3x3EIQsEA6WyWRCJBPBYlnc0iSVk8k0PsfucEAKnk/HcjnUoSj8dJptKEw/M30k3GYySS
      aXovHKVzbPbTPSTvszDa14vekstPXnwTrSLNU49uxt7Xw0hdCcfOXkWlVlFmgaDIoTxPz2ww
      iUpjwD3aRUX9CurLLAz097BxTT29A4OcOfo2VeXFqPKbGO87j1WnoHb7r7GluYJjh9+hvWuI
      r7/wOIfPduOd89Fx7ggdEyG8oRiOni4KMGO325l0eujs7mFmzI6kNZBRWZjqvyzAl24AACAA
      SURBVEh5SRG2pWs4c+QAW3fs4rEHNvPu7pfxpvU8sGUdh05dpSonTWnjco6fPMfWrdsIzDnZ
      +4ufUrHuGR5YWcXpo4e5eK2LLz/9GPtPd/L4Y4+wsrmWsWE71zp7IR3j9KljOMOgDM9fS9mw
      6yvU2yRee/sCNgJUNDRy5FwP6WiA7/z2Cxw9eR5/NEu5WSAZrbjdURRSnPUbNry/rb//3/8L
      Jp2O3JplBLxeynI1ZAUU1rZydt9uCvINNG/fyeCgnYkZF2M97Vzu6OXbX3+GfkcGkU3z8osv
      smFdK6ev2EnEY3z3D7/D6QO/ZDQoePCBhxjuukDb5U6ef24X45Ec3P0XWdlax7URDxtbmzh6
      4iyolPzB73+H2Nw07x4/gy+cwiIFya2sxeVJoku7sVitoC4A4B/+/m+pX7GZIm2U3rks4/ZO
      is1Gtj/5DMePnUWRTbB+eR0TnW333x5AcX0UWH1LK0015ZRW1lDfsgJ9NoAnGEGnVZNRqHn8
      6efwO6eIJ5LoNDp2PPoYY4N2cosqaGhZQVmhFYVCgTmvmMd2PEg84EGfV8L6lfOPe0pHfQyM
      ziIlIgyNjPDgrmeoKLIx4pjm6eeepcCag0KpoKi8krq6ehqqK1AqFHjCcZ555hkCs9PkFZbw
      yANbicQy7NzxAN1XO5CA9VsfQpeNYB+bv+AlSQK/c5ymdQ+yZkUTeUXl7HhgI6FQlGwyQu/g
      CAopib64nlV1pXR3d6NQqqmurWfb1o0odTns2vU4mVSEkZFR1HoDiVgMFAoUKJAkCYUCWtds
      ZElhHn09XQiNgVDQhyeS5OknHkUlBEqlAimbJZmav5FmUWklG1ubWLlpO0aNYHR0lLRQoSRL
      WWUtW9Ysx5hbSN3SOupKrQwMjkMmRiw5fy4Z8rlJoCPomWLTw49j1SlIAys3biNXk2agr4Pe
      vjHU2TiR61f5JEnC4Zhk55PPUGrVMO2aI0ejI5GRGOjrJqvSEQj5UekMPLprJ6pUgqSk5tGH
      tqJAAIJHH9vJoL2LaEqwaftD1NQsYdPqZTgnR6lbtZmlZXmEYml6enpvHhP8eT8JzmYz5BcV
      o1FrKbJZKa2uZ7r/GqWNG1AnfRishdTXVFJYXEp9XQ1jI6OUV9UQ8U6jyrGxbt1aHAPXMOaX
      YTblUGDLpbysFKE2YZDCtLV3UNWyloqifGanxymtqOahHY9y7ui7mAuKeeyRbbx74BBFZUuo
      rawgr7iMtH+GcFZDfq6Z9a1N7Hv3KDueeJocvZrS0jKUShWT46OU1dRTX1PJzMQYk7MB1m/c
      SsQ1TFzSsOnhnUz2XMAbkygpzKe0tBSVzkRRQS4e1zQFJUsoLy5gZHSU5hWrKS2yYcs1cOJ8
      B/W1lZSXlZPJSqxe3ognEKWppQWrJRfHQCdZVQ5NTY0YcszkmvXU1lQxMTVLXV09qxqrOX76
      LLG0mpUrGpke6iSksFCcbyaTyVBaUowpvwi9WsHGdWsYn3ZT39iI1ZRDaWkxBmshivgcYUkP
      6SiFZZU0NjagN+RQXlpCa1055ooW+i4dZ0njSmorSnDNjDM+5WbNxq1kYj5sJRWsXLeRvvZz
      mGyFPPHETo4e2Ie5rJ4CowCtiWXNjZgMGhwTTurr6qkqL6O4vBwpK1FTbuNy7zB19Q2UFuXT
      c+0qxrxSljXUYskvQK9SUFJcQsnSVuaG2lHmVrCyoZK12x6WW4E+IHFo/15CaTXPPfsUGtXi
      2A49Vy/RNTDCQzufpqzAQjwex2C4dZPhF5GcALJF7b47B/iw3q5Osp+wc1oqEWbGfWMHPadz
      5hOVISVC9NgdAGRiAfqH5o/lu7s7bz1/OsHsnO+m9z2Twzj90VsscXcIKUlPz8Atp4W8bqLJ
      zEeWEQ/7CETmW8KyqTjuuVt3Uvy4psfHyUhpXC43UjpGT//wB/FmkjhnvWQTIfoGHZ+qHoCZ
      yTEuXmojHEvccno2Fbv/zgHsvZ1cab+CpDFx9dwpypcU4w5lmRwbRq8W7DvwLhZbCVaTkXMn
      D3Olo4/apXW0nz/B4KSHsnwDI1MBpkd7uXy5HaNRx9/9/d+RV7iE8uI8unsH8c04wJDH2JCd
      sM/J6YvXqK4uxz44RtTrRKkUnGobwmZIcfjQQZxhBSsaq3njlReZdrlZUlNHV9sZhmf8VFWU
      0nf5BP/44ps0NrXQfu4Ec+E05aVFjHWd53TnKJFIDIMiyYGDh7EWFDM2MoLFoMDhCtHVdppg
      QkFJkY1kLMT+vfvQm0wM2weZ9Xnx+0KE5mYQCgVnz11geHya6vIiDuzfh1qnY/9b+3D7ghhU
      GdIqE2NDAxQUFfPGj3/AuZ5pmhsqObh/P2pTPkHXOEdOnKasqpauS6fpGZ7Gce0Yb5/upnXl
      CobaT/GvP99NQ8ty2s+fYDacoqK0CCmT5N39+5jyhCjJNbJ3335M+fOfQVdXJ4pUmElfEufU
      OJ5ZF4nYHP/w//2E6qpy9h84zFwgREN9LSNd5/j+P79GTUUh+w6dxBcMUlddwcEDe5G0Fgry
      LITmnOx75whlVbVMDHVzvq2dnNwiRnvbuXKtm4KySgza+cbNN155ifoVrbz++husbKpl7/53
      KCgpY3h4FANxZnzB+y8BThx+h627nuWdt95Aq1Jgy9Uw6lUwcPUSmYQfT1TQULcUk1HPgYOH
      eHRDMweOnCGQMWGMTBBRahmfCjJq7+ThjU1cmwarLs3TTzyOQqHk3XffIZ0IMutyM+Hy0dc/
      yK4tzRw+18HExAwJzziWsmrGp7z0d1/jy0/vYHAqyIqmGjq7OnnqoQ3s3nuYq31jOEf6aFm3
      hSKLloBkpAQPoZylODpOU9OyiuD0EIaKVuzXzlNbXcHE+DiXu0YJuCeJzLmIx4N0jAXpuXKB
      bQ9s461XX+LBp58nR4R4dd85nt25gWOn2om6RtGazQx7JfxTfbgcwyzb9gTleWr6hpwUqqOY
      lizl1Jk2nFMOVq1sJR5w0bztSS4ffoutjz/H/j2/pKqsGMdwH8PuKParl6lqaKamUEde41aa
      yvMw6dXEhIkihRufrpKZnrMsaVrNleNvU9yynZ62swwN9vHEc19h9y9/wbq1azj07kFiqTQe
      j4dxxxiBOTebHtyK15vkoc3L6BvzkpP2UVDfSkWentmwmgfWVDPojKGIOHFPj+NJG7h4/hTb
      t2zmpz/+Fyqryjjb1snw0DhbV5TQM+7HPjZNhSEDtioKzPN9va61nWNq1kt+QSldbacorqzi
      1NkrzLkmmXPNUFlTeR8eAgmJrquXUepMSJKEVqdnqPca41MuSiqqKbHAsTOXAYiFfFy4fI3K
      2jq80yOMzHixGLRIkkCj06FRKxGSRCwUZHR8ClBg1ggy+hL6L59i2doNkI7R1t5NQVExrikH
      /UOjIASSJMim41y51sl7TwFKRMKcvXCZ8ppaMvEQxWWVqJSg1ucwNTxASqlnpLcDbziORqVE
      SAK9wQAKOHvyFMUVFaiQaKos4MKIj8bqMoKeaSpr5h82Xmiz0nbpEnO+ENXVNahVapyTYwwM
      jyGEhN5gQKmA4iIb1y634XL70enmO8wZcsuJjl9mSeMaACxWC+0XL2LNtXD50kWESsvJs2eo
      rJy/bc2q9Rs4ffQdVKZ8eq9cJJbMoDEYGR/pI602MtrfiScYR6dWYMox0dt1lVlvAJvVxMWL
      l1BpjQA0LrEx6IyQ8jnILa2bb5JV6nHPjOGeC8zHp5xvCkZrZHbCjscXQqfTo1QosOTl45wa
      Z+nSRgByLSYmnD4aGmpJRP109Q6iUmsJeKYZGB4jmwhz5VovAAqVjs0bWonG4+TlWhifmKGp
      sZ7KQjOjvgz5BjWID5EkSXzevf7ij0XfiEOkMlkR8PuEJElianJSeH1+kUknxdjYmMhk59fj
      hz/8H2La5RZCCBH0zYk5X1Bk0gkRDEWF3+8X6WRMhCJxEQkFhHvOL4QQIhoKiFAkLubcsyIj
      CZGMRcTUzKwQQohZ57Twzs2JVCop/MGISETDwjU7KwKhyPU6vGJqxiWEECLk975ftxBCuF0z
      IhJLiLlZpwiGY0IIIeLRkIgl08Lv94tUIiqcsx7h9wdEJpUQsx6fEEKIObdLeLz+66VIYmpi
      XMTjcREIhoUQQrhm5mNKJOIiGIkJv98nJEkI5/SkiMbjwu8PikjQLyLhoPjRj34k4unrn7Ek
      iYnxcZHJzpeZSGVENBwUnrk5EQiFhc8zKzzegBBCiOmJcZHKZK+vx7SIxJNizu0SgXBUCCGE
      Z2ZC7N79pvjBP/1ECCkrJsYd78+fTsaExxcQQb9XxJNpEfD7RVYSwut2iWAoLPyBkAgF/CJ9
      /TObm3WKUCgsAsGwCAb8IiNJwjUzKfzX11fKZoRjbFQkUhlx8vA+8U//79+KHodTHNi7R/y3
      //r/CHcgKry++bj9Pu98XR63SKUzYtwxJmKJlEglosLjC4hsJiXuu1agUCBAjtWK6mPE6ff7
      ycu73c11F5d0Mk4olsaWZ7nrZUvZNOPjk5SUL8GgW7hnrnk9LlJCTWlRAbPOKZQ6E4X5uZ+o
      jPsuAWSyu+n+Owf4FbS3nSWSnL8v6GT/VRyeIN3njzPkvHWT3u63dl9/Jejs7Lpx2pu7b17g
      3+novHVz6J10/rtlRnvamfbe+gnptyUkOruuxyuyvLHn7ZtmaTuyn+lACtJxOvvsdLad4o13
      jgNw+uQZBLD7l2/9yndRfXv3m8TCXgZGJzl98swnXv6t69t34MoFPJE05w7vxxW+9fjl02du
      X353+0V80ds8G/W6/Xteu/86w43Yu7nYdoUljeuITPcRkvQsrynmcvcQ27Zs5uSJk1hLyslX
      R/HHQG3MY/jKEbpGvHzza1/i0tmTjCavsaE6j6HhQ5xVqVnfWMrlHjvL125n/Yp6JkftvPST
      f6Jl+zNMjoygTAW5ap/CaLAyNz3OG6/+jMLadTy4cRk//dcfoVKoWPXgU7Qd201l0xpiATdm
      dYZTbb1s276FMyeOY8wr5Te+8gyXj7/L4FwUlVpPY0kO3cMT1DatxuMcQ5fwcWHYgyQJdOFx
      3MpuvvPb32Si8wwXhmZRKTXU2tRMB7I0Ly3nSmc/hWVLSEf9PPnIRk52ThH3eUiHPPSPuwnE
      0xw7uBfHlIudzzzPsb2/xDnh4GtrHgPSjI2O03vpKI1bnkRKRdm7ZzfhjMA7O8WeX76CuayJ
      tGeY6dkAz3/j21jVGX7yby+SymZ59IENzClLcQ22sX39Go6dPo+lcMl8L89UhNGhSY69s5sE
      SnyzU+zatprO6TQPrq3n7d27mQ2neWTtUk51jCMJwcNr6zndPkAgEALgzPFDJLsnqc5Jc+Tg
      AVSoqS8x0jPkYP2Dj1NfbOStN3eTFlrMyigd3f3sePJLHDmwn4bWNfSfewd1zzibli3hao+d
      5tVb2LSykSP7dzPl9tG6ej1Hz1y+//YAHpcLVCp6uzqY8cb5jee/RFt7L9/69jdJzQ7gSwom
      hkfxh6M8+tSX8bsc1De38MyzT6MGGurq2fHU0+To1Gx+6FFEKsKZcxfQ6/QM2eefrm6xlfD0
      zm2Mjc3g9/m40jnMt7/x64QCXnQ5ufzalx5nfGwUAKHS8pu/8SztV66SyKp57MGt+Hx+zl+8
      yjd+61uoo1NMB9JMjQ+TliAaCrHtkSeIBua4NjDOt7/1bQa72/D5/CQiIVZvfRhlKkpjfSO7
      nnqGHJ2KeDjM2q0PI8V8hAI+Njy0i/7uHr76W9/GM+XApEyx/8h5Wla04Pf56Ric5JtfewGj
      RsHli5fQqaD97HEM5cvYvLr1+paU8AciNDUv49GHt6PU5rBs+UqefPQB1Hozz33pScYdo1y6
      2I5KkcQ+6mTW0UV560OU20wk4zGiiTSBQACvZ5a0BAN98+OmpUyKcErB8hWt7HxoKxZlmjcO
      XWDVikbSiQieQJiRwQFC0Qgr1j+AMpviUnsX3/72N7FZ5luPGuobeOqZZ9GqFDy880lSETfn
      2y6hN2iwDwyiM+XRunolOx7YiNM5QzYZZGjSi8moxev3U9fYwlPPPMvFC/Of7ajdDgimXAG+
      9fXn6e4fYvmyFfdfAqSSKQw5JgpsBVQUmXjtzbfZtKGVn7/4EtriRgoMSuoaGlBJafa+8Srl
      tS0sa2xi3549ZAVUNrVw/uB+hDYHvVZNvi2fB7ZtISNBY/18c2N+fj4qjYFcs5F8m43W5iW8
      +ovdxJJZbDYbKDTk580/mSbgnuanr+xh+/YtVJRXzC9vs7F963pe/tnPyeRUsCRfx9L6hvkx
      qgrBwX27KSitZG1LDT/72U9pWrkZmy0fg9mKXqvCZrNR09TMiXf3EktJoFRw4uB+cgoqsOYX
      YMnRsX37Rl7/2c8orqxl67YtDE37qbLlYLPl01JdzGtvvo3BksfGzZtQGawsW7OB0HgXA1Mu
      tGoFKFTY8nPJzbOhuj4Utb66kH1HTmOz5c9Pz7OxefM6jNYiKopyKaxsYfzacboHHVhLqrG3
      nSCSkMikkmj0BoqKCsm32VCqdeRZTNRU5HPwxHke2fko0+4AuQY1QsqSzkJFeQXGHDNGvQab
      LZ81K5p4+ZXXUVxvPq1fsZyDb+9Gb85Do1SQn29jy6ZNSGhoWDr/NPhym4VjZ9pIplLk2YrQ
      qwRKjZ5MOk1zcxPv7H2LTVu2ks4KGhrqAAWV5TZefOVNNm/dPr+eH25ivB+aQT+uIwffFsFE
      9q6U1ddxSbz04k/F2SvdN03bs+etT1RW2/GDYsof+2T1Xzol7NPeT7TMvXT83T0ikPj435VT
      R/aKTvv4PYzoVye3AskWtfvuEOjDsukkjokpAHzeDzq4SdKNbRhe763vTieE+MgnYwopi88f
      uO30eCRILHnn1gbZ59d9lwBCyjI6MkImm+XFf/4hnfYxAPbseZMJh4NMVnDm1Kn35wuGI+x+
      ew/Tk+Mk0vNjUoP+OcannDh6z/Ojn+4mHEvgGB0mGI4R9PuYdTkJRmJkMylGhnrZs/8w4YCX
      UcckQkj4/D487jkiQR+nDu6mb8LH9IQDb+DWt5OUfX7dd53h3n79JTIqHSdOnSMa8rFq/VaK
      C3I5e/IwaimJ3ZlicqSXyeE+0uocjhw+hkiFMeqUnO8apbWpjh/89/+K1piP2ZDFPh6ksbaI
      i5cuc+DISWLOQfzCwKmjxxnovorRbGHWF0UtRTl64C3UtnJ++qN/pL6lmV+89kv0aoFWp+eX
      bx+ivLSMkuKCz3oTyT6B+24PEIqmWLmylXQiRmFJMUtr51sEzHmFrG5dTioRQ6lU4o8kWd26
      DI1KiTbHyvo1q8mmE4DEM889T8flMxhyiyksKsE90ktalYPIZlCqNKxZtwGDWkEiK1jWVI9C
      ARcvtFNRWkgoEmVpy0oaKgswWIupKC1CYynm6Uc3c/zMKXxzHjLSJxykIPvM3HcXwr7ylec4
      eOgQz33l1wnMTqC9nsLrN2zEkFvE8iYLyQoruTk6jhw+iKTUsnXDKpTaHNatXA4oCPq9tG7Y
      TsWSegp67Fir1mH0XGXnow9TaNZiVMP6TRvIN+s4fbGLDWtXkgmVEIylqa0sp8RsRKnLZV1L
      Gd5QgpYCEx2jbh59eAfTDgeGXBvqz+Fd7mQ3+8K2Ak0M99PW0ceDj+6iMNf0WYcj+5z6wiaA
      TPZx3HfnADLZ3SQngGxRkxNAtqjJCSBb1G5+RFJvN1JaIj01yUf0EgAgNTn/ALjU6Mht58l6
      Z8mE44hMktTUzQ9LSw31k41nb35/Yr7s5OgIdwol2dNB9PxFpMQHXRKSI6MfHbxs0bvpOkC8
      6wppfwLJO4WpsJDIyZNoljajNquIXe1FU12LIhMmNeHGsGY5gVdexfzMr0EqSryrG/2KFhK9
      dhRSnLQ3jumhbSiUWSLn2zGUa8lQQGrgMKryWpQkycbiZF0zSMPTaKtrUGnTJPpHMKxdQ+DV
      18jZsROlSpCdGSPe50ChVCDF4+Q88gDJnmGM61cS7xnAvPNhQu8cRl9bhpQSKLQqRDxM5ORZ
      dK1ryIz1I/T5qHQCbfMKUgN96Jcv/yy2uexz5KY9gNJahAh7EJIgcekM2YSC6IkTRM9dxrzr
      YVJ9Q5DNIvmnSTmT6BoaMLTUkxpzIAIukn29ZKMpIifPk3X0kpz0oswtRYTdJIanUaZcpL1x
      oidOkBruR1VSjVKvxrh5O8neTpAkyMaJdQyha2gkZ91KUmMOsu4p1DUtZH0edBVmUjMR9K3N
      AEhhP9Hzl9DW1hK7cgX9qlZSYw6ip05g2PYIKnWUWM848QunUaghdrGNlCu44Btb9vlz8zmA
      JMjZtIbY5U5UxSWIeARtUzNKrYLouQsISSLR3YvKakVIEiIWIjk6AZKEfs1qgm8cwLCyBZXV
      jLKoApVFDwoFaouGbFKJurgYkYqja2oGVKiLCkChIH75/PxD67p6UOVZQUgoRIp4jx0kAQJQ
      KkGhmP+XTZLo7p9fCYsNy9PPYlzVjCrXhlKrRgiBpqyE6JlTZMJplBqBtq4BTd1y4ueOYli3
      ZmG3tOxz6aYLYSKdRqnVIsViKAxGRCKGQq0lNfL/t3eez3Fd5x1+tvfegF1gsUtUopIoJMEC
      sImSqBo7tmTHsuw4mcwk/0bi2DPJZBLb40k8k2SiRomSWECxSOzkkAQIgChEJcoSZdEWZQu2
      3d29+QCZdkx5LNlx4QjPlz07e87ec87e9+6Z9z3n/Q2THp8AUwH6HVWI4oYKJGQRcwAiUpWK
      XDyBVKtBzAiI6QxS7UamYTEjIOZAqlSQSyZAKkdCDhQqyGYQ0ykkai3kMojZHEikSGQSxHQG
      pBIkMilIZIgZ4dOyFFHIIFWryKVSSFUqgEflR6/xdSQqDWQ3rp+LLBO73YP5paN/hOne5E+N
      zx0JFjMCuWQamV73B+vc7wMxnQapDIlc9sfuyiZ/AmxuhdjkS81mHGCTLzWbBrDJl5pNA9jk
      S82mAWzypeYxA7h55QJL4TgD/b1kPkeCyPv9G7koAw8Dv75STuBeT/9nfpRaX2N+6ZeyLuSy
      3Lh1e6MsZui7P/SZ7cKL07z55tucOn/5N3fy19B2/G3udG9kM7t8+RMAjh17+7f4JvGx3J5f
      lM7b11mNC1w4c5xQ7DdLFwEklgOcOHcHgOTqLDe7NuSQxFyKS1dukMtEePe904+1mxnpZmRm
      Q7IpvhzkVvcQq9MjXLja9TuN4ee89c6xL1Q/F53nvVNXfmUOs1y8dO3Ru76enl9pleadtz5g
      sL+XZGyVq7fuAgIXL10Hshx7873HrnPx0uP3ymNbIUSZgpH7fSDEia7Mc7dnAKPZhlUtMre2
      jkymIc+qJhCYwle6lc6ublR6M4vBWeZnZqjf0UhX133EVIRYMsveAwfRynIshVZov3EVVCqy
      Eh2SRIicXEtliYe5VZHJ4XsImSy2wjIWg9N81LZIRVUN3d1dmA0a7g8MUeDbgjqXwFNWQ2B4
      AKnBwZED+7jfeZOO++PY8wpZmXmAUgbRnJZ4KsXRPdXc6BrCV1LF4ZYdnD91nLlQmLLqOi7d
      vMurxbVElmZpazuDxphHMDDOz378L+x+7mvc+fg0GbmBv/rL1wj03uT83Qc0N9TQfrcbi9OD
      mAjz1RePcPpKD0JkGSG6RP/YQ8qrGwmMPUAnruFveprhe53IhAhLa+sceeoAH5y6yL69DXR0
      9LBtxy5adtVz6+rH3BtbwKZe5+L50whZCYVmOVPBJfzVTcyO9bOnxkcg62T09gXS6RQtBw7S
      e6+dB4Md7G/w0nZpEJ/3b8kuBzhzpo38PAujA7388w9HeP2vv8fFC+eJCTIcLDC4cpe/+5vv
      MdrbzemrveheOMS9u53cv3eHl55u5urtXjz+Mp49uIeLZ08SmFlg7+HnuXXxFEIyyb7nvsKV
      c22kk0mefuYprt2+x649e9leWcrS3BRv/Oe/U9qwnwfd14kl4ZkD9Zy+2kdWSPHSgUYud9yn
      0FcOkWlWI2FSKi+Dw4NoSHC9a4SKEh9nzrTh8nipqfAzODRMcHqc5WiKI8//GQ6jjGQyyYPB
      +2RSa7S1fYIsG+PMmXO4Ct0kkkluXDzLWGCG7XuPsLXQSFtbG1K1nmhwlOXwOjtaj37GEkiq
      wKaTsRxLMjUxDnIVkWiUmVCY1r07ERIJQktLIApEUlJ8RV5K/V5SqTSFLhPtd+5id7sJBBdQ
      ynKshH8hAidkRLY3NZGIhrHZ7azHoqRSKQQhTSIjo7ZiC6l0FrM9j1KvE6XRirfIT2GBB6tR
      z9pahLLqbeiUMmr3HWFPVQH/9qOfcq93hNdef53Q3CRZqYqjRw7izPdhUsvpau9Eq9exuLih
      oD67vMZ3XnuFodFJ6mpr2VVfjdHhoW5bLc2NNVhdbp5pbWRkoI+xYJTM+irhRJZsOklV414y
      Kw9Jo2JlcYktLj3HT16gpr6BRCJBR1cvOq2BufkFskICjS2f4RsfYcwroKd3CI1aytTMIt6y
      ahq31+Gw6lhcXASgpLyK5194EblExsGnXyQTDzE2G+Lb33mN0d57JBNJclmByMosOmcZtWVF
      ZHIi5ZXbKbQaKSrfSkPzfgocZrwlZdRua6CitBBvcTl1xXlMzcwSXk8xMTZJeXk5+59+HqNG
      TllFOU27WylwGqmsa8JtVtHR2YFKp2NpYWPjYk9PDwaDlsmhLjR2H9vKtzA71kPpzmfx5Vsx
      2fPQKiUsLSwBoLc4+eY3vsZI7w2GRgLIxBTzC8uU1e3CqlPS0XEXrV7LcijIwmqUV15+DgkQ
      TyTo6O7nW69/m70tu6mt205NhR+ARDxOUWEhifUoa790TyUTcXwl5Wxv2sW+fc3U1tZTU7bR
      prunB53BwMzMDCqdlbq6Og7uaWA5nOFbr75M5/WzjxuA2WymoqaObDpJ8dZKlGSx2+z48x3c
      au8knRNRKBQYDGYMOjVGnZqxwAxWqwW3v4zV1TD+wny2lvhR6QzotUqQDcDy0AAACkJJREFU
      SLFZLZgtFqRIsFrNpFIplEolCpUGo16HUSujd2AYqUyK1WJGazChVqpRSVJMTwfJSaQolQpG
      7/ewns4SGB3gVmcfZRVbaW3ZyTtvvkHx1no87nzkKi0Omxm3O5+WwwfJpDN4vV4Aqop9vPHO
      B+zfv598t/vRuF1mIx33BnC7Paj1FopKqqgvz8fp9qBWSNEabTisRmp2tGJWiXh9Xhqa9xFc
      jlLmNuN2uzl0YB9CVqTI66W0yInBvoWcRMqO+m20tOxEa7DiznNQkO8kGY8iytSoP41g19XW
      cP6j05id+SjkEtxuD41VxbzxxtvsaN2PUSvjTv847oJistEp7twbQKHWkeewkOfOx2ArIDzd
      RzAURiJToxajPJhcID/fhdWZj06jRqlUUez3UlBSTd+N80STGfR2N6tTAyzFcjhsRvLcHlpa
      D5FLpykq2si40drSgihT46+ogdg8t7r6cZc1MN1zhfsPpojGIqjVapSfjsVh1vDmsRO0PvUV
      djXVYLbn4XA4sZt0uN1uDhw8SCYlUOgtwut2cPLjG+S5bHjy3Rw+2MK7b73F+PQKekWagdGH
      ALg9bqLxOGqlCoVCBkjId+fhcntQ6a1kVoMEZiMYFAkGxqZwu/PZ39JCFhnewo3feYvbxtXb
      PRQXOXjn/bMceuHrnz8Q9nBilOnZOQq2VOLzOD6zzm+NKNLf00VoLUbjrj0YNH84lZEnDTGb
      5tSJDwknRL7xzVdR/gEFvcVcmpMnThKOZ/jqS89w9uwn5OQaXv3zF3lSw6ebkeBNvtQ80W7Q
      +ZmHpDIbB2kygkBOFEkmE0SjUeKJxGP10/EwwaWNPKFCOkUylQZRJBaLEoutf+ahm0R0ldVo
      /Hfqp5BObagg/p7JZTNkMlly2Qxp4fN5kgBmgxtC4UI6TU4UWZgPkv0MD2A6/QulltSn5WDw
      i4mM/zpS6xGW176YIs58MEgmIyBkfnGYShA2xvB5eeJSI/6c0a4bvH3qAoJUgVGa5vt//wOq
      m/czO9pHV2cHJz++Tevupkf1s8kIP/3xjxgOzFFZvoVTJ9q4dPEC/i1F/OQnP0MQpZQW+wkt
      BFFodExNT6GQZBnvv0vPZAilXI7JoKWvrw+LzcHifJCHgQAmqx25TMr83ByhlRWkOYHx6QVU
      EgFBomR1aYGx4QG0djcLU+MkslJi4VW0aiUzc4sIyXXkSjUD/b0YrQ5CiwusrKwgyaYZHJ3A
      6XKSS8cZn3jIamSduZmHGK121kJzBEMRdAqR6dk5ltdijN79hLN3RnCblUwuxVGTZHJ6AbvV
      wFRgipm5JRwOK+PDg4gKLSo59PX2cfH6DZrq6/mPf/0hEVHLYNdNZCotMoWaVGyFwZEJzAYV
      //iDf8JT5Mdi0PD97/8DVqeba1euoFXJ0RgtJMLLBGYXsds2hAkfjo+SzErRqRX09fWCTIFa
      KaW37z5ylYpEeIUHgSAuh53FiT4+aR/GaDJg0mvo7+3DaLWztDDH9MMAerON6PI80wur2Cwm
      JkYHef/9U/i9VmZWsiiyMSaDS5x777+YX5fi9xUyPxdEq1YwMxdCSEZBKqO3pwe9xUZ8LcTw
      +MMnLzPcz7E484iHVxCR4ijYws5tlUgkUL19B/MPx/jaK68AMDzQi9nlxWXWolYqiAoSVBoj
      B/Y18c6JZSRCHJ3JSjS2jihCcKSH4YCdjy/eobnCgSvfSTiyTtvJk/jz9Ni8pbz7fhtr88Ps
      bqjjzPUUXz3UxH//7Ke88I3v0vbGW3gcBlZ85SzFZESCI1g0CjRmI9fuDJGNLeNxGHB7fdwZ
      CuJQChi1UrQuP93vfUh0foLmwy/S9uExymp3khJyCMtTnLnSS2p5nMMtjZz5eJWZsV7Mahm1
      dVV0TERJLgY41FiM1a4ll1hjdknKrU/aqfTbWYmscv3KbfJ0OdbDQcbmkqxduYNDL6WiYfej
      fyedwYjL6ST0QCCVyXL8/Q/Z21BB5/XLzK8dxmQyYjYZQSLDYDRht1pIx6MIqRgnPrrAyvQE
      +VYNUt3XsWeDnLs5QCYWosipI6+8kQ+OH8ekkVG/ax/HT54hMT/Btt1PkRVFQEIqnaHt/Xcp
      KnRgdPk59t6HxJan2LezgVMXLjM/MYxDJ2NlrooHCynkUgmJ8CKzkRSXzt7i2aNH0euNOJxO
      pEDHtYvkFfnomVjESJIDB/YSCIxxs6MfSWKeqvrdT+4SKCNRcvDQ84x23yEtCKQzGZLJJLlM
      ktG5dSoKbQCYLTa0ahWCkGbHzn2YhTC9wyP8z/FzfPe7r6NQG/nWX7zC6vQI8SxsrW/i3Ien
      ONBczfiqgFUjw1dcgkmrYT2yxsDwA2xWM3qzg9LiIrLZjaWGy+OjqsTL3HSAdUGK3V3CWuAu
      elsBEiCTTjD2YBSVTkfD9ipOXeqmymsmq9CQikUYHBzBYrOhtzpp3FbJkWef42F/O9OhDc2s
      gkI/TpebilI/mWSSqYlJRLmKnCDgKy7FbNRhs9uQK9TIZRIgh1SmxGY2kkyl8RR6yXNYia+v
      MzoyhM5gJJHK4LRbHi39rGYTaq0OiVxBecVWFBKRa9dv4vcVIQg5dBo1Rr0WqUyOSa9DbzCg
      1BmpKCuBbIqZ6UkSORlkMwipJOMPRlCr9KzFU7hdDiRAUsjhsJlAAs++8DL9ty8SWs8AIla7
      A4VcRjwWYXBoBKvVisZkpbzERy6TZGoyQEamIhZewebK31C2kUhAzCFXqrFZTVgtZtSajS37
      TdvKOXtjgNI8A6g03L1+FWteIZJsmmeOPs/IvdtP7hJIJoFrly9z6LmXSEWWWIokWF4M4XFZ
      KPBXYDZuTILeYESlVCCRShm53w22YpprilgLhwmMB/D6i+nvbqeqaR8FDgsypRadQc+uxjrU
      OjMFBW6MJgsup43mllZWlxapqK6l0J2H3ZGHwWjCYtSh1+ux2e1sLS8hkshRW12JQaOiansj
      VouJwuJK3EY5JkcBVdXV6HVq6iq2YHYWsKu5mcjKEmVbq/F63NhsNlZDC6Bz0FBdhkyuwGg0
      4XE7sTtdGC0OdmwrIyPVUlNdicViId9po6i0ioXJIVzeUhwOJ+VFdoJRKft3bcdgMOLxeCit
      acAgTZFXuIXW3Y109w5SV1ONw26jyOfjXlc3NbU1WK02jAY9ZcVeRJWR0mI/ZUUuAnOruF0O
      fAV59A5PUrW1DLvdgd5gZs+O7cTSEmqryrE4Pdh1MkyuAprqttLe3k40keOZA820d3SSlagp
      cBgw5BdTVexFrtKwujBNdUMze/fsJhJapLSyhiKPG7vDicFkp7m+kqSopGX/YZYCgxSWbKXI
      58Nic1HqNjE6tcDevc30dnfjLy7GZHGg16qoLvVhzSuiurKM4MIK2+uqkeZSKM2eJ9sLlEwk
      UWnUn9sFl80IZEUJSsUTu/J7IgnNTXGrs4+9rQdZD03TOzTJgUOH0Kn/+O7uJ9oANtnkd+Xx
      vUBfwIW0ySZPOv/HADaf/pt82XhivUCbbPL/wf8CL+r3i/leB0IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='French Toast dashboard' width='192'>
      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
      g0zaWQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Green Tea dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ice cream dashboard' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Iced Mocha dashboard' width='192'>
      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
      /wTlQWYP+OdhCwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Lokal Insights' width='192'>
      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
      v20b/l+jOwuff+iiDAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Milk Tea dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ninja Bowl Insights' width='192'>
      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
      uLw+1lZC/P/2S6WL+0H9FwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Onsen egg dashboard' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Polarity Dashboard' width='192'>
      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
      tqZpAE1ua/5/xi5jL8qpYowAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Polarity Food Insights' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Populus Insights' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Pulled pork dashboard' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Raw Frequency Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d5Qc133v+anqrs45zvTkhAEGwCADJACCIBjAJFrBoijTCl7JsiVb3if7
      6Vnes++szh57z3tr+znIliVLFrWWScuSGAWSIEASBAECBDjImIAZTI49nXN3xf0DfKQgCgAV
      SFCP8zlnzvTprrr1q6r7vfd3f/dXtwTDMAyWWOJ9ini9DVhiievJkgCWeF+zJIAl3tcsCWCJ
      9zVLAljifc1lAsjli5wbW2R8sfBzFZJMZvjRoRG0X6lpV0dVZOazlUufZZm5TPlt7Vet1hiY
      SFCSNfouzF1ze01TWXibZS/x68dlAjg/MM5IssrA+Ys817+IIssMTiySLsrk8iUKNY10pkCu
      opLNFSkrOkqtxsP7+2ms95HJFimUayxkK5TLFS5MZ9ANMAydi1MJ5lNFZPVShdJfr1iGoTM6
      nSRXUVBkmYVMiQtTSWTNQNc1RqYSZIpV5lIlwGAueUmclVyOZ89cqsC6phLPVsnkSiSzJS7O
      5zDgkg0zGfTXI73lQoFv7DlDTVFZSJc5MTzHQiJLPFfFMHQm51KMLxYwXj9OKlNgZDLOIy8O
      MvFzNgpL/Hpg/ukvWhqCeIoaZwsKU/MZqqrBQ3tP88DGek7lJPT0PBZvmEIiwV23rQUdDM3A
      ZBbpOz3CrGJj97oGvvvCEGs7AlyIlxBzCezhMP2Hh7j/7l72nlzk41siPHdykZhUQfAF2Hdy
      io9uaeChQ7Pc0GhlKKVQW5gj1lIHpgr7j13kM/esZt/JKT59x8rLbFZqVQamsmTnSiRwUEwk
      ELavYt+hQVa3+BiJl7h3QyP9F2bYsrGbda1eAJ4pV5hMlnhlYITP717BdKbK1PgYtS0r2bv/
      FN2dTbSFLO/OnVjiuvCWMcALh8/xnaPz3Lc+xvhMkvNjiyzkqtQ3RkjMJ5DsbrRamZpgwmUS
      kKxWIh4Hy1uDiILALZu6iFh1prNVJpMVKtUqC2WdW3sbifkcbzFgNJ5nMZFF11SKCrS3hFnb
      FqQmK2QUge09DXQ1+OmNOdhzdJTuroarnI7A2u4GWsMuCoUi8+kqU6kK5WoNAJvFTLmqvLG1
      xWFny4oGnBaBdKbIudE4i7kSubKC3enkzs1ttEQ8RPwuWiPuX/5qL/Ge4y0CuHX7au5fH+HR
      oxOUqzIWixmbJCKaLBjlLHavF6FWwuX1/ewCBZCcbnqidgwEGkNuloVtfHvvWS4uFjBZrCTm
      4zz92gQ6cMPyesqyRiTgxmL6iYIEkZ46Ow/tPcOJ8RSbVrfwSv8C65q9b2wydHGW7x8YoKC8
      dTLb7nTTFbWDINIQdAGwYkULMyMTPLz/HCfH05dtrygqmgEum3Tp8IKAAFisVtKJJAf753++
      K7vErwXC/0yFMAyDvgvv7E1+5cRF1qztxGW69raXY3BxfIGEbOLG7sg7Ydo1sZhF1nTWXZdj
      L/HOIbybuUCJVAGf3430cwdfDabms9RHfEgm4Z0wbYn3Ke+qAJZY4r3G0kTYEu9rfqUC0LR3
      cypsiSV+eZZ6gCXe1ywJYIn3NUsCWOJ9zZIAlnhfsySAJd7XLAlgifc1SwJY4n3NkgCWeF+z
      JIAl3tcsCWCJ9zVveSIMLj3CeOzQi8ynilgsEnKtSu+WHXQ0hN9t+95RDMPg/9t7ho6Yn+29
      LQhLiabvO35mNqhRKxIvGdQF3GAYzC0sIAoCdXVXz4fXNA2T6edO9r9uHBuY4Uj/DCZRwG23
      8IndazCbljrF9xNXTIc+e/xlTg6MAQbT6Qr/9Y+/cM3Cfp0EkC/V+H/+7RCdqxxsaWthZqrM
      8aE5/ugjm/G77dfbvCXeJa7Y3LltEpt2fYBPf+pTtNUH3k2b3nEMw+C7e08TbDCTk8v8+8k+
      /HVmPrZrJf/t4VcYnExcbxOXeJe4ogDaem9AWxjg3x5+hGhT57tp0zvO8cFZZnIZMuTojlT4
      zA297LswyFQ5wVce3MYPXxrg6aMjLD0r9L8+V3Z4DYMjpwZZ1t3F/OTFN7/WqgwODHHqzHmK
      2QRnzp9nYvrX54HxXKnGIy+eo+TMsaPDS//8KR7u+xZ/sP0Gzs/P8cLoIH/229tJ5kr8/aPH
      qcrq9TZ5iXeQKz8SaRiMjo1RTM1QkSLcsG7Fmz/pKn19p7E6baxauZKB/gF6VqxA0zSE93go
      5R+f6KMvc5GPb+3mtanH+OLaW5itmXnm4mH+cPuf8L2+E0gmE5/YuJlX+2fYe3yML3xwI3UB
      5/U2fYl3gJ8ZBgWIz03xyA9+wAfvuYvjR4+8IQBDVznRd5LV6zYwOTKIqgMGiKKIYRjv6UHw
      sYEZDk2OcPf2doYWn+ejyzZiLZ6hHbixeSMPn/wOv7v1C/zozGm+/soh/uCmm2mLBfjHJ/r4
      0E3L2bziamsSLfHryBVdIE1VaWtuRlY0fuuBB9743pDLmKxOpsYnae/s4OLQAHUNze+Ksb8M
      uVKVb+47Rne3l4B9gXZviBbtIva2z2OJ7GajeYKA3c9T5x/l/rXrWR6N8t9f2EfI7+C/fnIH
      h85O8cj+c2iafr1PZYlfIVcUQKy5nVpukRde3M/DP3jyzR1sHtatWcmyZe1IFjs9PSsJ+d/b
      q6YZhsF39p5E85W5b3UjFxP93OrOY2v4GKLZheTtxexezt0hgXhhniPjh7hzxUpu6VrGX+x7
      FhWVL330Bhx2if/2yCvkS7XrfUpL/Iq46qyPr66FVZ0tSD//Qj7vKY4NzvLy3CCf37mF5wZ/
      xIPNEaz+jZicrcxeOEulmEcK3YIomHmwvYtDYwe4sDjItrYO7l+3gT/ft5dUucgHty/nvm3L
      +It/O8TFmfS1D7zEe54r1uxqMY1SrZAuG3zkgx94N236lZIrVfnGy4d58KZ1nJp9lrsaW/BZ
      bEjBHcxeOMfxp3/AwUf+CVWuYW34CKbqJJ9dtZPvn/we8fw8vbEGfm/rdv778/uYyqRZ3R7l
      yw9s5Xv7zrK/b2wpVPprzhUF8PiPHmXXfb/JAx+5h0d/9Oi7adOvDMMw+JcXj9PV7iPgSOGi
      Qo81j63xAbILM5x47lF2f/ZPaFm5gcM/+Ba6ZmBv/jT2wmt8uvdu/vnoP1CsFegIhfnjW27j
      ay+/xFA8Tsjr4P/85E1MzGf4xpMnqClLy8H8unJFAdiddg48/QSPPvEsFsevZwjw1eFpLhRm
      +ciaDl4df4EPBHVsTb9NtVTl0A//he0f/QwOj5/lW2/F4Qvy2lMPYyBhb/kdQsXD3Lf8Nr75
      ytdQNIWY18uf3b6b7x4/yonpKSSzic/eu54VLSH+/F9fZjFTut6nu8QvwBWS4fKcuhhn/cou
      AFS5TP/wFGtWLb9qYe+lXKBsqcKXH3+CL912E4+d/QYPxpw0NtyG4Oxl/0N/w+qb76ZxeS/Z
      xRwurwPRLHDg4a8TjsZYdfuHMCpTVOce41Wti8nsHJ/e8jlEQaRYq/GXL+7nls5l7OxaBsD4
      fIZvPnWCB3atYm3X0gK6Pw+ZWgq7yYHNfH3yr64wEWYwNdLPifMXMTCQLHZuufXWN5YOvxLv
      FQHohsFf7nuB3qZ6EsWjNArzbK1fhiX2mxz6j28RaemkZdMtnD07Q/7QGSweOxvvvwmLWWff
      t/+art6NLNu+GzV/GiXzGk+mrbhtXu5d+SEAaqrK3x58keWROu5btRpBECiUZb7++HE6GgJ8
      eMcKRPG9PSH4XmA4209f8ggCsKvhHqL22Ltuw690cdz3igCeHxrixPQ0u7rd9A0/yidbYzja
      /5BT+3+MXKvh3nwfQxcW8A0Ms+LDm9DSZQYO9LP6I9vwWBT2f+evWXfTHbRs3IGc3I8qZ3lo
      bIbNLTeyuWUrAKqu889HDuG22nhw42ZEQUDTdR49OMjEQpYvfHATLvvS22V+FoZhcGzxZVK1
      Re4IbKeqlnkudZBWz3I2hG58V7MJTF/96le/egUrefLpp+nu6uTJH+9heXf3NQszDANRvL4h
      08l0mm+/coTPbVvHj05+i083efC0f47RU6c4f34Abd2HMJfKWE8NErh1OX9z7BBDpTS7Nqyi
      /6k+jFiMnt5VHNvz73jdHnxtO9DyZ1kdbuX7gy8R8zYScFx6G86GphbOzc3yytgo65uaMYsi
      K9si2K0S33iyj87GAD6X7bpej/caqq7w4swT2FIj7CyLmPKzWMtpVpRruJMjGAtnkHIzUIpD
      LQ+aDKIJRIl34omlK/YAp44e4OHHnmVVzwpWbd7BxpUd1yzsevcAZVnmT598gk+s38JL49/l
      Hn+Z7q5PkkiIHHjyh7T/xufpdEgM/vhV7Dd18IOR83xlxzbiFYVvH3uV+9tXkn15FNsNq6k3
      xxl8/jFuuPujRJavpjLxTYqOXv7p9LN8YfuXCLsuvajDMAx+3H+OwYUF/tPOXVjNl7JL4uki
      X3vsOHds6uCm3ub3fI7UO45hYBRmSYw9g1eRsdath+gasFweYFkoTXF08gnWOZfRYg4iVDNQ
      yYBSBAMw28DuB5sf7IHXP/vA9Iv1tldNhntx75Mk8jWiLcvYecO6axZ2PQWgGwZ/c+AFbKqd
      uug0UvYIuzpvY7S4mtFnHmLnJ76I1WTn5A8PI93YyuP9L/OVdjN+sw4IZELr+Nvzs6z0hgme
      zVBa3oGvdoHSyAk27v4wwfYOKuP/SNy5lUfOP8cf7/wKjp+4eS9dHObAyDBf3nU7LqsVgJqi
      8u09p7BZTHxy9xok8/V3D991lDIsnKG2cJIZyjR2fhirr/2qrXlVq/D8zB7ckoftdbdiEl9P
      WTMM0KqXBFHJQPUn/mvKpTKtntfF8bpAbH6wukH42Z7JVQXwtb/9KzbdeBOeYB09Xa3XPNfr
      KYBnBs7z2JF+fu+2Ll7u/wYfalzBWeWDlF96iDse+B2c7gh9D++DbpFnMlm+srYFb8OaSxdK
      LsHUYdT8LP8at7CoB9gwA5mGRozEMaJ6jtU778bfGKIy+RBD0kYOTfbxhzv+BLP4Zj7hiekp
      fnj6JP9l1+0EnJfEYRgG+/vGOHJ+mi9+ZAtBz/vgaTNDh8wYzJ8EpcKo3cpJMc/ulo/hsXgv
      31RRwGx+Sw9pYHA+fZKBzGnuaPwgfmvw7R23VoBK+nJx1PKXxGOS3hTH6/+vPAYAStkEc4sp
      BIuT1sb6ax//Oo0Bhhfj/NUzL/G5bZvZe+GbPBDzU/R/iuKh/2DTLXfgtwmc+NExlOgi+1Qr
      /8fdH8YT6QTp9cposkCgEzHQwVoxDulB9ggibQtlhOAyUqlxxMIiDk8UZ91K/IVDVGwdvDr5
      Kr2xdW/cvJjXS5Pfz9+/fIBV9fW4bTYEQaCjIUAs5OYfHj9OLOgi4v/1nFe5JtUsTB+FsecB
      A6NpK302nXGjwD0tH8chXX7eyswMib/6a8ovH0aQJKSGBoTX64+AQNQeI+ZoZt/skwgIROx1
      wFVcSUF400Vy14O/HcI9UL/u0l+4BxzBS71BNQfZiav3AAvzM1RrVZ5/uY/Pfurj1zz/69ED
      5KsVvvSjx1jpbMPwvsxWyxQber/E8b0H8avTdDVHea3PSXFjD4dy83zltt1vuChXpJJmavgw
      f39ujmUpD82RBrLzB+jp7qZ59Sac7hRK7hyPJiDiqmP3insv2306k+HvXn6R39+2g87Qmytp
      5IpVvvbYcdZ0RLln6zLE/xXGBboKiUFYOA2i+VJFC3ShYfD87B4cZifb6m5F/CkXpHL6NPnH
      nyT4B19AdDoo7H+eyokTOLduxXnLTkTbm8EDVVc5tLCfslritoZ7sZp+dYGFa48BchU80Vbu
      uuXGaxb2bgtA03X+Yt9eBvpLrOiR6RD3cX/DOoYGNcq6lQ037+a1Z8ZJt7o5Xk3yp7ftxml5
      +4OlciHB1145Qvn8IjtD9WTSx2hbuYH2VWuwmQZQtQrfGhllR+cu1jduumzfRLHIX724nwc3
      bKa34c3nCDRN55EXzpPMlvn939iA3Xr1uZX3JgYU45dcnPwshJZD3dpLvjZQVks8M/UoK3yr
      6fGvvdy9MQwKe5+j2j9A8AufR3S86RIaskzp0GGKLx3EtnoV7jt3Y/J4Xt/NYLwwwquLL3FL
      7C7qHU2/kjO5sgskQCo+RzKTp61rJfXhn/1e4J/k3XSBDMPgh6dPse/Vce5a7adceZxPtSxj
      YdrFTEbnhg9/jhNPnWMhZuWUmuUrt+3G8XNUfgDJ6mRrRzdZl8gzI8N0qG7mFi5gmKz4I6sw
      qyP0RpfxyPl9NPtb8dn9b+zrtFjY0tLGPx89jNVsptl/aWEBURRY0xFFEOBbPz5Jd3MIj/Ma
      PdJ7BbUK86dg9DkoJyDaC227wNcC5kvnkKwu8szUj9hedysd3uWXVX5DVck89F0MWSbwud9F
      tF5+PwSTCUt7G86dN2OUy2QffgT54ijmhhgmpxO/LUS7exkvze8lr+SIOZp+6ejaVeYB4Imn
      9/HpTz/IE48/yaaN6y99bRjMT49Sw45VVBi6MAxmO0679V0TQEnWePL8Rc6eP8B/bk5ztPA8
      n+pqw3B+hDN9p7n5gc9z5vHjTPhhUKzwp7fdgf3nrPz/E0EQWFFXT0NjlP+YnyaQ1ikXFpAM
      BW/sBsylw6xs2s6/nPgPemPrsEuON/a1ms3c2NbOv5/soyTX6AyF37hhjWEPy5tDfPOpExw+
      N0UqX0EymfC6rO8t18gwIDcJYy/CXB84I9B+G0RXXwo//oSt44URDs3v5+7mjxC2X54SohWL
      JP/277CtWoXnN+57w9f/WQiCgNTQgGvHTQh2G/kfPkqlrw9TJIw9VMdyXy/zlRmOLR6kydWG
      1fSLNyBXdIGK+SzT4yP0nR1k5cYdrF/R+vr10Cim51gsu1ALM7QtX8XwQD+rVq16x10gTddJ
      zw4zO3aSr48X2Sg6UZvnWWkaYU3b73Pw0SfY+fHPM/z8EIOWKlMegy/vuv2N2PwvS6JY5K/3
      78M9MMGtwUWWdTVhW3krRv5J5pxb+eHA83xp51ewS5dHehRN4+uHD1Ln9nL/uvVvabUK5Rrn
      xxOcG4szNpfB67Syuj3K6o4IzRHv9ZlDqOUv+fXJC+BphPr1lyr/z7DFMAxOpY4xXRzjzqYP
      v8VHV+bmSH3jn/F97H5sK3t+IXOU6WnyP34aLZfFffdd2Hp7iVfmeHHuabZEdtDhuXqe2pW4
      ogC++61v81uf/SySofGth77L5z7zmTd+0ypJJpImavk5lq/seecfin/9ZmipEQRvE//3uQTp
      RT89HRUs6lM8sPrTHHzyKBvvup+ZE4ucVrMkIha+tOMWpKsIMj03yNDRv0QyNeB07sYTacAX
      C+AMea54Hoqm8dDxVxk5forPdDnojmjg8VITRjknbea12XP8/tYvIgqXH1c3DL7XdxxV0/id
      LTdetZXPFKv0jyc4P55gejFPyGtnZWuI1R1R6gOuX+wa/hRVVWcsVWUiq+CyiEScZurdJryl
      MUyLZxAw0CO96IHuSzOxV0A3dF5aeBZJtLA9eivCTyUY1873U3jscXy/97uYo9HLfhuJz/DQ
      sSM0+vw8sGELAafnmnZr6TTl5/ZRuziKY9dOzJvXczCxD7NgYUfd7ZiEn6+xu6IAxs4d5dlX
      zmMVVTrX7GDnlpUAGJrMyFA/6bKJFR31TMzF8fnCtDRGf7U9gK5Bahh9/hQL+RpibB3BppV8
      78RrjE/lMckKgutH/FHvLfS9lKZj/TZyYxpHcwsUm118aeetV6z8tWKJC8f+mVz6NCu3f4X0
      wijjJ7+DoLbg9d5JrWAgiCLuqA9fLIA3FsQd9iK+vmyiYRi8ODLMDw8c4I+2bSWaH8CmDiLU
      uXmx2kRBqfHA+k+8NbZtGDx65jSTmRRf3HELlrdxrQzDIJEtc3YszrnROAvpErGQm972CKs7
      ogQ99rfd6OiGwVxe5mKygqIZtAdttPhtyPlFUqPHCCpzzJlbmHf0EA2HqXdbcFlNVyy/opZ5
      dvoxOj3LWR3Y8NbB7vMvUDl1itAffAHR+WYINFPK891XD5GrlPnMjTuYy2X4/onj9DY08Zvr
      NuG2X1vkeql0KXLUdwLHthuZXhvkXOkstzXeR8gWeVvXA95ryXCGcWkSY/4kSmqMIa2BvL+X
      nuZ6/A6JV8ZH2dc/RHFKxNawn0+1ekmOxHD6owjlKC/OTaB1Bfnfb74F88+wQ9c0Jk+/wti5
      r9G06h58rbdzaGIMr9NNlztC6sxeCum9NPXeRWP3RymnamTn0uTmUhQSOQDcYS/e+gDeWICE
      SeVrLz7PgxvWE0xMUTEv0GG7yA9mCzQvu5tbl+2+7NhKpYRSLvLc+TOcLVb4ZCyEWZXx1Dfj
      bWhHfBuummEYzCYLnBuNc25skXShQkvUy+qOKKvbInh/Ru5RoaoykqqykJepc4l02vJ4lEWM
      wjxyeoqx6UUia+8i0LUZQRAp1DQWCjILeZlCTcNrM1HnsVDntuCQRARBIF1L8tz0E2yr20Wz
      q/1yGzWN7PcexjB0/J/8BMLr90JRFZ4628ehi8N8bMNGRHOOl0dfJOZp5K4V93Jmeo7Hz55k
      W3sX9/VuwG65drjTUBRKLx+iePAgta4YR1ZV6WneSm9g4xWFaxgG5VKR2YnxtyEAwyCeSBCN
      XFtVv7AANAUSAxA/g2GyMmrpYVirp6fORYvPiiAIzGaz/N3BA/hKQfLmV7k5OkaDvI18Rsbn
      XsMzo0NIq2J8ccdOzD81wDIMg+T4DENH/gHRkWbZlv/EuXSRxUKOnZ0rqOTjnB4bpuxtIFSy
      4pw7jCYcp3Xth2la/mHE1/NMdE2nmMi9IYp8PEumkONZMc6mlctZUy1gD8xSzyzfnElyU8su
      GvQIhmEgiCYkhxPJ7sTicHGuWGHP0CD/ZddtkFogPzuBIxjF39KF2fb2Z4t13WAynuXs6CLn
      xxcpVmQ6Yn5Wd0QJ+ezkM/OouTkaxBR15iKiycxUsszpoVnCnWtZsXkX8YU4J44fo1atsnbj
      Rlb1rkF6PWhgGAa56uuCKMhUZB27Y57R0mHubvkw9c7LVwzXS2VSX/86tt5eXHfc/kYlPD42
      xCN9x2gL2fA4skxkxljXuJGb2m9hMj3O3qE9hJ0Rdi+/h3MzSfYOnuf25T3ctXIdkvnaoWJD
      16n0nSD/3F6GrPPot9/Ijas/gt38ZlBC0zQW52aZm55Ekiw0tLRefR5AVVUMw2Bscorurmsv
      j/gLCSA3BaPPYYR6SLpXcnJRJ+qysKrOidl06eJVFYWv7n2adf52Xj5/jK6Gl7jXfyujQ2ka
      G2/miaEBPOub+cL2mzH9VOUvpQsMHdxDMvHvdG76OEXPKk7PTrMp7GG5y4SQHrs0RW6SKM5c
      pL8Kg1IjFiWAL38Ej7mftrW/TazrXgz1Uisul4so5eKlz6Uiybl5HhtdoOJy8fE6D2FnP5ly
      gEfS5/nishU0LrsbQsvRahpysYZSqiEXq4xMz6NVFIwGJ4pXIqLJuPJJbA4XgbZurO5rh57f
      QC5BcQEtN8vYyCA2o4TP4+Hl0Rp5U4DlPb34PE5eOfA8VpuNXXfsJhi6vPIWCwVO9/XRf+4M
      dbEGNm65gVhj40+0pAank32MFS7QZb+bxYKArBmEnBJ1bgvBcobCN7+J5yMfwr56NQgC06k4
      3z56gOHEWRp8ZdpDLayO3YjVFMVZmaO1NoHoCGFq2MRkeZE9/U8CBrd13cXQQolDF4e5r3ct
      u7pXI15lLPI/MQyD2oUL5PbsYVFepOU3P4lY18Ts5AS5TJpIrIFYUzMmSeLg6AtXF8D/+H//
      nJbO5Rw//hor1m/n0x+776oH/4UEYBhUVJ2Ts0VUzWBDoxuX1fQTPxv8w6GDtHiD7H3pAq76
      H/PZpl4uvFaktesOHhsYJLylg9/fetNlIVhVVhl95RQT/d/C22whuOKTvLaYprE6xSYhh62o
      o/raoWszWj6PMXQKlCx5l4hTqpLGzTlNZM7wEqmcZpmQx2NfjtnTjBRoQvJGsDicSHYXotnM
      xb4j7HnuCCMxHw9Eg7RYklxYiPKC8TQPuu7BodtRazKZggVfU4jwsnpcES+IApnhOKcvjHNO
      KpC0qNSKeYKGSneskVVdK+ioi70ZyTKMS0GB4jwU5qE4j1ItsVA1k5fCuENNBCJNON1+BEFA
      VjUOv9bPj55+CVu4FV3X2dLbSW97hGVNwZ+ZoGcYBtOTE/Qde5XkYoJVa9fSu34dr+UOoRsG
      O2N3Ynp9kK8bBqmSwnTfOdzPPM7kB36LQFszAYfBi0PP8dyFFxGEKlaphbCzG0mV6WGB24Ii
      dU2rUMOr0coptNkTCAIIsQ2kbF6eHdpDohhne+suxpNwamaS+9dt4saOFW9rzKOpKtPHXyWz
      90msRQXfPfdSv+tWDAyOTx7h2cE9bGzacnUBPPydr6OabOg2PxZD5cGP33/1g/4CAigNX6R/
      32GiN91Ic++yt5zcvqFBxlJJyrMmBkrf57MdduInJZrbb+Xx4TEablzG727d/kZUxTAM5s5P
      MvbKM7ich3AFGhjxbSdR0lillmgqaLitPpTOdsomC/bZGabVEmeFIn6zwpqUDZtWZd6r4bJr
      GKkx5mpFRt09uB0OOpQpmkQfhuFDtjSgiGEURYBKFkPOM1nI8oNKiR2hIDc3TbJPWcZM9QRf
      3vaHWGaPkR2+QFzuJJe24nXYaFnWgCniQXfayYynkItV/CvqSUsqo4lFRiYGmEzMotpD1Dks
      dGrzdNihrbmHnFTPxZqPCjbaA3ZaA1akn3i/QTKR4MC+56jVauzavZv6WAM1RWNg4lLIdXg6
      hWQ20dkQoD3mpyPmJ+J3XnYParUaJ04c5XDuBewlJ3et/hDtXV2XNTbFAy9ROHqUyoO/xVg1
      S9/0awzG+/DZo8By6lxN3Bku063P4pAsUL+OkruVbDJJYHQUHA7UllbMdhPG/An01DCmQCeF
      QAcvTh9jMN7PutgWpjNWplJpHtx0A2ub3+qRGIZBIZdjdnKcYj5HNNZIXVMTo4tS/AwAACAA
      SURBVLOvMf/UD0C3cahdY0Wslzvb7mSqdo1coAMv7KV9xQZaGt7eqPoXEYCuatT6+6kcP448
      NY21uxvHls1YOjsYSyX5zrGj3NHYyzdf+lc+sGwS13CAcN1N7JlepG3bCn7nhq2XKr9aQ0+P
      kx86iZYexhENca5m55zspaWm0lE2CKoKCw47ibJMXaVGJOLHunI1YiFP5twQe5M1LjgdbPLW
      sVnJMO2ukraa8FQtRMom8qLMjHmCeWc7PrmC6FnEEvHiMinYlCpWuYIrVcRSVPmPXASPS+OB
      eoUjBZUZh4XPdd0HiwWMkgFqEjHWghFuQcuW0Bezl66HTSQzMYpm9RF2DGEPeTBc9ZQVMwNj
      M8wicaJiIVUtoeoKIaeTdQ11dITCdITCeGw2spkML+3fRz6fZ9cdd9DY3HLFVrNUlRmby7zx
      F8+UsEgmWut8tMf81EUkTpX2cmPdDhxlDyeOvcr4+DhNa9dgCYVpPfQKZ0dHeHyFF1mYxirq
      3NtzB/euvhu3VkaZOYGenaLobuP5QhjBasKZT9A+N0+n04uppwelUEI9fY6ypFNtbKQSi2EV
      MoTzw+iaghLp4VBultdmjtPq62Y+56Gq6Hxi04101zejKgoLs9MszExjdzppaGnD6w8gCAKG
      YTCcGOKRvu/QIHvZteBjWpxheoWL1rq1Vx8Eq7USj3znn4ibGvny5x640ma/lADkySnKR45g
      Cocxh4Jo6Qzy6Cjy1BR9okDXbbv5qxODNDe9wOZEBIu0gf3ZGsu2LedT3Q0ImTH09ATp6STp
      2hw5bZJicBdTtg7q5Bq9uRI+0c4Fdz3ZfJH69AKNLSEqUQey3c6UHkYq1/AsjOJPTOAxW0gr
      AV7Oq4zoLqhWWB+o0BvJE/bEKCbjqKkXmHX7GAzdSNUXZXlDE41+L7JRQ66VGX3sWSzmeqZ1
      F6OOWf6wOc3hmp9yZYRbou3YVBmnbuBSlEuTTIZOqZbBEliJaFuNmlaQMyWyRRUh6CGwsoEE
      JkaTJYLVRdyFGRz+IMHWbvKGwWgyyWgywZnxMZL5PLV8np7GRm7ZuInOUJiQ0/UWAeiaRnx0
      iOmhM/jrm2hesRar61IuT01WmVjIcvjiWU6Nz5DJ2Kivt+MLSsznc+SLNTY3RAgc2EPOm+Ns
      q4NE2cHGhs38b5t2Eq3NoS+cYaqsMG5tZk7wY06naczl6ahUCccaGAoEOC/ECNglnFYBDJHq
      +TFiYxeoMwpUAlZmA14yPhdWZYZuMY050M6jiQwDuQF81hAzKT8xb4CVJgd2XxP+ugbM0qUB
      s0PXkCtTvDT7Y4QibPJtpeyYZ8Q0g2gy0XO+laZjR6/eAzy/98dE21fR09X6lsHlr0oAhiwj
      j0+gJhZRFxOoi4soySTfdFi5dXiUcCnHdzdW+c1FNyVbM/u9TXQ3FvlYzEZVd7Kw6GJiJINm
      fwG8VhKh2/EHG9iqCKiTC7xakZDlJOuVC0RNC2TNFRLudubCt6DHeukKu8hXc4xmUxhFmWhm
      lEjuLIHCJLl8EtnfxYVygMmiHcWwEfH7iDrbaNamiVSfR3FpnPSuY9G3gu6GblbjwJkpk4pP
      I3q8vHRqjEOeOJ/eWMfLU68SMnvpro1jtnkJNG8nFlqFmhhAnj2GYjIhe+upuuupWENYi070
      eTNSTiNlc9CxtoFg/aV8+nJygfTEMCZJwl7XzKvHTzA7M83Nt95GtLmF0dQlUYwmkyRLRWyS
      RFcgyFoJ8qODJGfGibYto7F7Ndn4HFMDpzBLVhp61jLl8HImnWYsM0OdM0J78FLvErS6mJzN
      8NTp/RjqKSqSF12IUqx4uMWU4zNbmiiWkpzXA+S8nUQkJ83JFPXxRYRSnnjQyXxDjKTgRl1Q
      iIZ81LfWU82XmR6bIy1ZsfgF6lNJnEMZPIUFQs0eCqLOkNVCxV6j3pIhJJk4kU/zamWEgh6k
      UA3QHF7HxzuXEa45SKUn2Zvcj+Yz2NpxJ6OVaWQ9zcbIVrzVRs4eO0hxOk1TT/uVBZCKz3Dk
      6HHO9g9ww867uHXbhndEAG8RhGHw+NkzVBSZLU4n/+PFr/GZNomGeTf/umjDo2ncMzaBJlmp
      me3EowrV0DCLkTtQ7E3caFMJzwxSzU+SV7NEHCKG38m8tZ4p51by3l6azdBqUwlay0h6Bkwm
      DJuPKTnOUKXAdFUAJYa35KapPIs/O0Jx/hylSpxw0InHqJEvVTHMPrxWA7/djejbSL8yzymb
      C2/DNppNJuIH91Af8zAz7OGVqEZHYJGcQybqvZP7Vq5FzPeTS5zDX7ceb3glyenDpEZfQMhc
      JOCMgifCjEkla/FQrnrxpmM0iw2EWoNY63woNpGDe/fgM2nYJDOdG7fiijRc1tor1SoLFwa4
      eLqP1OgIfl+EKZOTpCGxyh+mzeUlrcm8ll2koFe5Iexgdvo1ZMVgy+Y7aF+1GWcgxFjqIi9d
      fJ7xoeOsTtuxb7ib/XPz7HSWWWeuYg038FohwPP9eVyCgzsjFrblZ6iYLAxH2lk027GPXyQk
      5/G1+bGuasGqpjClxqhZnBSiK1Gns2gDs2TSVTJNnWj+OryDozTZwNNgR8nOIWEwZzPh8lQJ
      W3TGdB/PpU9zoZynoDbQZbNj9iW4MWwjLRTRrE10losEkiKzk42MJWs4G2XUeh+n8+krC2Df
      k99noSRycWKSr/7Zf35bCVq/lAAMA6Oao5q4wMlzL7HKIbE3Oc2iFqfxYjOvONvYfPMG7mnp
      ZOCRfTDVR7A8gtycQvGGMRs1CiVQhRDL7AEsNQfposD8Td1M2bsxygJNqfO0VqZwenXsDhkx
      0IkRWk61UiSxMIpQXqDRVqFmEhi2ioxgZrHgJ2iqw21rJFt2k0osYDcMbtBKtJnLCOV5JmWD
      TDVDqTqHV8jhsZQxORyUBQc2wUSwcRujZ7McC1dIBdrJFp5lh1kiHN5AT8daMguniM+dwu7t
      YsF6A90tXZiTL5CYOojPHqYx2Iu1KrNQTJMvBxHTLbhFkWq1SKJWoLW9AyWXpzg/jyTZEU0S
      qDqCqoOmYTKbESQzZV2jqhQoaVWcQQ/elja8sShKsQbFKtm5OZLJKVxlFwIqSWWRPu8YqTqR
      YMnOrrotlA+dYk/vMpbZc9xfX0by2FEdDszFIqZZBTEVIluRUNwah7Uyr2Cm3VGkNzOA11LG
      bipjKySpqF6crTfga9uEVM3A3AmSmWFmHDbmXPWUVAcmw40UW4ESrxCdqNFki9F8wxpMU1NM
      zs4QNWuIXgcLDPFD5SJptcyMbEPRmgn53Tgng4QSFnpDThwtURYddkx2Ky67hMtmwWm3XH0M
      YOgq/adPEK+I3Lpt05U2+6UEoBXiCDNHUDIzzOZrvFwwsS7QwvFUmRFlD5un6zkptbK82eDu
      kIXMmVcQjASqTSTubGcmH0SeNNiYTVMw21jWHGR8dT2pSIyiHqVJGadRHiekL6KXc+TyVpQL
      eQxrM0L7CkzRFjBEDAzm83lOTo0TNfJ02lRCNgO7R6PsVzFsMnZBJi2EidNGytxEouqnQ8vR
      sDiGUSmTyi8SL1qZKHjQNWiyztFsyYFboOxX8MgpQtkUWYuM5LShudbgDzaSyIbIpNx4iqPo
      +Tkksx+rPYiqlLHaA4gWK5n0SQSriXjBjWS1szzmQdZCWNxOrCYThlVAERQMRaHqUChZVaSi
      SLVSYmZmFENUCTe2EOtcQV37ciSLg9xChsx0Am99AHO9hX3zT7A+tJVKqcqBC/uZzsapdy+n
      ftZFy8AUBwIu4tYav5Gz02SpgkPDHnYjaxYypjz1ih27lGfCPk5FnyNYyOEoZVE1mbjuZUqu
      o+pezky5HpvVweZ2D5vaPZR0K+cSJs7GBQpTZ4hVB1lrH8fvSJJ2unGGbsdn6iSjxpl0lRjQ
      NdIyINtoUbL0yxdZ42zAGrURKhqkcvPsL1QpV5vYEd7CB2/ZgU0wU6zIlGsqpapCvlihUKpc
      /1QIvVaglkuQU6389SuH+EBbA97kKCMTj9OtZRFlCV9RxijZKJnsTDXJTIc3MqxuoDJZZZ2k
      sNNVQ7dbGLYHKXsj1DvytJfP4ZkfxzBnKfqayNs7SNTCVGcyWFMVnFUTnsY6LK0RdDSKC/MU
      CgVqJhGzYeCyOjGVSqhzMwjFPBZzBXtAQel0INbZiNRMSLqZcSHGhFBP2hLG66gQ0ibxF6dx
      VuLIVRmlIjCZC7KoOvCFssRd7RQrEqdqs3QbZ/jc8t2Yi3Mo0ycQ0gsIZg3VHaZkbaBiCCiO
      ZmJNtyNqVkrpOQTJg1abwez2I7mbmBg6zfzMCAB+Vw3JHCZZzVMuF/B6wuSaBOSQlXbravzF
      AKWFApVcGbPFjKc+gDvkYWJ2hPGxEZL1OeIsIlY9+Bra8dsEVsppRoaKHLS4aOuQqbcamC7k
      cEwVsGo2bGYXDUIFl1Ylq4UBBxJ2rEaCnFWmKuZAdBMJmHF5RXwBgYLoR8vmcTavwOEPIqg1
      qvFhxGqKrGHDLHpxSnVkZImTpSmcxSEaS6NY1XmyokhStHHeFOWszUNDXRin10N83E8w4WST
      ZmKTp8aYpvGMOseMc4p0tR4j10XA7sNrUehwVgj7ovgD0esvgHJ8DOXCHoqzZ8jGp6Cm0O80
      Yan5OWjeTCRb4gZdwNrmYlSaJeFYgzqZ5ybByiqPzoInSH+4C5NZwZc8RyDXj6QWqdXsKKkQ
      7rEFFLcF3RSgJJjRwg4cnQ2YmhopCQ5SJYOgSaJOUfGhUhYLlGanMQQritOJLv3ENLyhIypl
      qlaVRX+RrDhDfVVjXcmNR6+RM8mk7E0kpGbiQhibkiCqDRMRyjhNOqKlSlUrk0Igh5VzmXly
      9mZWBXpRizJCbgFzph+peJFGrUbU1kFWqmfOqDAnz2FXZ9FNZjKCg4WyHblqw+tx4gjEqOUM
      7NYgJXmWoFfGJUjki2GyBQ1ZVjEkMHxmylHAZSbqbKHR2Y7bEmTv8COkK2MEfW6aCo00L1iR
      shJxp8KrJpVAWWetcQFfaQGfkMdrkQm4LJisIebFeuYLBvPpCm53jRVNIXzeEAXZTqYapFi2
      oJZFzMUy1pqBIOsYikLSkiLndCH1rsela/gKizhVB/FSmZnSLAFbjiaPTNQjUNBdDOdspIoq
      Jn2IgHmUFkGlbHGTtAaZnrWRqepYRIOg00Q0IOKoBXCXAzQ6bJyXEjxlzLBgcVHviuItmwg4
      61nWco0w6LshgMriOEeOPEVGcxOsVDmVGaXgL7KY7aTH46alUqIimZgLRGiTRDoTFwh5PMwH
      ljFqbYJqEX/hItVMFlHyYKmZsWUVyKkUapByWMiKCsVUlrRuJmuxYNUMwnVR6prr8Ie9VGtV
      JucXmU6nEGsmXGYHPotAwFrDL6o4rTqiV0EKaHgKOaTKIhgaNpOThJRiwWMgmZtYuShhSYhM
      ylkUqUrA78QSbCbrbCVnimFWzejpJLOJAl55jM6OLIX6ZaQLSYrFBcq5eVzOGl5LDU0V8RVl
      IqUa/nKWnFZh2jAzJTaQEgMIbg0kO2YhiiG6qZk8GGY7otmKaLYgmq1YEHEYOjYBqg4XmklH
      E2qIhoJDEQi5g4S8MXTDQjpfIFlOolHGY8TJyVnOZ9Nsyc5gzUUwV5x4a2lCIYNgVMOwZFEF
      DxX8LFY8yKqJakVGzcXJ5XPYg16CYTeaUUTV8iQrJhYrNhJlC+mqHU2qp6kuSltDkFK5zMR8
      lkRiHLtYIWYUiZirNAhlLKIFU82Gz+nCpTowm0GzaKQlFT1dxCemcZKgpFSJq0GqBDB3d4Pf
      TSF9gXxykJDZQZN/KyccLo7UTlMp1ehpupdt7e8BAcxlM/xfz/yY3T4vqpzj1dLzqOoGxFoM
      U1mgNVxiY12ZlXqOrC3KqLScuOrEnb2IkUlQ0J0U8gLFgkG2oFNEwOyw43baiNgtROxm/FYd
      j1XDb9Uw1zJos3MIU3M4fCEsq1agWipk518jlxyk5HBRcjUiFyzkNAuVnEi5qJPX3RRwULOp
      SGaFFnOOsJDCIxkIjjBWu4uSK08uaqKt5sU5VGFgNEVVVVFtfnrCIq1BC2lXHelAO2mnH6cp
      SZPfg8ndiiZYkHWR0fF5Zgtl/B6NgE1D18FkEqiWbMiagMOZxW+ksGQWMJdyVEWJspSnrBRQ
      TQKi30vRIeEtaQhqhpJdRrTb8NWqhDMJwskUQVlDlKJonjXYWjZCYQxtch+lSppHxE1UnatZ
      5jEx5QpjsnowWzQ0IYFGEq2UQqqo2BQJt8mC2RDwiXHMpXmMcpqqVmaxbGOx4iNRi5BR6lBl
      Bx6LiqsuTaNXoCfWTL0rjEOvIWlVrCYRVVMwtCwLpSlmS1YmMi4m824SeQ07acLWBULWJCG7
      iq9mYGhOrLoPyeTFgQW74MSuW6ioDtKaF0kzkHQdHZ2qScKQJAyTjkNOUjQyPOMcg2b/9RfA
      VCrBYHyeuakZjmb2EDUidOhu1toV6uwqyZKNATVMv9JEpgK1XBJ7IY+gSlg90BLwErPbaXI6
      8NtEBE+NpDlHVswh62UUs4Qoa+gyWGULkmrBqtewumPYkQmXRMyKSrWYoVarUEhexKLIGIaE
      KtrQTHY0wQIYCBgggiKKpCUbCbOVLC7GshI5VUCUZVxyiVpUwBzQaE7nWZWsETVDURTIZJLo
      So02twNfQwPqmh701vVohRkyk4MExQI+sYa1WEJLFlByJUyGTiFppVIQ0UQBk1eBgELFYqIm
      aeAt49XnqVNLLDp9jAWi2H1O3CYzbk3ALdsRqxZsNRPuqgVRkZBVJ1ZvFNliwxYIUMtnODQ5
      wdOKyj26xo2FEmeCJcaleZpVC2Gzg0GbjmEJozk70G2NyEINWZ6lUMwxV9bI5y3IOSuiAbZw
      GZ9TZnmuREMmQahSRBHncJhqBAUTiiDjjEYwecJIoU5qlTx6fg4lPYuar2BW7eiCi0F3mbNe
      gzqjB/FiE/OKgzmTmbxdQxLzRKwpArYiMXsZl16kJpZQzBYMKYBVDOCpqdhqFjI1D4sFiUKh
      hCznMHldeEIRnDHP9RdANp/n0OGTnLswiCTJVGUHWdVKweTHbLNRX56hOZfCr1gI2V1Egx7s
      IRdC0IksgMUMCT3BrFGjTAWzJmDTRBTNhC6KlEQrigiGWcQp6fhDzQQkCz5dxoYVk+hCTYyg
      zJ1EmT+NVCuRFtxMmiPkXK1UPK0EvQE6vG7MVYWJuSxjcxlkA3wW6Kh3U9NKYAiIugEG1DSD
      vAoFTSCra8SpkJN1rBUrtYKCrpTwixqrGgJ0rOomPjxAZXYChyBgM5sQQlXM9WW8TmizBBBz
      cwg2OxgO7DkVVVGZC0jEff9/e+8dJdd1Jnb+Xqicu6q7OudGB4AAmMBgkQpDSiKVrJFEaeKx
      j+31ju093rPrDeesd492vZ5jz5zRGWvmeDQejzyrkWaUJZKSSDCIFAhmBALd6Nxd1VVdsSvn
      evXC/tEIBEEiNUACQv3O6YNG4b3v3vdwv7r3u/cLMoJuR1jO4o+kcdZzSPYCkqOC1WFFs3gx
      RAclnwXZqdMyZIyWG8MSwOLoBlsAVXDw6vLrpDIh9mlRbLUWLb8VUXcj4UZuuLFKLsyCk5xq
      I5L3sFKVyZtlvGKVbmcNp0tECk5hkrtwVCN0NY7iryyiFw0kayfNTh8Jj8SWAwqigVaq4awa
      jAd3MTl4G1bRQC/n0EtZqOTZqDRQFYWgoWNR88jqFrKWQVMNWroDVfRTEtysqm42cZCominj
      RTScWFpFDH2TAUuaXR4Fl9ygZa0AFRCsODUFzJ1Yg/sR+h7cmQLUClusbKbwePwMD/RclQKs
      Rzf5/144SKi0xL0eE87AFKJtGnvuVezZX2Ku1pGw4vB0YnZ4URCpGCJNRCTBiiybUA0X+XyV
      StNEpmmm2ZLoMFqYdRFdM+EUdALUkQHR5sPs6USWVCTZQHI40ZBRVA1FEGhqLVLJHNmySqUO
      GgJOWcDjc+P0ukGSQGsg17cwqTkcVh1RV6iX0uh6A4QWgtgCsQFiE0FsgNyi7pXJB4dQLQKm
      VBFL0ke67MA19mGqCjRUgaYmUa6WKVaSICiIWgsJFd1tA7sJs6zgVfL0KTWCsgmvzYHTYcUt
      t3CbBCxCCd3IUW9VaapNzIoFmyIjNtLUlU1KokHN1E/F5EU0D2Lz25FNAspWEfFEFJ/ZQyMn
      kW+KpGUXMVc3CWeQOiV8epwhOc2QKcOQWMRvVNBNZgyXD9nsxyo6McwdFJ295Bwe8iYvOToo
      V8y4tAL9liwBI421lsfpdyKYZVRdANmOomvEqptEGym8ZhdmyU7LJGHQwBDOL1RuaDp6tYFR
      bmFuGDglGaNZRZIsFMx9LGvDrGl9ZIpNqBXwyxWcXh92nx+ny46lpWNVJBxBF1aHtDMFOHVq
      jul3FMo2ma4sz02+nOc/v/xD3I47CegCzkIcV7GEJkm0NNCbGkajjtGoI6gNBLGJIDeR5Qqy
      qYJobtGymNG0BqgV0JoYuoFICwEFBZmCakPDgt3mwdPRg9vfj8Plx+XowOXyU8jlSKSTpJIx
      Iok4ZbWJS6rjkqt4bQYmpwm5XkDUtO3kT5IFMCEYZkTJBmY3imGmKVhQZBsNkwswI2LGZnHT
      MmnUTRVa5uq2Qggg0kJK59gz9CHkDg9bzQSZegqtkMPfsuGtO/DVnThrTqqalQxmMoZBTquR
      08pUdJWartFUWzTUFg1NQNFEZMOMU5RxCAYW0cAuaThMGhZBxa6kcbTSWPUymGy4um+nY+Ju
      Qj9/ibhhZdPqoaIW6Ra3GLWXGbGXGLGXcVsFWiYrddFKXbLSMMu0dA1VB0WTaTVAqDSRq00s
      VQFLGSx1HXMLJMFE2dFBwdNF0ddFJdBL3eHD0+Gi22fD77HwVvQob4RmcZt7cOpBdAN0pbFd
      d9pqQ3ZYscgiFsDUMpCbOqKqIhkKgtFAFaq05Dqq3EIxK6imBmajgLuZxlouUijZyJbdZMpu
      spoPtWVj0GRiz13jO1OApfk5RqZ2szw/z549u9E07WzRuLfPBm//Xdf1s660uq4TzWYJRzPY
      ShkkxUBQRQRNQBRFJFFClERESbqqVCEGYKCgGzV0o3r6zxoGtbO/QxNEGUO0Iwp2RMFx+s+3
      /WBDEK5RrPPb+la2Fsi4UkiKiqNhw9q0UNN1SkYNRVBRaFGnRk2voBtXU4dMQDIsiLoVXTOh
      aiKiZkXQreiaREuTkHWwmSoEbSUC1gKGWaQuylQNjaquUdN1arqGxtUNE5tqxq6IWFo6Fk3H
      2TJha4kYDh9KRy+4BzAhISlN5EYNU7OO3KgjN2rIzTqmRg252UAwrrw+syFAyyKiWCUUq0jL
      KiKJLdB1kqqHdNO5MwXQlDpLq+t09WwfPX/Q6dHbtLlSPnAjuE2bD5JrmsbtzNLGMAx0/fKm
      rMu97kquvR4yDcO47JrAV3Lt9ejrlVx7vWR+UM9/pWPv2qRMO80ZN1xBEK5LgqzLTbt4PdIz
      XsnzXK9MblfyXNfjHXyQ7/9y5V7p2LumS6A2bW42rnsmW11VWF9bo6lq1CsFYskMAPVKiaa6
      PVXGo2GKlToAmtJgbW2dlqaDYVAoFHfUfrWUJxyNYxiwlYydbsegUNiOwdXUJuvroe32gHIh
      SySWxABq5QLhSIyr/4owSCc22coVMXSNSDhMS9MxdI1iqXy2f2faA4NkLEK2UMYwdDY3QmTy
      pR09fymfIRpPYRiQjEWo1JXTz7/9XlvNGuuhDbTTD1nIpoklt87u+WxtbV3l/s82zVqZ9VAE
      3TAoZFJkCtvPXSwWTidaDrO0tES1ub3fn9tKkkhnMQCt1aBcbVx127p2euy1NOqVIrHkFgD1
      aolmSye/lbz+CpDPF+gf6GPh1DxLqxHE2haJXInwyimyVY1YeAWLpwurSQQMTs0v0N/fw6lT
      C5QKWZZX16++cUOnWldxS3WWllfI1iC8uky5mGfhtNylxWX6+vu28yA1yoRiWTwWjbWNBJW6
      gtukEE7mr6r5VrOOZPWQ3FhneWkRV4efhcVl0skkG5ub6K0a65sZgn4fBpDcWEMze8jGQhQr
      dXxdvcRDq6hXOwINlboCRiXD6uoyTcnJ6vIihewWK6EwAIvLq/T3dmMYBo1imli+iVktEkkV
      yaWinJhf25ECFCs1ev0m5hdWCafKJCPrVCpF5haX0Q3oGRhG1BQEUaSWi5OqGIj1LWKZKvFE
      lPhm8qrbzueK9A/2nx57YaRGlniuxMbyKbYqKr7O7uuvAB6Pk1OzcwyNjGCyWvAHfJTLCgN9
      2+mzM/kC2USU+eV1MDQkkw2LxYZJBLcvgM+9g3JCgohZUtnYatDhFHH7OrDLMmZPB36PE9Ap
      5HOsLc0TTWZpVEq4O7rw+DtplstYJJ1wuspA8AoSVL0Nk8VGORvD6g3Q0sHrdiEaGsHePqwm
      iUalQLFU4uSJt6g1VUrlJp0BD10dbqpNg0I6SlXdwTQtyIh6jUJLRhJ0/F43FknC5e/C47QB
      GoVsluX5kySyFYrZIl29QTp7e6ik0yRydbr9rqttHQCHRWJuJcVI0IrVG8BtMqPbXAT9p9+p
      3qKuy9hNItlUgd7BIMGBPoqpLAODQ+yk3rjX6+TUyVmGRkeRLWYCnR2Uik0G+8+lbr/uCvDW
      kSOYHS4UpYVWrzC3HKHTZ2E1FGEjFKa7q4uGenr7VJCQUZg/NUdLMJHPpIhGo8RSmatr3FA5
      emwWu9WE2e4ltrZASdVp5LaIRqNE4xn8fh8GIqIoYvcGyMVXOX7kGJ5gJ0ePnsRhNdFotq6q
      +WouzupmDkHX6HDaODk7h8nmIh4NEY1GaWDDJoMobSegDXb7ODU7x3wogcusUa6rmCSDlnaV
      38Fag2MnFrHIAj6vl6WFUzQRKaQTRKNREukCHR1eELafP9DbTXjhFG++8RaB3k7MkkEstknp
      9PL0ajhy9Dgup42WyU15c4VktYFYKRKNRtmIxkll8gyNTwDQM9zL0lsnfNXe0AAAIABJREFU
      eeO1E/SOdLO+skI0GqHWVC/Ryrtzbuw1MZo1ZhfCBP22s2NP1Zo3phFsGDqbm3EGBvo/kPab
      1SKFBgT9nktffB1IJ2K4A91YTR/MmUolv0VTcuB32y998XWglE2hW71434fKOTekArRp837x
      /tc0bdPmBqKtAG1uadoK0OayKOXSzC+tXdLFIZ1OoeuXXlWnNpZ48rnDAGwlIqxtbJ+3NKtF
      ssUqSrVIrlS7qIx6KU+xpmAYLY4fmz37eaWQpdK4PMP5opXi27QB0JtFvvHNv8cuVJjbrKM1
      CrTKW9QNM0/+6LvUBAflXIKTs3P8+O++SbwEdqPEwZeOMdRp5/U3j9OSXThlhe/9/XexdnTx
      V3/6JwRGZhhwwt8+/gL1xBIVSzeDXQ6+98MnSEZWGZqY4IkffBfZ00186QjPHH6LsT43r75+
      nJZkp7pxnFDDzUDARiZTILJ8nMMn1ggdOciTh5a55/7bL+nr054B2lySei7B0O4D/MYjn6Ic
      22BhYYFEaJ5kvkr3wCivv3yIY68eYmT3HUztO8AXPvNxfv7UMwi5VV49Ps/KVouxvg5efOpp
      PvTpz3P4ueeZuft+/uHDHyKZzHHgo4/yuU/9BqvrYQTZznSPlbKlh9Cbz6I6e3jm6V+gSxbE
      4hpzy2HmE3XGB95W3MNoMTu7wPz8IgC7dk3xmce+wOXUk28rQJtL4giOkDp1mD/+w//IwN47
      2Iqs8NzhI+STYV47MktTNbB7gwx0egm6THz/iWfo6eqgZNgJusxM7JpEEARGR/v54be/hcV3
      rlrk8Pggh5/4G/6fr32Te+/au/1Zf5DO4AC9gyPEQ0uM7prijVcOkcwU0HWdyV2TnDkfe+rH
      3+HYQggAr8/LyvwC7kAnv/j+97kcJ4r2Nmiby6aWT7KUqHH7zOilL75CUhuLVOROxvr811z2
      xWgrQJtbmvYSqM0tTVsB2tzStBWgzS1NWwHa3NK0FaDNLU1bAdrc0lygAMVihYVIFvUd/hxa
      S+FnL80TKzQvKtAwdNY3M0Qz1UtcZ5DIVgDIFyqUm1ee+axQrFJrXXnGsDY3L8XSxcfn5ruM
      z1yhzOx6mrlwlkajSarYIBxNkamp5ytANBLn7w6v02g0yFRaZLIl5iNZNN3gpdcXyWomXFaJ
      rWzx7AAvFLY71DrdoadfnCVSVFjbSFBUoFyusRIvYgCJTJmtXIlYrkYmW+Rbz5xkJVGkWKpS
      UzTimTKxZJ5spUkolqXS3E61GNrMUKi10FoKiVyV5UiGRkvj4OE5XpyLU6xfXcRQm5uLzUic
      77z0tvGZOz0+DYPDbyySUU24LOePT4Ajb60SKW5H9bWaTbbKTcLRNFvl5vm+Qi8dj/KlRw8Q
      MG1X2H59No6uNPhJqo7fMJAlkXQizYvLeTxGk9odu/jF8yf5yB1DZMoKPR4LPpeF2WiWh+8a
      xa7X+MvnFtjTa2Mjr7CxtMrE5ACvz27yew9NnXuweAaf1cUvf3mCA3uHeOqpk3zyrkFeXMgw
      Ym/RtHsIH93gS/cP8te/3ODDIw5OJK8+TK/Nzcmh41Eee8f4NJQGP07W6Tw9PjPJNC8s5/HQ
      pH7nDLsCb/MIEgWUapXFpE7gzEdvb8BqFqmdXoroSoNjq2nC6QqFcoPegIv+bh+FfIlSrUlN
      M8hXFO6b7uLNhRi52raG3XvXFF/5B2M8+6sTzIWzpCpN4qUWtVodUTZz7+5+AnYTHq8Tv9fB
      RM+5sEOL3cY9kz30dHq4c1c3aCpriSJb2SKarlFuGoz0d3L7aABF1enucDI2EMBju6b5vdrc
      oNjMIrXG6fHZanJsNUUoXaFQadDjf8f4VA1yxYu7U4uSfL4CPHzfLn727HH+7tmTbGTr1BQN
      p+38dOdToz1YDA2L1YLfLhJJ1ZBFgbqy3bFXji7zxGtrqJKZwf5OhlwygijR23F+fKkoiui1
      Kk8di160k/dM91JvqgS8Tqzy+SkCBrrcPHVojmj+6nPHtLl5eOj+SX723OnxmalRU3Rc7xif
      k2PnxmfAdTqmWIDRgQB7BjsukHnWF8gwDI4sJa7/U1wHBoNugj7nB92NNteR6zU+285wbW5p
      2ucAbW5p2grQ5pamrQBtbmnaCtDmlqatAG1uadoK0OaWpq0AbW5p3tOHoFarYbfvLDvwlcsw
      2ErGcfi6yCYT9A4NciY/smEYaJklRP3i3qiXQtN0JGlnet+WcaEMURS53NJcQtfeK66jZhgG
      lUrlKnp3cc5TgHqlyFuvvYapZxSHrOO2WejoHkCtFahrMl1+D5nQIhs1Ab3Z4PbdE2ymcgwN
      9JFJxdFlO167Bdluo1GtEY/F6O/vx2K3Ua/U0JQaJQX6uzvJJaNEtkp0dgbx2iUKdQ2XrHL8
      1DJDnTGSNRu9Q+d3tvXa1xCK4R0/9NWUnG7LuHYyLL/9CxCuzH9LEARcLhdGq87KZoaJwS4y
      hQadp1PYK6U0a1kNpZxh397bLlvueapvc3oYHuhjdGICWnU8gSDh0AqhSIJCYhPlbWfGoiiy
      uLxKl9fK8toGiUyOcmqTzUiMBhAObScrSm7GUDEIh8KsrK5htZgBSGQK7L9tN71dXtYiceRm
      jopuZWR0lO4uPyPjY7QrDre5gEqS//c//CnF8hYvvX6K+fkFYuvzJJNxFsPb6RmvhPec+2SL
      DafNgigKbCVj1JoKugEIIqMTk9y5fw9vLx5ltVjREZAEA6XRoFrfXqoI6DQbdWrNFhOTU6wt
      L6EDbptMKl+h0XhvR7ZiqYjarFFtXF2Flja/nnz0Yw/wwi9fAgwWFhaIr8+TqV5dTMgF81DH
      wAiiDNa+AUBgoH+QnoCfQl3DKoLU3X/6LoGpyXE2UzkmRvp54/VXmZjZj89lYSOSYHp6EkkU
      sZolNjZTTE9N0GpUGBwdRwT6R6dIxiLUhA7GBnsp1DV6A27qTitmycAimGnWzx/40sSnEZWd
      VY3UdX3HdWzbMi6UcUX1eYWdtWdydWIpz1G2CuQjy6yUSnz8s8NXJeuaOMMZhkGj0cBms+1U
      1EXb0PIriLqyIzmariPt8D/8VpYh+GcQ3jGANU07bQRfnwLh15OrjiTRNZWnnz7IJx75BAtL
      Kwiqxq4BH8+eTPHwnf2spWBquIPZxVUmhzp57tV5Hn3oAQCOvP4yDpcHyealVd5ClM1IVjdK
      rcjEUJBXTkS4azJAui4iY2docDtfpPrWXyBUIjt+6GsRRXyryjA/+h2QLyfv8rXFMAyazZ3t
      AL4bO/r6GB3uYS0UP/eBINDjd5LIlM+7LhbPcudUH+nSuQdoNmpYzSYwO5ie2Y1SL2GRRGKp
      It1dHhLZGj2BHZRIbfNrh67r1/xnR7GEstWDoZRQdYkzcTmezl6KkWOYfBM06jUEUaZYyqFo
      LlqVKF3ucTwdAUYG+zm1EkVvNWjWK+hI9HQ5eHMpy10THRwP1Rm++WbUNtcZo1HgP//5n3PX
      Z/4ZeugFvJMPMDt7CrEUoaSIfPyzX6b/Cr44r1oBBFGir7cXiyxQqKlYJAHJKtNjkxHs+2kh
      EU9vMb1rlEajF4fdTqW6fZDhslsJbaaYmZ6EVo1IfIvd05OI6OybduHwONkje5DNNlr1EKmM
      SJffizT8cYRW6Wq7DNxYhuNNKUP8YOOvBauXT33sQ6QAA4NvfOO/8u/+3f/FGwd/SDZVxeUw
      X5m86x0Rpil1VNGCRb70S1aVOto7rtVVBUUXsZgktNxK+yT4KmUI7kEEy4V1j1VVRZZ3Nqjf
      DyPYMAzq9Tpqo8yzT/yQvHWcAXMMz/BdrKzH6HEZ1LIx5OH7+cj+kcuWe13U2dBbrCzOsxHP
      s2csSFZz0dPpxWuXiSayDA32obeahDcTjI0MUylmKTfBaZSoWPtwSQpKvUJDl+mwaaRrNgaC
      LtSjf45Q3thx/25G43OnMuR7/3ekvvuuQYsfPN0T++nGxNDQJHZ3J50eByZBIx0cZHrX5Q9+
      uE4KIIgmxibG0MQ0bgfkGzbSiU0SrSaD/d2EommGure/jQytRWgzhd8msKULbKyd5LaZKXS1
      xcqpU9x2157r0cU2NyEmkwmTqYMDBw6c97lrcBCAnquQef0XdIKAx+2i2shRLheJxkS8Xf3v
      eW2Hz029XiO3VaIn4EG9Fo4qbW56BEHAZDJd+sIrlXu9bABD16g1FKwyqKIFTWlglgU2okkG
      h4eQBQivr2B2duCxiZSb0Om1o4kWmrUKSr2CIVrweF3oxrYNoK49hdA+Cb4qGWL/hxDdAxd8
      frPYAGcw9Br/6Y++TmB8D7/7xU/x4lM/4dCRU9zz4MNUsgm+8Juff+cdfPsbf8Jdn/6n6ImT
      LGR0vvDIR87+63WbAQRRwmHfPhmWAORtt+ixsXNrtJHxybO/n8nqIwMWtxvc7vPkGYaB4Bnd
      8UmwoWmI0s7c7G4qGbIV0b9rR+3cSKj5BKFslX0f6QcEPvLJzxPNNfj4Awf4k//wf/PVf3uS
      Lz72CAeff5XR6Tv4/Cc/hGF2snzyGKJWRlDhB9/6L8S2inzskw9dGwXIxsNUBCfFrTh93d24
      A35i4TCdvQOYDIVEtsRgfy/NcoZwuoGpVSQ4PE46tknvwDAW2WB1aYFwfIu7D9xLvZjB5Q8i
      GhpWq5lGU8VmtdB6/U/b7tBXKEPwDmP51DeuQUs3Brq1i3//7/4t/+2//hUfuXc/b59zRqb2
      02XWWVpeY/y2O3CYtmdH0eTCaG5hcnSiqEXKmpmvfPpBXllLXJuIMH/PEPGFIwSHJikViui6
      iqqpnDg5y9JKiA67QCiawuryY9TStExOLIKGpjaZnVtAEGVGxyboHxhALyXRrF7WV5aJRWNo
      SoVoLH0tutnm1wABlSd/8Pfsu+fDZwf/3ttuA0FgenqKwV3TfOwTj1KNr+L0bLvQ3LZ3L7dN
      7WJm/51MT0/zkXv28tzxGJ/88P3XZgZolHP4BneRjKzjtshkImFsgV6s1bULuh/02ak7e4mG
      lgn0DlANvXduUF3XqFXKqO0SALc8hmGg6zqS1c1jv/17wLbtAbBn98zpAtrnlnpf/p3fP32N
      zu49M+cE+ScAGJrcB1wjI7hSLuNwuaiUy8iShMVqJhKJEejsxCzqZ5dAAtBq1tAlKyZaRGJp
      Ojv9OOx2DF2n1mjgsNlIxKLbSyCtTq5Up8Pn214CLf8Msdk2gq9IhtWLvOvT7/nPN4sRfOYg
      7FpzXXaBDF2l0dSx2a7sWPptEkint+jq6jr3iWGgZRYRtZ26Q2tI4s6Mz2shQ3f2Ijs7dyTj
      Wgzem1EB1heOUxJ8THcJnEyJ3D29vbuV3FjimRff4MOf/DRDQd+lBPLM07949yVQNLRCpalh
      c3jo8nuoV2t4fC4i0STDw4M0Gg0ETUeQBLK5LJ6OIA6riY31ZRbXIty+f4p0vEpnf5Bgh4uN
      SIyBwQEatSoNRUNtlJFsHuwWiVxmi0B3H2qrhc0komBCbOYpNQy63tGv1itfQyiGdvwybwQD
      Vrj33yDv+uQ16MkthmFwYjGEroeY9E5z8OfPs3BykN//8md58VeHOPDAJ/DZTTzx/W9RFHzs
      H3BybDVG7/A05kqU9XiGBz7xRYY8TVRL4N2N4GKtyUBPF/V6nY21BSqKxtLiMj3BDhaX14jG
      4iRDYZLJCDgChFZXEASB4ZFx+voG8PtcqMgUMkmWFxYIBHysrK7z5pGj2Ox2Wq0WJ06cILIR
      oqMzyNrqKuFQiEg4BKJIajNNsC/4fr/aNjcBhlrmyGuv8/rrR6mqcOCBj+Oxbi9ifvOLX2b9
      5MsceuUwkbSOXW2QKpR45AtfIR9fJVnRePjANMVGi2Yxg9Xjf3cFEHUVw+ykWS8jW50MvWMw
      6ppGuVwGBCwW+V2nPo/bjSSJKI0q6+EoFrOFnoEhzGKTQlXH47IjSCZMEgiijN9pItMQsMkC
      sklAVfV2THCbC0hHQvz2v/hf+Z//+WNspOv43DYCge2CR6+/8iuSuRqDIzP0+aGqCnR0BDCL
      Ap3BID6TxhPPHgYEbIF+alub724DGIZONBzC2RHEahKx2+3oapPw6SVQNhVHw4xQz5JQTEyN
      DGE1y2AYVGp1HDYzjaaOYajYLCZC4Qi9A4PomordaiURi2J2eNlKRjFZ7AwND6OUksSLEuND
      XWjNCiuRDD1BHw6LiaZhwm6RaS0+8WsTE2z03oupc2cHVLeqDXCVEvjVwSdY3szzld/9PVwW
      kWNvvL4zI7hVr4HFjuldxoKhq0RjKboDHjKlBr3BwAXXnEucZZBOpekMBs/u7VarVRyOc4EN
      N1NMsODsQ7Be3Ai7UQbvzaIA14sLnnxlZYmJiUlqtRo2m5VarYGq1CjWVAZ6AoRDYYJ9Q6C3
      qNVqBGw2lk7NoksW+geHqeZTOHxdhE+8gRYYYOXQS0ztv5tsOoFk8+C2SURiWwwN9mM1y7z8
      8ku4rGYCI7upFAuogolmOYfL331BZ2+WmGB5/79CGvzoNWilzbtRyCRoCHaCdp3ZzQp7J7Z3
      gRbm55membnovSeOHWP3HXdsD3zDeO+DsFg0xvjEABvhTWqNCgG7nVqXF1XTODE7h0mrMDS5
      H3QdBRO3TU1SSIRQzB2kV5fxd/TgnRjB1KgSdEssRqqwtY6g6wwO9rIWSTDa5wcDag0Vm0nl
      2LF5dk90Uxe9ZFZX2LPn4g/T5lbE4LnnnqeJjd/6+O3MriQht856ASrxRY4eOcInP/8YR55/
      nI6xO7C18pxaWMLl8eLsHMJrk6lnE/zo8ae44459FxrB5UKW5bUwIirRRAoDcHncmEWJdDJO
      3ZDxuW24/UE6fS4QRCySwdraGi1NpFbKI8qWC7q9sTxHvqqC1uClV97E5Trt/iaAP+ChkCsz
      ODSMWZI49dabKJjaRnCbCzD0FrF4msRmFBUwjBpvzsV59KP3IZlsfOTOcX71zC9YzBgc+uUz
      LCyv8tED06iuATaWZjk5O0s8tEipCe7OgZunSJ5hGKihp2+KmGCx+wCi5+KRSTfK+v1mswES
      C69wcL5Mp7pJYGQPq5kW9bXX8AzvR1KKfHj/IEc3NU688TL9E7sxa1U+fmAXr8TNZJaPoYs6
      H7pjmqef/xXjdzx0vgLorTor69trbI/TS0dfkHee5RqawupqCE8gSJff+54drVfKmOwuZBGy
      mSz+gP+iD2ZoLTY2k9jNAlUFhgb7Ed/2Pg3DQEsvIGg7iwm+1gogds0gvMuMdylulMF7synA
      tea8JxdNNiZ63cznLOiVNIvLRQKeDiwopPM1dk2Og1JCsHWRjYZpMYCSz+Lz+0kk0/T29dJS
      BQStiSyISA6NteUV0rkq+8wC4c0UfUPDVLNJWpIdQSmjy3aGB3pJRkK4g6NsxUIM9nQyt7DE
      3pnJ8zqrHPojhML6+/qCLoXly99FcPd+0N34ted9T4wlIDE6MUG1lGVpaRmtmmIttr0HH9tY
      pyVZKKVieLv6iSfTTE3tIhaNs5WOs5XNUsnmyCQ2cHSPEvC5t/ODTu8iFl4nmszS12ljbT3O
      +vIKLSBbU+iwb+ujzelFFtouoG3O572SW2maRjqdvqxEWO+87uJrgdNTmt/fgewM0BfYjurq
      Gxpl723TiCYbPrcdmyywsLCIxeVB0pvIVhcAVqeD6Noy2UIZu0VkYWERs92Fz9eBKFnxeu30
      ny6C4TBJ1FWDajHH4sI8Frub6GaURinLVrF2XV9sm5uLX/z47/juT5/CMHSW5+fIl6scevF5
      Fpe3VweNXIT/+Mdf49s//DkAla0IX//6n/H4wUO8fPglVhYXUFSdyPryhdugoquHPS6ADgAm
      JibfcUWA8e0gfCYntn2rRyam3vbv5y8HOm5/b5+e2++86+zvA0MDrIY2uOOuey64zsr2FCjP
      fA6hUXhPeZfDtbYBBItrR7LaXBmGYdAU7JjUGtn1Y3z7p4d57Eu/SSIeo5TOEBj+l7jNNgyl
      zkBvF7Wmxuyx1/js7/4Bwx0y3/7mX7KxorBZNVFef/165QXSaDRVrBaRekPHbn+nkWhQrdRw
      OGxkc0X8fh+yxcnUxPbWaCGbptIS6O8+311Y7N2z45NgrsFJsCC7kD2DO+tHm6uimlpidmEd
      u15haPo2ZoZ8HD12gv7hCTrNOroOi8dfY3T3Xp54/EnuvOtOhkbGePrpJ7lj7zQufzf33D7G
      q6txojnj+myDaq0q4WieoX4Hq+sVAl1OpFYLk9NCNJKgs8vP0TePc9c9B8hmcnS4LGRKDXZN
      jKGU06wmG4wNdKLUysTSOYZHx7GZJZov/S8I1feOIHu/EHsfwLTvX+1Ixo2yg3Oz7AKd8QWq
      FDIINh8Wo06hrpLajDA0PkWjWsIkgs0bwITK4uIy/f29yFY3NrNAcnODBlacVhmvy0ZZEcgn
      o9cvK0RicwOlbkUXA2TzBUy1GlbDQ1PXsTnc9Pf14/c4yWa2jWyn3cRGugt7bYtg3zQ2m0go
      HGZ6YpSFtQ2md41er662uUkwmUz4Os+kv7Jic0FP1+lVgvvtCXFN7N2377x7B0Ymzvu7Dejq
      8Fw/BejpHzo9A5Qp59LU8jWmh3qx5oskUhmURplssQIIdPg7EExWgl4bZs8gx+feotARwCzo
      zC8t4/Rd6BfU5tbiahNjpVJJgsHzx89WMoW/O4jI+5Ac91phGAbqxjM3xEkwzgHknnt3JOJG
      Wb7cLEugMxj5EP/DH36TXrfMP/rX/weN5DKB/nGMWo7NbJWp4W5SuRJmm5Py1iZP/fJl/rt/
      /NssrW4yMzNBMhrmRz96in/2P/4Ljj39vSufAZR6hVAkhr+rh4DPfYmrDbKZPP5Ax3mfZrJZ
      An4/xdwWyUyBvoEhnKfjh3WtRbFcQ9NUAv7zT48F98jOE2PtQAEE3wSCZEFVr64gW5trhGGg
      aBL51Vc4FqqivHaS/WMBfvazp/nUFx/jieeP8JsfGudYRKGpKPz0B9/D47azEdtkZXUDVTk3
      hq5YAUqpOF0juwifOo7TNMp6JM7A8Dj5VBQFE363g3whS7C7l0g0SlMRaDUrFOsaEyP9rK6s
      kq82Cfj9pLM5do2P89bJWQZ7ukgXqowN95MvFGm1mlgkiCXS9A2P47TKqCc+WHdo88f+HBxX
      k4K1zbWkf2SCYXOR9USRxVMLzOzew/GTC0yM9NFUWtz/4G/gtSaQTDqtlkq9nCNZrHPbjB9B
      lGi1TjtXCsJV2ACGztryEqomsriwiNXlYWl5hYDLRCSWROz04OwdIbYZZXJykrWlVZaWV3GY
      4HilzsTMFMbGdr6gVqPKwsI8stXJ0vIyLoeFUMxxNsBG01QMQyUaizE9NnSRTrW5ZXB28/C9
      e7B7/EyNDTEzPorN14NJ3UNNMfD6vGiCCZ9rF/dbF7Het48ev5u5hVV2zexmZHAdVbRhAmbu
      +vDVGcGCIKC1Wvh7AlTqKoP9QTZWVxFEEUGy4PU4UPISi0vLtJo6gQ4fstWBz2llbXkRRTnn
      3izJZur1Bn5/B4ZooSfgJJPbPuxKp9KIgnhNsji0ubkxDOP00lNm7969wLb9Mjh6JqzUxdtd
      M1VVZXhsfPteYPfuGcCgZ2DbS1drtbC7O24yI/gDdoeWRh5FMLtuGOPzRpFxc8QEvzvnPbmh
      KdQUELU6htmJ0Wqci8s1DDL5PIJh4Pf7qVeKRONpBoZHsJmv/AXWSxl0WwC7bJCMRTA5fG8z
      qg2y2Rz+dxrB3rEPxAi+nBjfNu8PRiXJH/3l9/A47Hzxi58lWWyxZ+zCehOPP/44n/vc59CV
      EnOrGfbODPPCLw8x3OVA8Y4y2b89ts4fuaJIeH0Ns0lDkJwozQoDPZ1EExlGJ3aRzeURdB2/
      308qnmZofITZYyeYGB4mU87T6e9kMxqjb2iUTCKMxdmBrDco1DXG+jtZWY/QOzhCs7RFbGON
      gX0fRc+HqQpeOkWDUm6LWCrD4OgYuXdRgA/KCJb3/gHS0EM7brfNNUBtkM6VMEsiajXD+qbC
      i098m2pN4fOPfZknnjyI1dXBQJeLw888Sff4GEuhHHtnhpl94yUWusb5J18Y4E//9D9hcrwj
      L5AgSAiChiCawWgiihILS0uItFheuTAjmyDKdNrtpDMpLN4g4ZUlRElgaWmRcqmMKMmUyyVE
      UWRpYQFO/1moKowMbjvNOQMDqIVNNpNbaLoGeovNWOL9eZltbkoOPPgw9052EdmqAjAwNsND
      9+9lZWmFD3/6ywQ9FvRqliMrKQY6zxUGDA5N4jc3icei7Lr7ITotFwTFC0hGA0PyYtTiSI4B
      An4dRRMZ7O0mlU6dvdLQFVaWllA0g6BkwuNzIXb6KVRbDA0NUM5tkUok6PY7iW2mCPR2Uq02
      GRoeIhkNEc5W6PdN0qxVMCQT9VqNlFpDECS2zRaIbkbpdNspGzYCbtt1f7FtbgKsXmrxF4i4
      O/nMrhE8ORWjacdtNuhzBHjhuadJFhQe+dj9PBRwEdlqMjMxCAjsvm03Y/0BwtkW5sIb9O+5
      s20EXw5i8G5E7zlfpBvF+LxRZLxfRvClIsKUSpYf/OTn7L/vY+wef486dO/gPRWgUq3idDjI
      ZDL4AwFqpTybyS36B4axW01kslk6AwGymQwdgQC1ShWH00GtXCCaSJ8+3bWQ3crg6wzQqlWR
      rHaUZgO7bfvbXFMVNjY26RsawmhWaQkWHBaB9dUQZqcHp8lgK18i2DeIx2FFy68iGjtMjKVp
      SJdZmkjwjiNIF8b73igD70aR8WsTE/x2QqEwe3ZPE1k6QZ17qeUz7JoY58TJOaZHu3nr5Bof
      /WiAWGSVYkOnlt9iz227SSW2GJkYZ/7EHPv27iaydoqqfjtiPoJzeIpUPMnk2AhgcGp2jsnd
      t2FoGpFoDFWQGB8MINv8DPYFWFlaYXJyOyDHMAzU2W+8r0aw6SNfR2if/N5YGAbHX32B2ViN
      3//SmboHBk//5Lt0jN/NgL1OUvVx+2Q/yyff4PCxJf7hF7/E0hst0nzBAAALlUlEQVS/pCB0
      8PB9u/nhD3/M7Q98Aq9YuvhBWCUdpiL5aYVX8DpklpdXcLi9rK5GCHoNViMZLC4/rUru7KAy
      NIXjR47S0dlNNbdJWXfSjK7T73xHU4aOaLJjMZswdJVUKoWii4wN+olthJBMOvVqkaWlJXr6
      h3BdEFTT5lakml7hrViLr3z6NwgvHucXz77EPQ88yM+ee4Xf6h3jiUNvMLTnbpjsw+7r5jfu
      aHDo0IsUKgJdxgI//PEa+z76aQ4ffBLZ0N4lJtgwiIRW0BCJFVo8eO9+XHYzyBYmJycZHx5A
      tru47fb70KtbAIwOdhOOJgEQJDO33TZNMZslmqnzwP134rWbzypIJhljYzMJgohJUFhcXCQe
      DTG6524O7Blmc6tK39AIAz3nqgPoN4eZ0uZ9QKmW8QW6sdlsVOoKd94+SShR47577yOg53AP
      7qac2wIEcvF1Dq+UefiuUWwuLz6Pg1yxgc/nxWISEWTzTWYEhw++r0awNPwIgvnCmN8bZe19
      o8h4X92hDY0ffedvyBpu9vU5WNyIMzRzL1oxyYP37eOvv/V9ukd38/lPfphv/eXXaYg27nrg
      IZZff5ay4ONLj9zDt777U6bvfIAuMX+hAjRrZcLRBN19AzhMEI4mGBoZxiSJ22nTN8L4uvrO
      LkkMTWFpOczE9C7OmZYGG6EwA8MjFLMZXP4A8nu8G8M4dxJskwWsLhfvZqIahoGWPLXzxFiX
      qK0rBncjmKwXlXGjDLwbRcavlRGciybp2zXB6okTgMGe3TPUG01MDhsr83N0j0wiCzrR8BpN
      w4TLKJAsSwTSCbZyZSYmdyGqNeotAQGdaHgRV3MGh1SjUKzSEeyhtBWnqQqMT07SyJw7CVaU
      Fma1wdpqGFdHFz1d58cRKM/9e8itXtcXYv39HyL42p6nNxrvW5G8Zq2GbLdTr1QwVAXZ7j7r
      63Nma/QMtVoNm1mioctoSh2bWULBjEVUaWgSNrNIo9FEN0DAwGazUa83AAOzLKCJFsyiTiZX
      ojPQQb1Ww2K3I/L22gHnXsA1mQEuldfzMmaAK9lKvVVkvJ/OcMVsiniuxvTEmfyrBnNHXqZp
      62W610Y4pzMz1kezVmI1kmJmcgJBMAivLlGstpicmcFq2n7mm8oGAHb8km+UCjFtGVfGGQVo
      VdJ842+f4K6772I06ODgC2/wsY/cx5987c/4nX/yz1l54wWmH/wM+yf6+el3v4Ug6vTf+Wnu
      HPPzN3/1l+zaNcRG3sKuToNQ7lKZ4W4gBEG4Jt8w1+I/qi3j2su4XArxEDN3f5T77tpPo9li
      fNDLm8sZ7r33PvxqgqZniFdeeBYw8HpcrG21sLayANRKOeYWQvT1BxHNDqqxuZtHAc6Q20qS
      K1au7CbDIBWPksmXMHSVjXAYVbvyiU9TFbL5IrqmshHeQNWvXEa9UmRjM45hGMSjG1de+8Aw
      2IyEKFUb6JpCeCOCdoX9KBUL6MZ20fLIZhzDgGJui63c5ddfa1RLNFo6hqYSWlujrqg0a2Wi
      8RTXc00RGNnD8qtP8s2//wnzs2+xHonB6ef39wxQiIcZGBkHA+KJJCa9zuzyxtn7JUkin8vy
      +quHyRbKN88SCKBVK7AUzWPUi0zv2/+eO0sX3NeoUGoKRNaXsVtkugeGiEST3DZzZUXq1pZP
      UawZOEwGPYODRDa32DM9ftn3G1qT2YUQUxPD5NMxWpYOsoko+/btvWwZqcgqujNIMrKGVRbp
      H+wnkiiye/Li9QjO0KyWOHFqnn133MvS3FsM9naQqQlUKnUsNBiZ2oNVvsT3oqawOHsU19Ad
      2PUydreH+VPziBj0BZzUrN0MBpyX/UyXw/Uygm+qGaBVK2Pz+HFbTNSvIE7SZHFQSm3g7gii
      GgIelxvhCn2KqoUUksOPRRZREXC7PKA3rrj/hVKR2RMnSOZKeL1epEsNtndgdzqJrq+gCyZ0
      QcTl7sBQq5d9v8XhJhjYDu4RZRPezgDVxCZWdwceq5Va6zIyXkhmBvp6QACPx8Xi7AkGRsaR
      TCYCnX5KuZ2d1bxn3y2Wa/5zUymAxRMgH1kmXVNxXMHWdTkTZS1ZxNBUPA4rs3OzWOxXFuGl
      I9Os5IklktgtZmbnTmJ1dlz6xrdhdnhxWSREUSIQ6GR5/iQ6V5bsqVarYbVa0Vst7BaZudkT
      ONxdl77xzP2lPJHIJhubMWRBY/atBbomp6kmQ8QKFdyWS/dHUxqshzYIh8KcPHYUweJEaTYQ
      NYW35lbo6b2wIuhOEQQBSZIu+lPYymCc/btIZitzyXtuqiVQmzZGq8qf/9lfYOkc4p/+1mc4
      tRRm98wUmfgGP/3uE3z5f/qXJObnGZ6c5kd//z1+6yu/yfxymJmZKQy1zP/5v32Vjs4OHvnt
      /x5LI3n9UiO2aXM9SK+dZPJDn+PjByZ4/Ht/i9PnIhyNsbq8itxs8uZzT1DHxbHFMABP/Oj7
      OL1OolmFj9+3bSfVmioep8BLz792cy2B2rTp6Bth9pVnOfz6UZq1IqdW4rjtIoYg0lJVVLXJ
      7OwpXO7tBAvNapGFtSQu5/bSLtg3xN27Bzn6ymGyhqO9BGpz81HIJIlla0yP9jJ7apGxqd0U
      khs0NRNDo/2szM3RNTiGWq8S6HAzN7/E2NRuHGaBuRMnwOpm99QYK4tLbQW4WpR6mc10idGh
      vh3J0VoN5ueXGBjbhdd5YdxzMpWiOxjg2LFZ7rhj/yXllfMZJIcX+9lUNQonT6wjGFVGxydQ
      dBmf235RGTci5xJjXVukr371q1+95lJvAY4dfpZfvHSCfdMDbCRKbG2GUFs1fvLEQYaG+jlx
      7E0SmSKvvXiQQsuMVSvyo8d/gc3dydrJV5iL5Bgb6uPgT/6OiuAAQWArfIpX3lqlw6Zz8Llf
      YggSX//aH2Px9eI0m9mKrfPcC78iEgmRLLQQa2l+9vxrDPX6eObpZ1hN5Jl98Sc8ezxMr1vi
      Jz87yND4MC//6ii9vX5WTxzmb37wPBabmWCwk4X5ZYLBTt58802OHTtGKpViaOjGdQRsNpuX
      VQjvSn7aCnBVGBw8+CxOWcEzOMNbR14nmd5i+eQxAgEXy+E0c8shHvnY/RQqDY4fP04qHueR
      hx/k6LHjHJtfp5gIM3n7Afq7Ojj04i8xuzy8fOg19HKGhtoisOtuQvE8AY+Nzz36MZ579hCV
      QpY7bh8nbwSJrx5n9uRJfJYW8YKCYQtS2VxhdLSPfQ8+itgooNfzbORbNIpV8pkoe3ZP4hnY
      z7CtyCtH5mjZOhntCxCPx5EkiQcffPCDfrEXRVVVDEPjye9/h1fm1kmtLdM/NXXeTk4jE+bN
      1SwDwQu3qB9//HGmpqbO+6y9C3QVKNUMLdHBvqk+5uZWEEoRHKP/gG6XyPxGhvvumUC2Omjk
      N3nljbcQzWbcVjPf//GTdA/vwSmpWHy9WESB+dVlJLOFUqlOp8dMU3TjsplwOBwYBgj1HC+8
      dgIAyWTBarVgs9kRRYH+7gCJYosDfgc5zUlDFPEF/Dz+4x8z7GqRL1fodZ9botk9Hbz6wx9z
      +7/+A45+9w/5N1999Oy/3Xfffe/7e7waihuzCL37+ccP3MbTP/oO3//2X+PqnMGtJTg6H+dj
      dw/wxIuLNOJT9N/+MEcP/RyX0GSrbsUqV/n2f/sLOsbuw1xa4/hyqm0DvF+ceO0FDr12jPs/
      +Rh3Tg18oH3ZWDzOS6cS/M4XHuVmCWE54wpRTa3w41cifPGT9/OrZ57hw595mGd+9iLNaoHU
      RoLH/tGjvDxfY9KShoEDHH3pGQRd5cuPfZmfPf0Un33kfp46OEe9miS1kWgrQJubgzMKYBgG
      J17/FQvJOndPjTA0Ocb68gbR1ZM0DDcPPfIgT//oR+y/5z5ee+0IwxO7GPSaePHNZfbum2Rm
      YoCVtQyR5SMogretAG1uDi4nMdbV0FaANrc07ZPgNrc0bQVoc0vz/wPuvLxvXd6FdAAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Raw Frequency Food Insights' width='192'>
      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
      nBJ6Afz/ApEM1mAiqVUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Raw Frequency Line Chart (filters)' width='192'>
      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
      /D/CZUZBbZlmtQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Raw frequency Line Chart (top 10)' width='192'>
      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
      iHMCkONrzf8HibZR2eGkGmEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Scatter V2 with filters' width='192'>
      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
      /wfNjMJORU+VVAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scatter across all years' width='192'>
      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
      pyn+Dpj42AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Storyboard V1' width='192'>
      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
      nIoSsFHVXVAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TCE Competitors MAP ' width='192'>
      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
      6v8DRrDzq7eFdIYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TCE Items Scatterplot ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z3BcV5ag+b2X3mcCSJiEdzQg6EFRpGgkkhLlpVKVqqe7unu2p6end8yP
      jZmI/d0RGxPREbuxMxETG9GmZrpnuqanuqpUKnlXJYlWNDAEPeE9EkgA6X2+9/ZHIpMgCYDI
      JAkmqfwiEAFk3vvOfQ/vXHPuuecIiqIoFCnyPUV83A0oUuRxsq4KIMtyTuUlSSLXAUqSpJzK
      y7L8yGUoipLXvT/K8utVp9BlrKsC5Pqi5TM7y0fGo27XesnIlfV6voUsQ51zzUWSsRA3bw1g
      dbqoc5UjAL65acamPFhLKmioqSAe9tI/vsCWjU3IspxzLyjLMoIgcOrUKQ4ePHjP95H5Cabj
      ZppdFq5evUV7exuyLK+pR5gaG8NZW8HZkz0IQoJDhw6tuV0XTnxBUFtOjTbMrXmFaqvAxj0H
      sazwNPNRgLXeR77l16tOocvIWwFu3bhBY9tObl7uoabSiUoUELVG2tvb6bxwkdrqcvr6BwnF
      0+VFUURRFARBWLMMQRAQBIGJgWt84pvD2bCdEk2YmtZtXOm+gDh/k89uJXnryE5+9rNf8fY/
      +wlV+hjdN0bY+sxhYvOjjA8O07yhjstDc8jRACaDnuoN29GkgriECgKBIIIQR05GuHCpj33P
      7ORyVxebd2/jN7/8lHdeO8SVUS/RmT6mF2Ls27+Xz749x+GjL/Grjz5j58HXiAR9KMDvPnmf
      qMrGy8ePollmbM3n3h9V+fWqU+gy8p4CxWQw69QYVCrii72b2WTkSvdFymoa8U4OYqlqQqMS
      ssIEQUAUxTX/ZOrYKup48+0fMd7Xw+zUOElZZHh4mObWjTx76Bg7dmxj9+4ODnRs4eS5S+x9
      di/nT33NtZ6L7Hz+FTQRDzsOvIbNYub1148zPTbC5MQEZNoV9/Pf/u5/0bqlHVEU0abmudzZ
      g2fez9X+PhSNCYejBCno5tpEhI49z3Ds+YO0b9vJ8aMHUAsCoeFzTAs1lAo+ro7NL3sfud77
      oyy/XnUKXka+CmDRqJgPxYikUmiVJMFQlGuXuqndtJ2mmnL8oSiBmTHGRkfxheP5igFAliSS
      8TCJlACyTCIRZXbOi1qrJR6LIUkgyylSkoyciDA5PUPLxs1Yy2upcVrSF1mtl9DbOdjRws3+
      UQAaWjbyuxMXeOf1Dj79vJtml0B3X4A9O9oQWH4qo9GbmZ0cRjCVUmEzPdD9Flk/VH/xF3/x
      F/lULCktZWK4n8q6ZgxaCAQTCCSZ83jwBqK0bNxIZUU5Tmc5JXYrkJ4Li+LadU6WZURRRC1H
      udhzg0NHX6KmsoTz5zvZ0NZO08Z25od6wVROjV1F32SAA89sZWBgmPrmjVRXlGGz2VDrDJgt
      NuxmA1a7HaPBSEWFE5vNjk5noKqqgpbN24l6ZylxOtEZzeg0Olo3tmMwqGlubCEVmCCgmGhp
      qqfMYcXhsGM0GnE4HOgNBhzVG3AIfrwxFZs2NKBR3b7PzPw/n3t/VOXXq06hyxDWcyNMkiRU
      KtWay6dSKVQqVU7zu1QqhVq99qWNJEnZ4fBRyciYWnO991xk5Fp+veoUuoyC3ghTFAW/308w
      GMzL1FWkyP0oaAUIBoNMTU0xPj5OJBJ53M0p8hRS0AqwdOqTq5mrSJG1kPc+wHpgNpuprq5G
      pVJhMBged3OKPIUUtAIIgoDVai32/kUeGQU9BXpQFEXB5/MxOTlJLBZ73M0pUoA81QqQSqVw
      u934/X5mZ2cfwhUlFhb8D+E6RQqFvKdANy93EU7KmB3VbGxygZzg6tUbpFJJdLYq9LKfQDhB
      Ag0dO7bwOCYxKpUKjUZDPB4nlUoxODiI0WiksrISQRBIJRNICmjUalKpJJKkoNFqQJZIpiQ0
      Gg2KLJGSFbQaDYIQ4fTpLo4eezZt01dkEikJrUaTdq5KpVBptKjE4pTtSSFvBQglFTp2d9DZ
      2Y3S5EIQtbRv287c5DDT4RSNG9qIBhe4fGscFAV50Sc+l/l8xosylz2Au71O6+rqSCaTzM3N
      EQqFiMfjOBwOJP8oP/u4C42Y4q3XDvPehycwJMLseueHXPr0A0rsWlLODry3TmKvbOLIi0cw
      amRGbl7m88gUjsYd+Ic6EbRGHPVbGbzwOZV1TcRUDt4+fmDZ+8jFGzZX79l8vW0fdZ1Cl/FQ
      p0BDN3pxh2BLax1zUyNc6Z9gx472O8osfakf1U8sFsv+LooiOp0Oq9WKSqXCbDajVqsZuNSD
      ZDQiRUJcOneGvW/+Ac/s2owUGsNa9ywvHXgGRRRpbqrD71sglpRRFGjYtI3X33id+alr9A9M
      IYgi7qkpymqaOf7Ki6iT0YdyD7k+q3ye7XrUKXQZeY8AJjV0dXViLnExM9qHzu7kSv8kjQ0C
      U7ML3Lp8hTJXPaNjU7Q21SIKAoqSmztA5gVe66ihKAput5twOIzNZqO6ujr7nc1my1qUBEFg
      w+49XPz4AiXV9ezYu4lf/OZ/og4vsP/3f4J3+Nd85hFJVR8gmZQQk2GCcZkys4h75Bbv/2ac
      1l0vYFIkEqKGjRuamRq6jkololar77nHfFwhHnX59apT6DKeKl8gWZbp7+9HkiS0Wi0tLS1r
      apMQD9A75Gb8ei8dx9/CN3aLoHsEGvaxt7Vi2XYVfYGeDhkFvQ+QK4IgUF5eTigUwuFwrL2i
      zoJd78F56BhVVj2C3YbOuofGuvJH19giBcFToQCpVIrJyUlkWaaioiK3lx9AEGls2ZD9s6q2
      8SG3sEih8lTsA4TDYcLhMNFolHA4/LibU+QJ4qkYAYxGIzqdDlmWMRgMKEp6B1gUxaIrRZFV
      eSoUQKPR0NiYnrbIsozP52N6ehoga/osUpgMDQ3R1NhIPB4DUY1GLRKJRLFYzAiCgKLIRKMx
      tDodKCBJKTQaNbFYAoNBjyyliESimC0WFEkimUygUmtIJlMYDHoAZmZmCIVClJeXY7Va75D/
      VCgA3D5uePfxuGLvX9hcu3YNoxLi665BGptbWBi5gqzRoy9p4sUDOzj39afMx9Vs2NLIB//9
      17Q+exBtaAx0FtTWappKYGBkHMVcTXT0EkZXLVcuXWeDy4Jr7zvsqLPg9XpRFIWFhYV7FOCp
      WAPcjdVqpba2lrq6OoxG4+NuzgORSqVIJBKso7V63RkeHOKFV99i384N9A+OIskic54pANyB
      JK+9+jIb6ito2NzBWy/tob9/HEmGOc80Y6NjxBIS01MTmBwVHDlyhE2bN3Ns/w4C4ThqtRqL
      xYJKpcJms90j+6kZAZYiCAIWi+VxN+OBSSQSDA8PI8sy1dXV9/ReTwNqtZqNbRv55IN/oqG1
      ja1trfjiMi0bWwForLDwq/feZ+vuNsxmEwJatrY340/JtLZsYOLqd4hGGxq1GrU6vc+iVqkQ
      RBG1mN70rK6uRlGWj0mV90aYlEqw4AtSUlKSdf5KxML4gjFKS0sQlRRzC34cJSWoFyMkFA/F
      53bvsViMsbExAJxOJ06n86G1ab3qFLqMvKdAvd1dRMI+rtwYSH8gJxgZmyIZ9dF7fZDLPV1E
      oyF6r97KV8T3HqPRSFlZGXa7Pfe9jSJrIu8pkKxSU1/fhKezGwUQRC2trc0MXOvFZq/GO+Ol
      rq4ez2w3kqLAYizGXAacTPlcRoB8YkQKgpCTN2E+0aGXOmHlIqOkpCT7WSqVemhtWq86hS7j
      AdYAAigKZF5OReZy53nKGtqodtronBkDRUEBREFAWBz+c3VaynUKBNwxHHqHunAbt7C5Ur9s
      2ZWmQGfPnmX//v3Zv6PT17kZq2Jno+MeGfcjnylQrjLyKb9edQpZRt4KUGE309XdTWVN86I3
      aDnzoSTC9CiKXI2r1EZXTw9lVXXrchhmaugaF68MYquoxWXX0ti6hSu93VRrfARFmSudpxkY
      m+XZI69QZTdw6cIp3HN+ogkZIRVnz7E38PZfpH/Sy5GXX2N+fp54YJYvvj2HubSaPVUpfNFS
      Oi9coKWhipPnerA6azm8b+djOexT5OGQ9xqgtnkTu3d3UFPhoLJ+Aw6bnSMvHGLbtm3UVJTi
      amhl967dNFSvvHB7eMic677Ja2+8gt8zxdjIECkZbt26vf6w2+yoVVG+/uYiAOPueY6+9CKp
      pMRrR7bQdb6X7v5ZDj6zid/97iwAKp0Rq1HLhbMniCVlvnr/f5EylaMzmLEYtJw9fYJU7qNv
      kQLiqdkHkGUJKRknEk2gyDLJZAx/YNEvKBXlROdNDh06gE5Iz6NFUYVKJaLRaBFFAUEQmZkY
      4vKNUZqaawG4+NsvcG3fR3ONEwWR3Xt2MzE8wrnffUXdzv00uMpWCJVb5EnhKdkHEDm4dwdf
      f3OahCyza8d2Tp84Sdu2nViqnNRpLOibK+i5PsnW9vQZgba2LQio2LJlE4Lezpa2SrbUqLk+
      7GazsxSrdguVJUa+OXOWqsbNmMureabMRmy6H6OjgUsXzlLXshlVcf7zRPPUHIi5cvEUQ5Oz
      1G/aw45NdTm1qVD3AQrN3l6o7fpeH4iRZZlQKERT2y7aO4x5mcSKfH954tcAPp+PiYkJRkdH
      iccfLBFHfsh4PPNrK6rIeObWWLbIuvDEK8DSDaxcZnOjbh9//WEXXX3TmdpEwyECgRCSnHar
      DUeixGMRfP4AsqIwMjBAUkoRjUYJBMOkxSU5e+ZctowspfD5/EiysujElnbnVWSJRDLJufMX
      Hur9F3kwnogpUGZHeLn1QElJCaIoEo/HSSaTa54L/tUHnVwfnePU5VH++j+8TswzwGfn+pAm
      Jznwh6/xy5/+nH0vvolTHWJ6egxN+W6iUzewqub56Vej1BujPPvKu9SXqnCPD9F1HqKqUlSB
      EbTWMrwxEV18gecPbOE//u1p/vyVVjzmDfdvWJF1peBHgGQyydDQEAMDA/fkCAiHw4yOjhKJ
      RPB6vUxMTBAMBtd03YqS9CGZEosetUpkdGCQw6+8RVtLegG9ff9RDu3ayODAAJFUnMmxqWzd
      Hc88R0d7M+FIOt6oq2EjR196jZh3iBgWjh49hhKZp7rMwpen+nlxbx3nhr1srCl9GI+kyEMk
      bwVQZIlIJIq8ZNqhKArJZBJI2+UjkQiS/GBGpkzPLsvyPed95+bm0tORQOCONqyFf/uDPfzH
      PzvC//WnL6BRizRsbOW3v/45Z7uvIQgiJpMJUAiFwwiiCp1GjUajQRDVaFQiokq96AUr4HMP
      894v/5Ga1r2UGBL8+tfvYSyrpa2tmaujc+xqa2Ri2o9Vr0Kr1T7Q8yjycMnbDNrbeQ6t0URS
      NLNtUyMgM3jzBlO+GAef3c2lrvOYLHZ8kSR7FqPD5WMGFUURt9uNJElUVlai0Wiy38/Pz+Px
      eDAYDNjtdhRFwWQy3VHmfmTMoPGAh6tD09zsvcqP/uQPWS0bQdEMWljteixm0KSgZntbezo2
      KI0IiDRv2kLkylUAtGoV0VgcjUaPoijZzNz5eESWl9+Oz7PUI9Jms2Eyme5YG0iStKrX5N1k
      vEFVBivljjD1b76OJpVitSuspzfooyq/XnUKXcaDLYIVWN4TTCYUldi2o4XLV26mPUJFMS+P
      yPuVv/v7XGQoikI0GkWj0aDT6alrWFs8oHxC92XCPOZSp9BCEBZqux5ERt4KUGLS0dXdRVll
      Q9obtKyO2dEBpqensTjKsBjU3LzZh85oScfjJL+U9pDbwfZcZMzPzzM7O4soijQ3N6956pTr
      fWR6/kd1H/mUX686hS4jbwVo2rR1yV9lADja2tnYthgNuqYy30uvG5mpUj7htYs8HTwR+wCP
      irKyMgRBQKfTFa0z31O+1wqgVquzSlCMH/T9pOA3wooUeZQUFaDI95qnSgEikQh+v39Vu7Df
      X8zyWOQ2T40CJJNJxsbGmJmZwePxrFju5MmTecv44IMPcq5z9oMPeBgJWos8Gp7KRfDdO66+
      qVu8/1UX9a0bCXjG+eijDwin9DQ7JAZmQuhtlRhC44z7I7z0zGb+5tNeju7djMcv8NIuJxfH
      BY7uquG706cx2Mqx4Wd0Pkxc1tJRmeL0pBbf2DU2tDaCuYat1Xqu3BpAba1hvOcC/WodzzWU
      c7qnD1IJXj5+mI8++QatWuTIwR18fOIqrRtaOXZgz2N6Yt9fnpoRQKPRUFdXR0VFxR2uEwB9
      l67x4o//gCP7d2N11vLGG29hUifovXYDo17H1MQYiqDh3T/6U1x2HbsOvMyR54+gjs1y+fow
      27dvRKW3sX3XLl56fh8TC1F+/MMfYlMnSCkqDh17jba2zbz++iuIqSizszMIag0T4xNs3NjO
      i6+8xOTEBK+99Q5Hdjbyu6++JqYyICQjzKeMOI0isVic4k7E+pO3AiRjIW7e6icpLTmQIqfw
      zC1kfx+4eZ05X+jBW7lGjEYjNpvtnm3xDdu38NWvfs7J85fu+Hxb22aSkkJbWxtqrQGdNv04
      0p6gcHBXPWcGIpSb0gOlQyfz6TffUW3X8ctfv48vqUGjvtd86na7F/2ToKahjC/e/wyXy8Un
      H77PNz1DPH/kMCYhhb2yjjKjGp3JhGdyclX/oyKPhlW9Qa/3XEBXWkdDTTmqu/xYzn93hvat
      bVzvn6Jj5xYEZIb6+vAE4+zdvZ2rPZ3Ub9qGqKQwLYYof2zBcRVl0W1bQBBYTLygZMuLKhVi
      +gvIui3AUO8JxqUGDu9qWLxMJuG1hCgubZcAdwVIWRrSMeNxKizKEJeEYsy2ZfHzVe8j1/su
      gDqFLmPVWq7aOi6c/45//G+XaNzSweuvvoTdpANApdViMjtAGlosLdK0YRPhRW/Q2bkZ5L7r
      yGoT29paUB5ibNCMC8NyN52Pp6YsSSj3KJlMXFPJ/i0193iXSpLMCl6AK8tYkrhjpanO0s8L
      0esynzqFLmNVBbh+6RzXBybZ+/zLbCoXee/z0/zpD48Cix2lkkIQlp9FmW1Otm3fQdeFi8iC
      gPohxQaNRqPZkOF1dXUYDPd67mcUQ1EUPB5PNj3OcqmSVguLsrlt04rtKsYGfTpkrFpLY6vi
      3/zbN4ktjDObNPMv3rkdqbihyklXz2XqWzbd4Q3q9/sYmZhhc3Mt3d09lLjqyO3fvjrRaDSr
      vfF4fFkFyJBKpZifn0dRFObm5oq5worcw4oKcKP7DD/927+jY+91Au4htr3yJ7RU3z7T6qxu
      wFndkP7Dlj7s7WhrZ+OSa+wqrXroDbZarUSj0ftmgckczTSZTEQikacyu0qRB2d5BVAUGjZu
      4+2332bbzj3odVrsdvs6Ny3dg09MTKBSqXC5XOkDDGo11dXVq9YLh8OMj48jCAL19fXZ4FnR
      aBS9Xk80GiUUCmG323OelhR5ulhBAWROfncBhx4++uB9APYde5PtLa71bBvBYDAbCSIcDq+5
      F4/FYlkrSzweZ25ujng8jt/vp6mpiYmJCVKpFOFwmLq6tYdRLPL0sbwCiCqOHzvKyd99yU/+
      5F9i0T2eDWOj0ZjO4ySKaDQaFhYWMBqN6PXLJ7tYDkEQUKvVxOPpjIFLF7zF3r/Iqm+2Kj7P
      f/4vf82+HRtpbd9NfeX65qnS6XQ0NzcjCALj4+OEw2HUajUVFRWrZoDPHG4RBAGNRkNNTQ2R
      SCS7YM6YYp/m1KNF1saqCrBhx340pW5kRUGrXv/eUlEUYrHYHabQVCrF5OQker0enU63bD2L
      xZJVnIwyZBbMS48+hsNh3G43VVUPf7Fe5MlgVQU49+0XnO2bxU6Yve9UUVW2vpaUcDjM1NQU
      giBQU1ODSqXC7/cjiuJ9IyyspBwZpchYiQKBABUVFTlFbCjy9LCqAnj9MQ7v6yA4O8yCP7xa
      0UdCxt6f2Q2uqqrCZrOh0WjWHMFBkqTsfkEmG2Q0Gs1+b7PZii//95jl//OKQjgU5NUf/pjd
      u3ZSXtvGsY6WdW5a2uZfUVGBy+UikUjQ399PMBhc8wF2SZIYHh5mZGSEmZkZIB2fqKysDL1e
      T01NDRUVFXdWkiXOX+hc9bpR3ywzvsiqZYLzo1wfcAMKFy7cPyK03z3Ez//pQ8LF/Abrygoj
      gML5k18x7b3dU5bPerHW335ZpESUyZkFXNUu1IuZ4hVZwh+MYLel59vRkI+UaMBiXH46cj8E
      QaCkpARBEBgaGkKSJPx+P+Xl5Wuy4CiKkvXjSSQS2WuWlZVRVpYO5XKvH4lC74VTuKcmeebw
      i/inBxkfnWTbjs1c7Oylon4zmyvURBWF7rPfMOWL8/yxY1w++zVB2cTRF/Zz+bsT9A/1U7H5
      KG1A/9VuZt3TbNp9gDJ1iFPne2nfcxC74Of0hcts3fMcnZ/+Gr+ulbX6GMmyTDKZRKvVFg/0
      PwDLjwCCyJFX3+GdN15CrwJLWQ3NNXf62Pd096DXQu/VW4t+kDLD/X3c6BsEQFFkervOMTL+
      cM5DORwO1Go1ZrOZ8fFxRkdH7xsCUaVSUVVVhcPhuLenX4VSVyOvvnyYU19/y9lvf0vT9j3Y
      rTb0GhVf//Yrwt5JxucCXOq9zoa2dsLjV/Cpqmg0hzlz5jtm5BKOPf9stncx2ss5/sordJ/9
      lt99+x1Hjx+n8+w3fH3iHMeOH+fi2ZNs27mbIy8ewaS6/3RMlmXGxsYYGhpaczTsIsuz6hrg
      lz/7H+x67Q/xXfqMzy9U8ua+JY4OGg3lFdWMjXctfiDStHFz1ht0vP8arubNBMK3vSHz8QbN
      OKtZLBYsFgs+n4/Z2bRS+f1+bDbbPXWWYjKZsv79yynMPZniZSmdbyASQhFVlFY3UV9u49Nf
      /5w9x97AMx9AkmUkWeHtd3/MxW8+RLHX0n2pj1hjJU31BkJxiITCJCU9qVQKQRSRknEkBUKe
      cb74/AtMjgqmrp3h8y++wFxSQSoVhyVxTVfzcJQkiVgslg3taDTmlxqq0D0110PGqgrQVF/N
      t198SnxhkmPbSu74TlEEUKTbmeKXIicYGp/BbFpgJqRhU2tNzt6gqVQKv9+P1+tFpVJRX1+P
      RqPBbDbj9XqRZRmdTrfseYH7eQbePX24wxtUESmzqPn23DVePn6E2ckR1Go1+/ft5dy576hu
      bMVc5qRJtDB8qwvJ2sDzhw9h14osxKBxSwexi2e4Oa7Q2r4RtVpNQ6WDr353khdefBlDYp7T
      nVdwVbnY3/Z7nOm6iqvKRaVdhWg13tH2le5DpVJRUVFBMBjEbrdnyxW9QXOXseKBmGQsyIlv
      vkXSl7Jvzw4sJuMd7/rUaD/TcwFcDa0IIXfWG9Ttmae+eRMNNRUkIl7cPok61+359loVYGpq
      Cp/Pl/27pqYma8tPJpMMDw8jyzJVVVV3+Cnd73CEoiiMjY0RDocpKSnB6XQWs0Q+wjqFLmPF
      Wl9/8HPkmj2Mnv2Q5m27sd7lSeyqb8VVv/hHaXp/4G5vUK3RQZ0xp3ZlyfTqmelPIpGgr68P
      q9WKzWbLDmGxWGzFayiKgt/vJxwOU1pail6vR5blbJ27M85IkkQ4HEan0624j1Dk6WLFbs8b
      CDDWf4M53wIfvvdL+sZXDjXyKCgvL6eyspKGhgZqamoIBAJZK5BWq6WsrAyr1UpJScmK10il
      Urjdbvx+f3bdIIoiFRUVWCyWexbGMzMz2YyThZ5uVZZl4vF4dk01O3qTL745Ry6t7rt1846/
      lXiIuUB0hdL3Mjc3l4O0wmTFEeDN3/8zQpEYkD4BZrbaVir6SFCpVFit1uy0weFw4PF4sofe
      7478sNI1NBoN8Xg826MLgoDdbs9Om5a+6JmFcGbKUqhkrECRSITq6mrMWvjpf/9H9h55E/f0
      FD73FA1t27j03Unq2vZgEaOMjo2T1NjZ3d7MlYtnSJmrmei7gX9uBtfGXdRXOrh55gP+7kKI
      //2Pf4QmPM3QXIIDz+5k9OYlBtwRnj+0j9EblxjzpmhrKOP//S9/zY//+F+xZ2vr434kebPi
      CGA0WykvL8/+GPWPN3qyw+Fgw4YNVFRUrNnuLYoiDQ0NNDU1rUlhMiFVamtr81pUrRcZHylI
      r4dUBhs7dj/D8eef5fP3/gGfbKb3248pad3Fyd9+yvCVcwQ1Fbj7LnO1+yQhYx1NrhLCfi8t
      O56l8+w3AGzYsJHd+1+gxhDi1PU5Whwpvj5/A43BQqno4+uLNzlxrpu21npKqprYtWvXE/3y
      w33CotzsPMH/83//Jb/85a+4cGt6taIPnWg0ysTEBHNzcw/UG6tUKvR6/ZqURqPRUFZWljWb
      FiqiKFJZWZk1DS+lvL6N/bs3seCZo/fiGdQ6K7LWQF11JQatFl8oQnVlBXa7HXNJBU6bCW3G
      rWTxGSVCPkoqq3FWVBIOTnPy2wugUpOIx3nphQOc+vq3THrX3zXmUbCqApw+c4HXXzlKOOxn
      fGZhvdoEpOeXkUiEubm5rOPa00AkEmFwcJDJycm8FTszjautrc1O7TIerVVVVQjAgWMvopYS
      mKxWSksrMGpFyquq2Nmxj56TH3Pi/CUqKyvvqCtWbkIYv8isWIXac5UPv+7iub3PUmLTMOUJ
      UF5q4dbNPtRGKw6zDqdVy8Ur/Q/+UB4jq8YF8rqH+fVvPkU2lvPPfvwDLPoHmxbkYgZdWFhg
      ZmYGvV5PfX39ms2UuZrEVosK8bBkLDWDTk5OZgP0NjU1rXi4pxDNjYXargeRsep/fbi/D3RG
      lOg8P/+fP2PME1it+EPF4XDQ2NhIVVXVU5W+yGKxoFKpMBqNxaw0BcCqCtB16RrH3/wh+zZV
      YrIY+cVHv1uvdiEIQnbDa3BwkHg8vm6yc0VRFJKptbl5WCwWWltbcxrVijw6Vv0PPP/cLv7h
      p3/DhyevsbGpjg2NtdnvQl4Pl69cJRhNZD+LhHyMjE8BEPDOcuXyFdxzvnuuuxbi8TgejwdF
      UZAkKevNWWjIssLffNTNn/zlB3x4pu++5TPTraIHZ2GwqgIYbJXs3LmdZ/bsoLR2E2++0JH9
      7tqtATZtaOTm9RtZb1CfL8TCfHpzJCkJbNrUwmB/P/ks9TweT9bU53A4VrTMyMtyTbsAACAA
      SURBVLJMJBIhGo0+Ftt9Iilx5soYwUiCk72jj0zOjRs3Vm6Db4qBqfw6mu87q64cPv7kU2o3
      bafckKR30E1DxW2fG5VGg1ZnRFAyHpYirpoa5r3pf4RRK3D+4iW27tgFipL2oMzBG9RisRCN
      RrMbYiulMl1YWMjuSFZVVWE05uZ7cY836BpYunmmUsH/8e5eLt6c5tjuhmU9TpfLFP/ZB/9E
      XFLRsn0/ptg03X2jNGzcSaUuQueVPpz1m2l36fnydBdNm3dx/sv3uH6lhdZdh1A8N7k+Osve
      Q8cZu9nNzNBljFveoMVlp6/3PFcGxtm69wUM4XEu3BjFbK9g3xYXX57oRNSaefPNl1BT+J6a
      6yFjVQXo2LWT8vpGvv7qG158u/aO71RyivGxETQGG96ZCbS2ChIhH36/H38wTG9nDxvatyMl
      4yDostaftVqBMm7Ok5OTjI2N0djYuKzFZOnqf3p6GpfLlVMQr3ysQHfL3bXBxa4NK8dMWtYZ
      TmvlR6+/wvsffIaUivN7777Lr37xSxoPPIPBYOBS90UWRs288+7voRVhZnQ7b7z+HB99fJ3p
      8WscOXqY0ydO8vKxdp5pLeXUjAq1WuC7i1c4dOQwZ86cwmYQefeHb/PJx19w9vwsP3j3Xb75
      9GPEJU5gheypuR4yVv2vR/1zDLgj/OSP/pBK+50xOLft3IlOb6F9czMmawk6tYgkyTQ3NyHL
      Mtu270CRpAey4GTs/0tPdt2Nw+HA6XRm/77fIZml156bm1vVme5Rkkomifg9KGoTSiJGKBwm
      IQl8e+Iszx3Yj0mnwWZQ4fGHCAQWcywsrhsUKUk4JtPevom5UBLvwjySvBj+XUkQiiVoa9tM
      KhEjFg2z4A+jEVIEwlHm5r2P5X4LlVXVRmc2c7XzBEO9Z9n7wmtsbb4dPkSl1lFevhgq3ZCe
      djjvcC6z8KDBFDNTH5VKteIaQBAESktLEUURWZbXHD1uamqKcDiMSqWipSW/887DF74m3vwc
      m0pz9xz1zoxyqrOU4y8eQoh5OXXqDMdeeRVVZJYL3dc58Nw+WuqrOH3yFLWbd7Nz507AxM6d
      G3iuo4ZzPTfZufc5glP9jIQNbG0pBUR+9KMfcvpiL1t372eDy8qpU9+h0mp5/tghTp4+RUxR
      PT1pgR4Cq26EjVy7yAdfnqSxeQP1W/eyvfH+/jSr8SAJMjKhDA0Gw6r286WbIpF4kmRSwmrS
      3WN1GR8fJxgMolaraW5uXrZdp776iBlfjI5DL+Ed6mZofJatz73I+JUTzPpltrssKJsPs6VM
      R++5bxieCaC1lOPQJZgam6Tjuf2c++48WlMpDaVqKtuexXPjPFVbn2N25BZbtmxZ032s9Vnd
      Xf7mpfP0jbrZsH0vNsXLxSv9VNRvZO/2jXnJeFjtKiQZq3YGX371Da+98gKBwAJ9o4831+H0
      9HR2PSBJEtPT04yOjq64P+ANRvkP/9+X/Jv/9Ak9/e57vq+qqsLlclFbW7uCSTLAd+dvUmpR
      c+JMJ7ICGiVKz9UBRsamefudH6DL6kyKoekQb715HCkcYnJ4kAOv/oCp6xdQ9DZm+joxOKs4
      f76Xwal5Sk3qVV/+h8WmHXt586232NRQSVXjZt58883sy18kzaoK8Nbbr/PFF98wF1Q4umf9
      vf6WLkztdjsulwun04kkSRgMBmw224prjLEZP1NzQULRJL2DM/d8r1arsdvtq4wmBiqqSmnc
      uJV9O5u5NTxL+4YGAJyV1Rg0Sx+dinjEh2dmmvlAGL3dSbnVQHlFJTZHGftfOIarugV5vhe9
      va44BSkgVh03BgYGcda0sHP3bqz6tQWiWhOKjM8fxGazLXukeDlMJlN2gZtMJrOBsVYKkLW5
      3smLHU3M+SO8/ExzHo3U8IO3Xqb35ig7dndw6Nlt+FNqju6tRIqnj8K5tnQgGzWAwNEXDnKz
      fxiT2cyzz+4AoHnnAZK93cQ0dkxaMGtMbNu3K4+2FHlUrLoGUBSFoetd/O3f/JTDP/n3vPLM
      hgcSllkDxPzT/P0/fsYf/Is/hlgYs9VGJODHYDExOjhEeW0jYipGIh5D1hgJeiZRmUqprihl
      fmaCqTkf1dX1pCILhFJqmutv5wt4XM5wfVcu0jfmoWP/YSoddy7YZVkmtDDN1eEF9u/ZmreM
      h1l+veoUuoxVFeDsbz9kLCCw79lnqa4oRb2GmDWrkVGAWz3nUJktLCQsmKOj2Jo76Os+S4lZ
      RcLgZHZ6BpdZ5OZ0hAPP7WB2YpKx4VEOHX+O785ep8acJG7bwOTAFVx2DfaN+9nosjE1NUU0
      GqWysnLN6ZDW2xv0UckoKsBDXwQrbH/mIM0VJj77zS+4MnTvQjIfFEWmb6Cf6zcHGOi7TlNr
      C8M3elAZy5h3TzMxOkQokkBQGTj0/GHU0QWGx6YJBRbwLHhobttOY3UVyUSU2dl5ZgJhopEQ
      iqIQDAZJJBJ3RJNYvS0KvlCMWKKYoff7yooK8M1v/oG//of3iAUXCFma2Nn6cLLDyMkgFU0d
      vPnGW2yqsKBYKvBPDNO8eSMbtrQjIuAsd6LWaVGJoBLVyHIKnd6EvbKe/u5TnLjQg7WkkpY6
      JxqtiTKbBUEQMBqNWdeJtXDmyjj/7j9/zv/5V78lHCtMZ7sij5YVx432PQeYi57h6o0+poMG
      3N6DVDpuTyumRweYmvPjamilqtQKKMxMjOIOJNne1opncpixGS8V1Y3UVNxOrCFqrHTsTL+g
      O5/dB4LIKz/6/bQp0tZOZcNmRFEklUySSKUQy+t45wcti59FKCsrZd4jU1nuoL3hVWRZye4V
      1NbW5jQc9g7OEIknicwmmZoL0VqzcoSJIk8nK74pzuom3v39pnSu3al743BOzHrZ07GLi129
      VJbuQkDBZHMieocBGJmaY0/Hbjq7eqiu2I0ARONRktLajzdKkoRKFIlLcWLRGPF4DLvTQVVj
      I2rJiz987wAmpVKo1qgAB7Y66RufoKbMSokFvMG1uQnkIgNAkWUUBcQc1lC5ysi1/HrVKXQZ
      960lCALlmXSoSz8XAUGFkHV2FjFbTHd9LyIAsqKALONemGJqYWptLVQWk90h8tF3/QTCUZ7b
      WIbNpEEUBBAESktK0erutOMvzci+Ft45ZAcBro1eXnOdeCxGZDEm51oCaCmKAgoI4trPAOR6
      H7mWX686hS5jTWozN3yZGwEzB7c33f4wlWJh3o2oNRGYn0FjKUOUEsTjceKJJKIkseCdQ1Hp
      EAUBQaWisaqZlpq1mVI9Hg8ej4e+qRATs+n8xPFkOTsbXdnNr6qqKqxWK3Nzc2g0GhwOB5Ik
      PXIz6NDQELFYDI1GQ0tLy30PtxStQIUrY9Vac+4J5nwhQEulWSQpyWgWh/EdO7czPjXHti0b
      SESCqAQZt3sKm83KvC/Ajl07GB13s21r2xoj3t9JxsWhwq6jssREOJbk8O5NNDWUZaO8WSwW
      FhYWmJ+fB0Cv16/LOdtilsmnh1X3Af7HX/0nHI1bWRjsYSooU7V5P//bmwfzFpaLM1w8Hsft
      dhOJRFBrDTjLK7CZ743v4/P5snnEmpqassm0c2lTriNALBYjHo9jNBrXlKqpOAIUroxVa5Va
      DMyH4kjJJFvatzHi9eck5EHQ6XQYjUbC4TDJeARRSSIIhmxUtMyLa7PZsmHSNRrNusT0VKvV
      OeUqLlK4rKoA+158iyn3LNqd26h3lZCQ1nfINxgMqFQqJEnC5/NhNBqJxWKMjY3dUcZqtZJM
      JpFlmZKSkpx7g8HBQVpbV3f2i/im+fb8DY4cPXLHQxsYGLjveYKBgQGam/PxRyryqFl13J+Z
      HOHixYucPf0tU74EFtP69np6vT4bvSwUCuH1eu8xx0ajUWZmZlhYWMDn8+WVMuhqzwVOnjxN
      KJ5Cioc4dfI04XiKZMTHyVPfEUvG+Ke/+q8EVWoEQFEkLl04w9CEh2tXLnHu9EkWQnGSsSCn
      Tp0hkpCIh7ycOn2OeErm5s2bICWYdD/50ZSfNlbtKq02OyaDFs9CgED48Rwd1Ov1qFQqZFlG
      r9djMpmQFlMJxeNxQqFQtqwgCHnF9ff6wxx+oZ4PPvwcfXKB544d5ZNPv0IJzfD8i8/zyedn
      ad3QRv3BvWhVcO6rzzC17MWiVzHnnmbfwWc58c0Z5NAE+184wseffoUScnP46GE++fwkJGJ8
      /vGHbD/8+sN8NEUeAqsqQEpRcfS1H6KRI6RUeWa6eEC0Wi3Nzc3IsoxGo8kegYS0fd3j8WSj
      QtTW1uY1Ny+rqMRRWoVW6MQzO83F893oTTZGBya4cPEKRnMpmpAGnU6HAMyGJF5uqEQnCpTX
      NFBeVoaaG4y7J+m82IPRZGeob4yLnVcxWZzMz3mZT2o5bCmuGwqNFRXA55ni6uVLjIy8x7BP
      5N/96z+nZH0TxWdRq9XZxa9Op8tabDL5vTLkG2lNLUX4zfvvs2nHc2ibKrg25qG8pJSGQwcY
      nPZTUVKG1SCSMbAe3Lud37z3Hk2bti8eyBdxOktpcR3ixriHytJSag8eZGjWT2VpGVbdNtpb
      XJy70MuxA8XzAIXEimbQL37xN1yeVfNKRw1fDsj8+z98+YGF5WIGDQaDuN1ujEYjLpeL6elp
      fD4fBoPhjrCCkiSxsLCQPeG1HhthRXfowmrXI3GHPv7jP+Nf/t7LuOfDMHudSwNrdGF4SPh8
      PpLJJIFAgEQikd0Yi0ajd+QMUKlUOJ1OHA5HMdxgkZxZdSMsQyaq2dJesv9aD4FYCmtZLa31
      lYBMb+dFEjLUNLcRmB4klgJRb2HrprQJMJcRwOv1Mj09jV6vp6GhgXg8zsTERDZW0EqhxQs9
      PPqjklEcAR7BRliGu+faAP6oRMfuDjq7ulHqK5HDC6SMFXS0ltN9bQSScRqbWxgcmcj21pmE
      2Wshk8ExkUiQSqXQ6XSUlpbidrvTDVerl71WLjIy5YGc6+RaPp86j7L8etUpdBn5Z7wQFn9u
      XzHdiwoCiiKjU4uLc3MNChmX4DvjY65GpkeWZZlQKJRNj2oymbLRlZe7Vi4yMuVzJVcZmX9O
      ru16lOXXq06hy8hbAfSiTE9PN0Z7OTOj/eiddaS8fXT3TOOsbWVu+DqKOkosroAg5BwbdKmP
      jdvtRq/XZ098ZQiFQng8HkwmUzbhda5TDSDnKVCuMvJp16Muv151Cl1G3gqwZcceZFlBXOLj
      3vHsPmQFREGkruK5rM91PkvTaPTOfLXLafj8/DzRaJRYLIbD4ViTY1qRIkvJO8yDIAioVGJ2
      fZD+EVGJIunzKkL2qGI+OBwORFHEZDJRW1uL0WhMb3z5woSjCWZmZojFYgiCgMlkWrEHkGWZ
      RCJxjwL19/Utm7dAkSX6BwaXvdbsxCC+SPEA/dNEwSbDDQaDyLJMNBrF6/UyPz9P32yC//pp
      L3aTjn/1YiMGrQqbzYbL5VpW0TIJpaPRKGVlZTidTuRUnHNnTnOpb5KGuipOnTpDQ1sHLquI
      NxghEFMY6Oun0m5CMpZgN2qZHR/g2qgXh7iAb2wBs8VGx9ZWbvZeJKGvYNvGeiYGrzMyn+K5
      Z7blNeIVeTwUbJS+pdaZUChEJBLh4rVRYgkJtzdCIJp2ew4EAkxPTy87RZIkKZs5JmNV+ubT
      j6ht30NFiYlkIkFd80Z++/knzA318Pfvn6C8rAT/3CSfnriASachEZjhdxf62LmpkWQiiqQr
      Yfx6L4PXzzMesxAducj5nh7O3Zqnramapyed3/eDglWAioqKbJKMDAfbnLTX23nn0GYOdLRj
      MKTPB/j9/mVzCavVasrLyzGbzdkcAiFZTU2pFZ1Wy/XuiwxNTBKNJ0Gl5eVXX8Vm1LLgmUJR
      GVCJAvFIgNLKWuxlZei1BprrazDqtMz5A9TWVNNQX8XI4BhVdfWUlJVSPCP2ZFGwCpDZ4S0p
      KcHpdKLVaimzaPmjww384YvtRCLpTOWiKGK1WpddAGcc5+rq6rKpk7ZtqOa99z8kEIey8jJ8
      c3NYbQ70lhKsRg0IAnsPv8qOWgNDbh/m8kbUgWE++vBLNA4nBq1IWXk5bds6uP7dF5y67uXN
      N48TGOrkky9PUFwhPFmsaSf4YZFPfoB4PI4oivj9frxeL0ajkfLycoaH0+FXSktLKS8vz64B
      ijvBa6fQd2nXQ0bBLoIhbefPnPctLy+nqakJjUZDKpXK2tYzZlCDwXD/CxYpchcFOwVaunBV
      FIXpaTdXB6eJJyU0Gk02aV4kEmFsbAyfz3fPQjiZTBKLxR5L+tQiTwYFOwJ4PJ47gty+d26C
      7iEvLdUl/OWfH0Wv16PT6bIH5KemptBqtdmwKIlEgqGhIWRZxuVyIYpi1r26urq66DlaBHgA
      BRi+dZWFUIySygYaq8sAmeu9PUQSEnWtWxAjHsZn/ZSWu6hzOe97vbvJZIYXBAGn00kgnj4I
      P+sLk0zJaNQqKioqEEURr9d7zzw+lUplfXAy7tSpVIpAIIDT6czr6GSRp4+8FWAuGGXP7nTs
      z4bqMpSIl6jawa7NFfTcGEOKLmC22LHaLHd4g651OpLx7TGZTNhsNv7123v49TdXObijEYNO
      nV1UVlZWYrFYUKvV6HS6bDJug8FAeXk5qVSKkpISotEo0cVwhlqt9p525ONMlSuPWsZ6tCmf
      OoUsI28FEBbjc2aQZQlRrUYQRRRZJhKNs7NjAxfPd/HM/r0IK2R6XwmVSkVZWVk6S83QEMlE
      gtd3OdHpkiSTyTt6+8y5gFQqxezsLMFgEIfDkT07DOnwKU1N6dCOS2MHZTLF5zIlyjX20HKZ
      4h+2jPXIyJ5PnUKXkbcCaJHo67uBzlzC3OQIupIqkgtD3EwuUFJejVkVZ3hkFLXegCgIiDl6
      g2aIRCJ3ZIJMJpMIgrCs2SuzayzLMoFAgIo78hYvz8PIFH8/8jGD5iojn/LrVaeQZeStAO07
      dhOOxDCZTcipJIJKw66OXUTjKcwmI7hKCQVDNDWaH8jUdPeoIcsyIyMj2TCIS8lEivP7/ZSU
      FGP9F7k/eSuAqFJjsaQTZoiaxXgJohZL5ndELGvM1LIaFoslGwtIFEUikQjJZHoatJwClJWV
      ZYNp3Y/r3d+RMlfRUFmG1XpXTjE5RTCSwGJ+POFgiqwPBbsPkEEURerr62lqaqKqqgqLxUJZ
      WVnWiqMoCslk8p6IcXcTjUYZGxvD4/GgKArz7nE+/PIEFqOGiYlpFFni1rVe+oYnFmskmJj0
      EA0u0NXZRSCaIOhbYODWdSZnPFzpvUykmFvsiafgFQDSZsxYLIZKpcra/zOEQiEGBgbSC+Vl
      HOIyzM3NEQqFmJubI5FIYLLaqa6uxmHT09Nzhc5vP8OvGLnw3Zl0BTHCpe5bhMMRypwOPv/s
      K7q+/Yw5Sc8Hv/xHDGKUby5cf9S3XuQRU7AbYZDu3QOBAFNTUyiKgk6nyy6IY7EYTqcz6+6c
      SqVIJBIr2vdNJhOhUAidTodGo0HU6bDb7ViMaQuSOyjx6gutzAzfvKNeb+c5ooKR2YUFamrt
      tDQ3MdvcSkt9NTd6PI/2ARR55BSsAkSjUdxu9x1HI5dOc+bn57NZYRKJBBqNBoPBsKKp1eFw
      YDab08GQFi0+drsdECktddBWZ+VXv36f4XE3byyplw7RLlNaUoLZZkUjLNZTaXFYTcvKKvLk
      ULDeoOPj43dEetZqtVRXVxOLxXC73SiKgiAIuFyuO84N5OsNOj18g65rA/jjKv7o3dfpPfMx
      k1I9rx66N7N70Ru0sNr1yDLFP2xyUYC5uTlmZ2fRaDQ4nU7MZjORSAS9Xk88Hmd8fByAkpKS
      O6w+RXfotVPoL+d6yCjYKVBmuiPLMmazmenpaYLBICpV+hxwaWkpyWQSh8OB1+tFrVZjNpvv
      c9UiRe4kbyuQoihZv5vsZ7K8+Nntv+U8B5jMVrUkSUxOTmYtPJlguFarlZqaGkKhENPT04yP
      jxOL3T+HQa4RxO6um44oVnSvflrIWwGu9lzgypVLXOtfTFekpLh47jt6uzsZdc+jKApdZ77k
      8q2J1S+0Ana7PeufEw6Hsdls2VApS92el5IpL0kSbreb2dlZZFkmHp7lzIVrAHzyySfLypsa
      HWVFI2o8yOj0POe++oR57wiffnstr3sqUnjkPQWKKyo6duyis7MbhXrk8ALqkhp2tpTTdWUI
      s+TFUtlIUr4dhzGX3ndhYeGO0WVpFOilodFtNlvWNygTLzQQCLCwsACkF8/T/T18/FEPthIb
      Q9e7eS/sp2brQYzRcW4OjlK7eR/S/Cj2mhoEOcXf//Sv0Ov1yPoSlJTCj3+wn6GREBpZRpYk
      ZDnFFx9/wDMvvIxVf/9HmM+oIy+Opo+q/HrVKXQZD7YGULgdH1QUQVFAURBIcaFnkHKnjZmQ
      hk0tNahE8Z4I06uh1+uzViBRFLOpkpZbSDocjttNWtwvyHh46nQ66ls3sWeviS3N1Qxt3skb
      x/bw0elxXMY4Gp2GG1evU2OWQRQRFZGKulaebbbRL2wk0fcdCVIEI3FKxfRi+eJXv+CF3/tz
      7Ma15yTO5d6hMDOyF2q7Hnmm+OWwG9R0dXfiKK9nZrQPnbMRdWSIzp4Zalu2sHvndmJBD1ZP
      ErUqrSW5uB2XlZVhNBrTjVzs3TNWpNWuIQgCFouF5uZmBEFAo9GQkI2EvFMs+EPpNojpdgyN
      TbKprYWeG15YGuGOpb9z+zPSLuB7jv0Ib98Z/O112I33D8eYaW8uLte5umjnWn696hS6jII1
      g0LaEpR54T0eD/Pz85jN5lWPNC5rElMU3BMjiOYy9CoFq9lAIJJEiQfwBJOUOeyoBQWj1Yqg
      KARDIYxaFQm0KPEIerOecERGrSTQGvUEgwkMaomkyoDFcP9RoGgGLVwZBWsGzUR80Ov1aDSa
      bKjEjL9/Tr71gkBlbeMdH1nNGjAbMdvv2gcQBKwWC7C4QNJZF8sDpN0mLOb0qFRMeffkU7AK
      MDs7y/z8PGq1mubmZpxOJ3Nzc1it1ryT4RUpcjcFqwAZu38qlWJychKAmpqaYgj0Ig+Vgu1K
      y8vLMZnSzmahUCibKb5IkYdJwSqAVqvNKgCQzRVQpMjDpGCnQJA+DhmPx1Gr1ZSUlOR18Bkg
      HvKRVFsw64uxm4vcScGOAJDe/XW5XFRUVKDRaFa19SqKwuTkJCMjI4TDYRRF4Xcf/CMjngiz
      A13cmAwSi6czxcRj0fTvUoKh0YnMBUjEY0RjcWRZXjxgk0RKJYnG4mnfpyW/p5JJopFI3r5O
      RQqDgh4BciGRSOD3+4F0jmGjQc9Q/028qi62VSY4f/Yk3ZE5fvLPf5+uMycZGpjg7X/+Ltdu
      DNDcUMvM8GW+ujCIb9rN2z8+ws/+4WP2H3uZyWvnMBr01Ox4gb7vPseo1+LafpALX7xP64Y6
      ZPMGXj5475mBIk8GBT0C5IJGo8nmCrNarQiiiuYNmznw/EGMGi37Dx+jvb4Sf3CWqRk/Ce8U
      M6HbvffgzVGO//AdtrTUArDr4HH2b61meNSNqFMz1nedkbEZRL0G98gkda3tvPTKcZK+ucd1
      y0UeAnmPADd6O4mkFEwOF5uaqkGR6L5wHgmBqsbNJP1TBMIJ4oqaPTvbH3neLFEUqaurI5lM
      Zk2lVRVOvvz4E/ZtMiAKIKpUSLEwwVgStUaDKAioVek+oGljLR///BfMjo7R2rERk9GASmNl
      U0sNMnra2rcgByaR0bOhtYbhxUR6KtVT04d8L8nbFaKzq5OO3bvp7Oxmd8du5LCH3rEIO1vL
      6bo6TMeONiKBea70T/DMrm3Z8wP5ukLkUiefE2ER7ywjs366O7v5yR/9/qqpjvI5EQY80lNn
      RVeIQnCFWPKeeiaHGZkNs3P7kzE/NlgdmP1hXnvzjUeS56uYo6AwyXsEuHm5k3BSwVxSjU0M
      oXM2MHylC0kQcDVu5lb3KUqr6jCYHbQ21SLwYM5wudQpngkunDqFLuOJ8QaFtKUnE9lNrVZT
      WlqavoklClJUgLVT6C/nesh4osyg8/PzWVMngM/nw+VyYX0IMUiLfD95okwYmTwAGWRZJhwO
      P6bWFHkaeKJGALvdjtFoRFEUvF4viUSiGAa9yAPxRClA5owvQFVV1WNuTZGngfzjAskS0btS
      kEpSilg8vng2XiYajT02XxlJkhgbG2NwcHBN8YKKfD/JewS40nMRld6IrLKwdVMjKEm6zl9E
      b9RidjYQnR0GnYGkomPHltaH2eY1EY1GCYVCAPj9/nvWD0WKwAOMAAnUbNmylXhoAQWQwl7U
      JTVsbd/CwuwMUVlgS9sWpGiA/GOx3SYYDDI8PMz8/PyaNpUMBgMGgwG1Wo1l8YxvkSJ389Di
      AgmiCmQJRZEXM0Wmv1cE8vYDSiaTjI6OolKpsmmR4vE4drv9vjZ1lUpFQ0NDnpKLfF/IewQo
      Meno6u6ktDIdF8iPFW18nu5L16itr8NpNdDV042tzJW3AoRCIeLxOJFIJBvX32w2r3nTKhv7
      pZgVvsgKFPROcCQSYXJyEpVKRW1t2k357p3fuynuBK+dQt+lXQ8Z66IAmdiguSpAJjMkrD2q
      Wq4y8k2UnasMyM0bNJ9nlWse4vWoU+gy1mUfQBCEbANzbagoijlPYXKRke80KVcZkJsC5Coj
      n/LrVaeQZazrRlg+8RuLMgpHRj51Cl3Guq4BihQpNJ4oZ7giRR426+4LND54g1lfFJ3ZQfvG
      xmVKpLjZe5mw2sruLS3c6O0ikkxR6mqlwbW845t7YpiZ+QDhuMyuzXVcujaIgoo9e3ejXm50
      lOJcvX6LRDyGw9VMyjtBMJbAXFbLhvrKZSqkmRnr4/p4kEMdG7nQdQUFFbv37kGnWk6IQtf5
      02gMNiprGojOTzAXiP7/7Z3rU9tVGsc/v18gXAqEkoZLuZVrIQG5BBht3akznU5dV9fZGd/s
      7Nv9g3yzq77Y0Vqt2nV0d1uLitauoggEEkgoUK6BhHAJuRBCbr/LviAUZlFu6gAACOdJREFU
      cJPWuqNbp/m+OzPn+X3POc88zznnOed3HnKLDJiaalJ+X4oEsdrnyC/UcbapBsvIGIgaTJ1m
      ClMk4lBVmdmpKXxb65Q0mpG8i8QkGUNNKzVluhQMsOtbZ3rRjSLLtHV2MG2zoqDSYOxGX5g6
      x/LdCQvRhEyBoRZ9VoQFjw+N9gTd7S38cPWx5pxnzuXlwvmncS/N4PHtoc3X0VSRj3XWjUaT
      RY+5A01SUImFsdmsFJw+S1NlCfembYSlIro7GpmZtBKOS5RU1FNXeepQD+5lHPMuLl54lg3X
      Mp7tINGYTIexFptjAUEQ6e4xoz3QixRl0u5ALDhFW1MlU7YpYlKM4orGX34G2PCH6TZ3kQht
      I6dcfGloNraSLaqARDgh0m3uxetZSvvNssoztJlaUBMx3C4nTe1mGsuycfliqQVELc3NzZTo
      TiBJMYIRma7uHna87rQccmIPTyBGoVZga3WOKmMP7WeKWNrYTS2gSoR2oohZOeiK8tkKRuju
      7iays5mWY25unvzCfHLy8gitzaFv6KKjuRLnWuqXJwRBQ4upnbzCk5wpyydOLt09vWy6FtJy
      7IV3KdSXo8sV8HpWyS+rp6u9BVcy6+Z/QyIcF+ky9+LfWGHJ46XXbCZLCZNIkfmmvLoevS4f
      AM/2LmZzF2rYz9S8m94+M4Y8kUDkMBmVoM2n9WwTgiqDINLUakQrCKhSjF1Fi9ncy7bHeYzD
      UFFDmX7/H5DSylraTa0IUozFZRetHV3UlxWw7jtyTV6TQ6uxFY2aALJoam1BX1yAJEn/jyXQ
      /VQTpN58CIj33Yr6oyI00V0/I6NW2jq7EJL5g0VRTJ+aSBCI7O4QTSioipzkIG2LABxjFnIL
      CvD5fETiMqIgPoQjm+cuXaK5rgLbhGO/Dw/Zq8VjcU7XNCCGt/D4w4iiiCgIqGr6yySR4Aaa
      AgNaEQThIGL2gG2dIJKI7JJQRFRZSkbZxAdcWsyiskyHY2qaSFw+3o8UIscjXQfJRkBBQEzq
      9ijX4diT1Nt+QVWTG9UUuj/KEdv1MzwyztmOLrIEEAWS/TkyZsI+90GbIuEdInEVFOmXXwIV
      52uw2myouYWkXDlIUe5Oz7Di3sJgMKBRItjGRynS16b9pt06hlZXjtvlorq8EvvkGKok03su
      9QW4RHSXFfc6qDIaCXJEiQnbOHlFpWk5Gk0dROMx1rVaSqvqsNpHEBSFrqcbU9ZXpDjT03eR
      ZZWi4lNoIl4mbDY0ucXpOeprmJyaQpBitLYbmbRZ2NIInO3oSSszt+Cm8akuBA2o8SDWsVGK
      SxvS1lfkBNFIBDUWwVDTgGdmCqtHoLq5M62MqqioUpTK6jpOyAEsVhuKkk12CgWuLN7D6Vwh
      90QJJQXZWG0TKNknaCnLZ3h0HBSZviNJReLhIDOzc2zuQUlRHlvuRZwrXvQVJWQndrFZLRTq
      Tx/jWFtZwOlcITu3iKBnHm1hGR6Xi6qKUiZtEwiKRHffoV6k6C4zs/dY3dimRFfI+sYmIjJi
      Qv7lo0AHh2Jp4/uqipz0qgfe/4H1OTxpBRA1IqqiAOJ9b5KqDaqioHLoTR7GkZRMeqaDwy0B
      QRTTOPb9dKr7ucE0yfLDORRFBg5nsIM2ppNQFPWI11SS5fQcB+N/MEuqioLyUA7lWI6zB/VD
      keXkxLDvzY/m71IVBYTjejloM+zr+0CPD9L9IcdxGVHUoKqH4/fDPu/XF0E9Mq6ZMGgGTzIy
      YdAMnmhkDCCDJxoZA8jgiUbGAB4ZCcaHvmNwcJARqwPlyA4q7N9kK3D8mRZVCXHnjuWghHfN
      yYjFRlz6cf/JrblWiCUeLQv6o+CrO3eIhjYYGp3+2TgeZ2QM4CdAikf4x81+ZFkmsuOl/9Yt
      3N4gX9+8xhtvvYtrK8DQnQG+HrYhK1Ec9nkAfE4Hf7nyEcHtDYLROBPDX/OtxYEkRZibd7Kz
      5WJl3cfkxDhfftaPxxvgyhuv8v6H/URUFUWKMfjV53xrcaCoClPjQ8wsrTAzPcvo8Ci7IR+f
      3fqE1c0A4cAmt27eYNHtxb14lxuffEpgb/8AannGxs3+AULRBHaHnXg0wOzcKqAy65gkKqtM
      T90lEg4w0H8L93aIHe8an9y4wZLHh2t5gXvTdpZcG9wZ6Mdin3vQycNjjYwBPDKy6Tt/nura
      MzzT08H1d66g0+u5evVdik+epLyqlkKtjNcf4vbHf2c1uHdf0m4d5aU//ZlLly8jrY7x76kN
      VsYHGJ1xMjRsw7vkYPKem5s3b1GkTfDRwPcUn9RTV3+GLECK7RHY2eXzj9/FNj7EgGUZbRZ8
      +PabBKUs/nntKrklBt5+623u9H+E0xsmHN7h+rX3iSVihCNxALzb22yv2PnX7fEf9E3Av3qX
      8ZlFvhka49MP30OjO8kH711nJ+AjGgtz9Z0PuDtymy+GZwktW/hybOFX/ThZxgD+R+xJKkaj
      iSw1gcFg4FR5NfLWAn6xhPoKPXH5cKlzuqKcCesE8UiYgD9IWW0T9VUGQuEYiUScUCgEQGl1
      Hb2dRiRFwaA/RW3SANYXJ4nlVVJdpmMnEKS0poHTpSWU17dx8Vwn0ZiK0WQkB5mnzl2kphgG
      h2w8/+KL7K3PM7W4DnKYcYeTzo5WpBTPxXSe+w23r71BtbGHgN9PcCdMQ0MtY8MjNLd3kaNR
      IOsEv3vxBeqNZi501TP47eD9WP6vDRkD+CkQNLQZWwB45eUX+Nvrr3Hh8u+pMfXhttzCLZew
      szgGxafR5RViMu2fzDb2XaZSdfLqX9/E0H4Bzer3TPoLeK67hTxpnXFniOqKElqaGkFbRFtj
      NeeffYbrb14hrMKp6mbWHIPkldbT1vsc+T4H31nv0dLahCAIvPyH3/LO669x7vmXiPg3ccw4
      6e3rZs25wPqelqeaT4OYS9VJkbG5bZrOVGAymcjO1dHcUAVATlEFuuKT9HU28tIrr7BsHyOO
      lrMtDdz+8htaja1U1jVSmJuFFN/Dbndg6ughzZnjY4/MQVgGx+AY+oLJTYE/vnzxZ8/q8zgg
      YwAZPNH4Dwy4uzEslFKHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Thai coffee dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Thai tea dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 4 Competitors dashboard' width='192'>
      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
      ttO3DID/D5YurWS6N5eIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Xiao Ya Tou Insights' width='192'>
      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
      eAW2bVY+cMAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
